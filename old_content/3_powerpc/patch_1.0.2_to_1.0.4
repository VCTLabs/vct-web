diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/CHANGELOG ppc_diag/CHANGELOG
--- ppc_diag-1.0.2/CHANGELOG	Fri Feb  7 14:05:01 2003
+++ ppc_diag/CHANGELOG	Mon May 12 16:01:56 2003
@@ -1,3 +1,23 @@
+Version 1.0.4
+
+o Implemented general serial console support controlled by config defines
+  SERIAL_SMC = {1,2} or SERIAL_SCC = {1,2,3,4} to handle console on
+  SMC1, SMC2, SCC1, SCC2, SCC3, or SCC4 (tested with console on SMC1 and SCC1)
+
+o Allow an upper limit of memory size to be supplied to memory calculation 
+  code, instead of defaulting to the constant 512MB
+
+o Fixed problem with timing loops when running without ppcboot
+
+o Added NAND flash tests
+
+o Added Red Box tests
+
+Version 1.0.3
+
+o Moved the gendiags.sh variables into the Makefile to make them easy to
+  override if necessary.
+
 Version 1.0.2
 
 o Added instruction cache support.  The instruction cache is disabled at
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/TODO ppc_diag/TODO
--- ppc_diag-1.0.2/TODO	Fri Feb  7 14:05:01 2003
+++ ppc_diag/TODO	Thu May  1 11:31:26 2003
@@ -31,3 +31,6 @@
   testing only after removing the ethernet cable, or after attaching a loopback
   connector (that's partly why this testing is not done during power-up).
 
+- NAND code isn't ready to run with the icache on; the processor is slow
+  enough with caching disabled that certain delays were unnecessary.
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/build/Makefile ppc_diag/build/Makefile
--- ppc_diag-1.0.2/build/Makefile	Fri Feb  7 14:45:13 2003
+++ ppc_diag/build/Makefile	Thu May  1 11:31:26 2003
@@ -20,7 +20,7 @@
 # MA 02111-1307 USA
 #
 
-DIAG_VERSION = "Version 1.0.2"
+DIAG_VERSION = "Version 1.0.4"
 COPYRIGHT    = "(c) 2002, VCT Labs"
 VERSION_FILE = "../diag_ui/version.c"
 VERSION_OBJ  = "../diag_ui/version.o"
@@ -68,11 +68,13 @@
 OBJDUMP	= $(CROSS_COMPILE)objdump
 
 TFTPBASEDIR = /ppcboot
+MKIMAGE = /usr/local/powerpc-linux/mkimage
 #GEN_DIAG = /usr/local/powerpc-linux/gendiags.sh $(TARGET) diags $(CODE_BASE_HEX)
 GEN_DIAG = ./gendiags.sh $(TARGET) diags $(CODE_BASE_HEX) $(TFTPBASEDIR)
 
 export	VERSION CONFIG_SHELL HPATH HOSTCC HOSTCFLAGS CROSS_COMPILE AS LD CC \
-	CPP AR NM STRIP OBJCOPY OBJDUMP MAKE MAKEFILES GENKSYMS MODFLAGS MKDEP
+	CPP AR NM STRIP OBJCOPY OBJDUMP MAKE MAKEFILES GENKSYMS MODFLAGS MKDEP \
+	MKIMAGE
 
 #
 # standard CFLAGS
@@ -100,9 +102,11 @@
 		  fec \
 		  led \
 		  memory \
+          nflash \
 		  nvram \
 		  greenbox_dpram \
 		  greenbox_xilinx \
+		  redbox \
 		  reg \
 		  rtc \
 		  scc_eth \
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/build/gendiags.sh ppc_diag/build/gendiags.sh
--- ppc_diag-1.0.2/build/gendiags.sh	Thu Jan  9 16:27:46 2003
+++ ppc_diag/build/gendiags.sh	Tue Feb 11 16:03:43 2003
@@ -21,9 +21,6 @@
 # MA 02111-1307 USA
 #
 
-MKIMAGEDIR=/usr/local/powerpc-linux
-BINUTILSPATH=/usr/local/bin/powerpc-linux-
-
 function usage()
 {
   echo "usage: $0 <NAME> [LABEL] [ENTRY]"
@@ -56,8 +53,8 @@
 fi
 
 #### Test for boot to standalone program
-${BINUTILSPATH}objcopy -O binary $FILE $FILE.raw; gzip $FILE.raw
-$MKIMAGEDIR/mkimage -n "$LABEL" -A ppc -O ppcboot -T standalone -C gzip -a $ENTRY -e $ENTRY -d $FILE.raw.gz $FILE.img
+${OBJCOPY} -O binary $FILE $FILE.raw; gzip $FILE.raw
+${MKIMAGE} -n "$LABEL" -A ppc -O ppcboot -T standalone -C gzip -a $ENTRY -e $ENTRY -d $FILE.raw.gz $FILE.img
 
 #powerpc-linux-objcopy -I binary -O srec $FILE.img $FILE.srec
 cp -f $FILE.img $TFTPPATH
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/build/link.cmd ppc_diag/build/link.cmd
--- ppc_diag-1.0.2/build/link.cmd	Wed Dec 31 16:00:00 1969
+++ ppc_diag/build/link.cmd	Mon May 12 14:52:26 2003
@@ -0,0 +1,94 @@
+/* Linker script
+Mon May 12 14:52:26 PDT 2003
+automatically generated by "make link" */
+MEMORY
+{
+  text (rx)    : ORIGIN = 0x2000, LENGTH = 504K
+  rodata (rwx) : ORIGIN = 0x00080000, LENGTH = 64K
+  data (rwx)   : ORIGIN = 0x00090000, LENGTH = 192K
+  bss (rwx)    : ORIGIN = 0x000C0000, LENGTH = 256K
+}
+SECTIONS
+{
+  .text   : { *(.text) } >text
+  .rodata : { *(.rodata) } >rodata
+  .data   : { *(.data) } >data
+  .bss    : { *(.bss) } >bss
+}
+STARTUP(../entry/start.o)
+INPUT(../console/serial.o)
+INPUT(../diag_ui/version.o)
+INPUT(../diag_ui/center.o)
+INPUT(../diag_ui/clear_screen.o)
+INPUT(../diag_ui/diag_menu.o)
+INPUT(../diag_ui/system_log.o)
+INPUT(../diag_ui/run_test.o)
+INPUT(../diag_ui/input_hdlr.o)
+INPUT(../diag_ui/option_input.o)
+INPUT(../diag_ui/option_menu.o)
+INPUT(../diag_ui/submenu_input.o)
+INPUT(../diag_ui/sub_menu.o)
+INPUT(../diag_ui/main_menu.o)
+INPUT(../diag_ui/main_input.o)
+INPUT(../diag_ui/power_up.o)
+INPUT(../diag_ui/nv_journal.o)
+INPUT(../entry/diag_init.o)
+INPUT(../eth_tests/eth_fec_test.o)
+INPUT(../eth_tests/eth_scc1_test.o)
+INPUT(../eth_tests/eth_menu.o)
+INPUT(../eth_tests/eth_err.o)
+INPUT(../eth_tests/crossover.o)
+INPUT(../fec/fec.o)
+INPUT(../led/led_test.o)
+INPUT(../led/led_menu.o)
+INPUT(../led/led_err.o)
+INPUT(../memory/mem_test.o)
+INPUT(../memory/mem_menu.o)
+INPUT(../memory/mem_err.o)
+INPUT(../memory/mem_init.o)
+INPUT(../memory/dma_test.o)
+INPUT(../memory/mem_comp.o)
+INPUT(../nflash/nandf_ops.o)
+INPUT(../nflash/nflash_err.o)
+INPUT(../nflash/nflash_menu.o)
+INPUT(../nflash/nflash_init.o)
+INPUT(../nflash/nflash_test.o)
+INPUT(../nvram/nvram.o)
+INPUT(../nvram/nvram_err.o)
+INPUT(../nvram/nvram_menu.o)
+INPUT(../greenbox_dpram/gb_dpram_menu.o)
+INPUT(../greenbox_dpram/gb_dpram_err.o)
+INPUT(../greenbox_dpram/gb_dpram_test.o)
+INPUT(../greenbox_xilinx/gb_xilinx_menu.o)
+INPUT(../greenbox_xilinx/gb_xilinx_err.o)
+INPUT(../greenbox_xilinx/gb_xilinx_test.o)
+INPUT(../greenbox_xilinx/gb_xilinx_intr.o)
+INPUT(../redbox/redbox_test.o)
+INPUT(../redbox/redbox_menu.o)
+INPUT(../redbox/redbox_err.o)
+INPUT(../redbox/xmit_buf.o)
+INPUT(../reg/reg_test.o)
+INPUT(../reg/reg_menu.o)
+INPUT(../rtc/rtc.o)
+INPUT(../rtc/date.o)
+INPUT(../rtc/rtc_menu.o)
+INPUT(../scc_eth/scc.o)
+INPUT(../system/ticks.o)
+INPUT(../system/cache.o)
+INPUT(../system/ctype.o)
+INPUT(../system/string.o)
+INPUT(../system/vsprintf.o)
+INPUT(../system/printf.o)
+INPUT(../system/time.o)
+INPUT(../system/cpu.o)
+INPUT(../system/dboard_cfg.o)
+INPUT(../system/timer.o)
+INPUT(../system/interrupts.o)
+INPUT(../util/speed.o)
+INPUT(../util/mem_calc.o)
+INPUT(../util/mem_display.o)
+INPUT(../util/prandm.o)
+INPUT(../util/pkt_stat.o)
+INPUT(../util/detect_db.o)
+ENTRY(start_here)
+OUTPUT(ppc_diag)
Binary files ppc_diag-1.0.2/build/ppc_diag.img and ppc_diag/build/ppc_diag.img differ
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/console/.cvsignore ppc_diag/console/.cvsignore
--- ppc_diag-1.0.2/console/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/console/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/console/.depend ppc_diag/console/.depend
--- ppc_diag-1.0.2/console/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/console/.depend	Mon May 12 14:51:51 2003
@@ -0,0 +1,4 @@
+serial.o: serial.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   commproc.h \
+   serial.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/console/console.list ppc_diag/console/console.list
--- ppc_diag-1.0.2/console/console.list	Fri Jan  3 10:40:06 2003
+++ ppc_diag/console/console.list	Thu May  1 11:31:26 2003
@@ -1,6 +1,6 @@
 # list of console files
 
-HEADERS="8xx_immap.h command.h commproc.h"
+HEADERS="8xx_immap.h command.h commproc.h serial.h"
 
 AS_SOURCES=
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/console/serial.c ppc_diag/console/serial.c
--- ppc_diag-1.0.2/console/serial.c	Mon Jul 29 10:09:56 2002
+++ ppc_diag/console/serial.c	Thu May  1 11:31:26 2003
@@ -23,11 +23,20 @@
 
 #include "ppcboot.h"
 #include "commproc.h"
+#include "serial.h"
 
-#define	SMC_INDEX	0
-#undef 	SCC_INDEX
-#define PROFF_SMC	PROFF_SMC1
-#define CPM_CR_CH_SMC	CPM_CR_CH_SMC1
+static struct serial_port console_table[] = {
+	/*   
+	 *   parameter    irq        port  cpm           port 
+	 *   offset                  type  channel       num
+	 */
+  	{ PROFF_SMC1, CPMVEC_SMC1,   SMC, CPM_CR_CH_SMC1, 0 },    /* SMC1 */
+  	{ PROFF_SMC2, CPMVEC_SMC2,   SMC, CPM_CR_CH_SMC2, 1 },    /* SMC2 */
+  	{ PROFF_SCC1, CPMVEC_SCC1,   SCC, CPM_CR_CH_SCC1, 0 },    /* SCC1 */
+  	{ PROFF_SCC2, CPMVEC_SCC2,   SCC, CPM_CR_CH_SCC2, 1 },    /* SCC2 */
+  	{ PROFF_SCC3, CPMVEC_SCC3,   SCC, CPM_CR_CH_SCC3, 2 },    /* SCC3 */
+  	{ PROFF_SCC4, CPMVEC_SCC4,   SCC, CPM_CR_CH_SCC4, 3 },    /* SCC4 */
+};
 
 /*
  * Minimal serial functions needed to use one of the SMC ports
@@ -38,11 +47,16 @@
 serial_init (ulong cpu_clock, int baudrate)
 {
         volatile immap_t *im = (immap_t *)CFG_IMMR;
-	volatile smc_t *sp;
+	volatile smc_t *smcp;
+	volatile scc_t		*sccp;
 	volatile smc_uart_t *up;
+	volatile scc_uart_t	*sup;
 	volatile cbd_t *tbdf, *rbdf;
-	volatile cpm8xx_t *cp = &(im->im_cpm);
+	volatile cpm8xx_t *cpmp = &(im->im_cpm);
 	uint	dpaddr;
+	struct serial_port *port_info;
+
+	port_info = &(console_table[SERIAL_INDEX]);
 
        /*
         * Reset CPM -- taken from cpu_init.c
@@ -54,12 +68,47 @@
 
 	/* initialize pointers to SMC */
 
-	sp = (smc_t *) &(cp->cp_smc[SMC_INDEX]);
-	up = (smc_uart_t *) &cp->cp_dparam[PROFF_SMC];
+        if (port_info->type == SMC)
+        {
+	  smcp = (smc_t *) &(cpmp->cp_smc[port_info->index]);
+          up = (smc_uart_t *) &cpmp->cp_dparam[port_info->param_offset];
+
+	  /* Disable transmitter/receiver.
+	  */
+	  smcp->smc_smcmr &= ~(SMCMR_REN | SMCMR_TEN);
+
+	  /* Use all relevant port B pins as SMC signals (not general IO)
+	  */
+	  cpmp->cp_pbpar |=  0x00000cc0;
+	  cpmp->cp_pbdir &= ~0x00000cc0;
+	  cpmp->cp_pbodr &= ~0x00000cc0;
+        }
+        else
+        {
+	  sccp = (scc_t *) &(cpmp->cp_scc[port_info->index]);
+          sup = (scc_uart_t *) &cpmp->cp_dparam[port_info->param_offset];
+
+	  /* Disable transmitter/receiver.
+	  */
+	  sccp->scc_sccm &= ~(SMCMR_REN | SMCMR_TEN);
+          sccp->scc_gsmrl &= ~(SCC_GSMRL_ENR | SCC_GSMRL_ENT);
+
+	  /* Use all relevant port A pins as SCC signals (not general IO)
+	  */
+	  im->im_ioport.iop_papar |= 0x00ff;
+	  im->im_ioport.iop_padir &= ~0x00ff;
+	  im->im_ioport.iop_paodr &= ~0x00ff;
+
+	  /* Since we don't yet do modem control, connect the port C pins
+	   * as general purpose I/O.  This will assert CTS and CD for the
+	   * SCC ports.
+	   */
+	  im->im_ioport.iop_pcpar &= ~(0x30 << (2*port_info->index));
+	  im->im_ioport.iop_pcdir |= (0x30 << (2*port_info->index));
+	  im->im_ioport.iop_pcso &= ~(0x30 << (2*port_info->index));
+	  im->im_ioport.iop_pcdat &= ~(0x30 << (2*port_info->index));
 
-	/* Disable transmitter/receiver.
-	*/
-	sp->smc_smcmr &= ~(SMCMR_REN | SMCMR_TEN);
+        }
 
 	/* Enable SDMA.
 	*/
@@ -79,12 +128,6 @@
 	im->im_sdma.sdma_sdmr = 0x00;
 #endif
 
-	/* Use Port B for SMC1 instead of other functions.
-	*/
-	cp->cp_pbpar |=  0x000000c0;
-	cp->cp_pbdir &= ~0x000000c0;
-	cp->cp_pbodr &= ~0x000000c0;
-
 	/* Set the physical address of the host memory buffers in
 	 * the buffer descriptors.
 	 */
@@ -101,7 +144,7 @@
 	 * damm: allocating space after the two buffers for rx/tx data
 	 */
 
-	rbdf = (cbd_t *)&cp->cp_dpmem[dpaddr];
+	rbdf = (cbd_t *)&cpmp->cp_dpmem[dpaddr];
 	rbdf->cbd_bufaddr = (uint) (rbdf+2);
 	rbdf->cbd_sc = 0;
 	tbdf = rbdf + 1;
@@ -110,20 +153,48 @@
 
 	/* Set up the uart parameters in the parameter ram.
 	*/
-	up->smc_rbase = dpaddr;
-	up->smc_tbase = dpaddr+sizeof(cbd_t);
-	up->smc_rfcr = SMC_EB;
-	up->smc_tfcr = SMC_EB;
+        if (port_info->type == SMC)
+        {
+	  up->smc_rbase = dpaddr;
+	  up->smc_tbase = dpaddr+sizeof(cbd_t);
+	  up->smc_rfcr = SMC_EB;
+	  up->smc_tfcr = SMC_EB;
+	}
+	else
+	{
+	 sup->scc_genscc.scc_rbase = dpaddr;
+	 sup->scc_genscc.scc_tbase = dpaddr+sizeof(cbd_t);
+         sup->scc_genscc.scc_rfcr = SMC_EB;
+         sup->scc_genscc.scc_tfcr = SMC_EB;
+	}
 
 	/* Set UART mode, 8 bit, no parity, one stop.
-	 * Enable receive and transmit.
 	 */
-	sp->smc_smcmr = smcr_mk_clen(9) |  SMCMR_SM_UART;
+        if (port_info->type == SMC)
+        {
+	  smcp->smc_smcmr = smcr_mk_clen(9) |  SMCMR_SM_UART;
+	}
+	else
+	{
+	  sccp->scc_gsmrh = 0;
+	  sccp->scc_gsmrl = 
+		(SCC_GSMRL_MODE_UART | SCC_GSMRL_TDCR_16 | SCC_GSMRL_RDCR_16);
+	}
 
 	/* Mask all interrupts and remove anything pending.
 	*/
-	sp->smc_smcm = 0;
-	sp->smc_smce = 0xff;
+        if (port_info->type == SMC)
+        {
+	  smcp->smc_smcm = 0;
+	  smcp->smc_smce = 0xff;
+	}
+	else
+	{
+	  sccp->scc_sccm = 0;
+	  sccp->scc_scce = 0xffff;
+	  sccp->scc_dsr = 0x7e7e;
+	  sccp->scc_psmr = 0x3000;
+	}
 
 	/* Set up the baud rate generator.
 	*/
@@ -136,23 +207,55 @@
 
 	/* Single character receive.
 	*/
-	up->smc_mrblr = 1;
-	up->smc_maxidl = 0;
+        if (port_info->type == SMC)
+        {
+	  up->smc_mrblr = 1;
+	  up->smc_maxidl = 0;
+	}
+	else
+	{
+	  sup->scc_genscc.scc_mrblr = 1;
+	  sup->scc_maxidl = 0;
+	  sup->scc_brkcr = 1;
+	  sup->scc_parec = 0;
+	  sup->scc_frmec = 0;
+	  sup->scc_nosec = 0;
+	  sup->scc_brkec = 0;
+	  sup->scc_uaddr1 = 0;
+	  sup->scc_uaddr2 = 0;
+	  sup->scc_toseq = 0;
+	  sup->scc_char1 = 0x8000;
+	  sup->scc_char2 = 0x8000;
+	  sup->scc_char3 = 0x8000;
+	  sup->scc_char4 = 0x8000;
+	  sup->scc_char5 = 0x8000;
+	  sup->scc_char6 = 0x8000;
+	  sup->scc_char7 = 0x8000;
+	  sup->scc_char8 = 0x8000;
+	  sup->scc_rccm = 0xc0ff;
+	}
 
 	/* Initialize Tx/Rx parameters.
 	*/
 
-	while (cp->cp_cpcr & CPM_CR_FLG)  /* wait if cp is busy */
+	while (cpmp->cp_cpcr & CPM_CR_FLG)  /* wait if cp is busy */
 	  ;
 
-	cp->cp_cpcr = mk_cr_cmd(CPM_CR_CH_SMC, CPM_CR_INIT_TRX) | CPM_CR_FLG;
+	cpmp->cp_cpcr = mk_cr_cmd(port_info->channel, CPM_CR_INIT_TRX) | CPM_CR_FLG;
 
-	while (cp->cp_cpcr & CPM_CR_FLG)  /* wait if cp is busy */
+	while (cpmp->cp_cpcr & CPM_CR_FLG)  /* wait if cp is busy */
 	  ;
 
 	/* Enable transmitter/receiver.
 	*/
-	sp->smc_smcmr |= SMCMR_REN | SMCMR_TEN;
+        if (port_info->type == SMC)
+        {
+	  smcp->smc_smcmr |= SMCMR_REN | SMCMR_TEN;
+	}
+	else
+	{
+ 	  sccp->scc_gsmrl |= (SCC_GSMRL_ENR | SCC_GSMRL_ENT);
+        }
 }
 
 
@@ -160,17 +263,17 @@
 serial_setbrg (ulong cpu_clock, int baudrate)
 {
         volatile immap_t *im = (immap_t *)CFG_IMMR;
-	volatile cpm8xx_t *cp = &(im->im_cpm);
+	volatile cpm8xx_t *cpmp = &(im->im_cpm);
 
 	/* Set up the baud rate generator.
 	 * See 8xx_io/commproc.c for details.
 	 *
-	 * Wire BRG1 to SMCx
+	 * Wire BRG1 to SMCx and SCCx
 	 */
+	cpmp->cp_simode = 0x00000000;
+	cpmp->cp_sicr = 0x00000000; 
 
-	cp->cp_simode = 0x00000000;
-
-	cp->cp_brgc1 =
+	cpmp->cp_brgc1 =
 		(((cpu_clock / 16 / baudrate)-1) << 1) | CPM_BRG_EN;
 }
 
@@ -181,15 +284,27 @@
 	volatile cbd_t		*tbdf;
 	volatile char		*buf;
 	volatile smc_uart_t	*up;
+	volatile scc_uart_t	*sup;
         volatile immap_t	*im = (immap_t *)CFG_IMMR;
 	volatile cpm8xx_t	*cpmp = &(im->im_cpm);
+	struct serial_port *port_info;
+
+	port_info = &(console_table[SERIAL_INDEX]);
 
 	if (c == '\n')
 		serial_putc ('\r');
 
-	up = (smc_uart_t *)&cpmp->cp_dparam[PROFF_SMC];
+        if (port_info->type == SMC)
+	{
+	  up = (smc_uart_t *)&cpmp->cp_dparam[port_info->param_offset];
+	  tbdf = (cbd_t *)&cpmp->cp_dpmem[up->smc_tbase];
+	}
+	else
+	{
+          sup = (scc_uart_t *) &cpmp->cp_dparam[port_info->param_offset];
+	  tbdf = (cbd_t *)&cpmp->cp_dpmem[sup->scc_genscc.scc_tbase];
+	}
 
-	tbdf = (cbd_t *)&cpmp->cp_dpmem[up->smc_tbase];
 
 	/* Wait for last character to go.
 	*/
@@ -218,13 +333,24 @@
 	volatile cbd_t		*rbdf;
 	volatile unsigned char	*buf;
 	volatile smc_uart_t	*up;
+	volatile scc_uart_t	*sup;
         volatile immap_t	*im = (immap_t *)CFG_IMMR;
 	volatile cpm8xx_t	*cpmp = &(im->im_cpm);
 	unsigned char		c;
+	struct serial_port *port_info;
 
-	up = (smc_uart_t *)&cpmp->cp_dparam[PROFF_SMC];
+	port_info = &(console_table[SERIAL_INDEX]);
 
-	rbdf = (cbd_t *)&cpmp->cp_dpmem[up->smc_rbase];
+        if (port_info->type == SMC)
+	{
+	  up = (smc_uart_t *)&cpmp->cp_dparam[port_info->param_offset];
+	  rbdf = (cbd_t *)&cpmp->cp_dpmem[up->smc_rbase];
+	}
+	else
+	{
+          sup = (scc_uart_t *) &cpmp->cp_dparam[port_info->param_offset];
+	  rbdf = (cbd_t *)&cpmp->cp_dpmem[sup->scc_genscc.scc_rbase];
+	}
 
 	/* Wait for character to show up.
 	*/
@@ -243,12 +369,23 @@
 {
 	volatile cbd_t		*rbdf;
 	volatile smc_uart_t	*up;
+	volatile scc_uart_t	*sup;
         volatile immap_t	*im = (immap_t *)CFG_IMMR;
 	volatile cpm8xx_t	*cpmp = &(im->im_cpm);
+	struct serial_port *port_info;
 
-	up = (smc_uart_t *)&cpmp->cp_dparam[PROFF_SMC];
+	port_info = &(console_table[SERIAL_INDEX]);
 
-	rbdf = (cbd_t *)&cpmp->cp_dpmem[up->smc_rbase];
+        if (port_info->type == SMC)
+	{
+	  up = (smc_uart_t *)&cpmp->cp_dparam[port_info->param_offset];
+	  rbdf = (cbd_t *)&cpmp->cp_dpmem[up->smc_rbase];
+	}
+	else
+	{
+          sup = (scc_uart_t *) &cpmp->cp_dparam[port_info->param_offset];
+	  rbdf = (cbd_t *)&cpmp->cp_dpmem[sup->scc_genscc.scc_rbase];
+	}
 
 	return(!(rbdf->cbd_sc & BD_SC_EMPTY));
 }
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/console/serial.h ppc_diag/console/serial.h
--- ppc_diag-1.0.2/console/serial.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/console/serial.h	Thu May  1 11:31:26 2003
@@ -0,0 +1,54 @@
+/*
+ * (C) Copyright 2003
+ * Stephanie Lockwood-Childs, VCT Labs, sjl@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __SERIAL_H
+#define __SERIAL_H
+
+#include "diags.h"
+
+#ifdef SERIAL_SMC 
+  #if !(SERIAL_SMC >= 1 && SERIAL_SMC <= 2)
+  #error "bad value for SERIAL_SMC (must be 1 or 2)"
+  #endif
+#define SERIAL_INDEX (SERIAL_SMC - 1)
+#elif defined(SERIAL_SCC)
+  #if !(SERIAL_SCC >= 1 && SERIAL_SCC <= 4)
+  #error "bad value for SERIAL_SCC (must be between 1 and 4)"
+  #endif
+#define SERIAL_INDEX (SERIAL_SCC + 1)
+#else
+#error "no console serial port defined (define SERIAL_SMC or SERIAL_SCC)"
+#endif
+
+struct serial_port
+{
+  int param_offset;
+  int irq;
+  int type;
+  int channel;
+  int index;
+};
+
+#define SMC 1
+#define SCC 2
+
+#endif	/* __SERIAL_H */
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/diag_ui/.cvsignore ppc_diag/diag_ui/.cvsignore
--- ppc_diag-1.0.2/diag_ui/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/diag_ui/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend version.c .*.swp *.out
+Makefile .depend version.c .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/diag_ui/.depend ppc_diag/diag_ui/.depend
--- ppc_diag-1.0.2/diag_ui/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/diag_ui/.depend	Mon May 12 14:51:52 2003
@@ -0,0 +1,92 @@
+center.o: center.c \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   center.h
+clear_screen.o: clear_screen.c \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   clear_screen.h
+diag_menu.o: diag_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   diag_menu.h
+system_log.o: system_log.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/date.h \
+   system_log.h
+run_test.o: run_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   system_log.h \
+   /home/speedy1/build/ppc_diag/includes/led_test.h \
+   run_test.h
+input_hdlr.o: input_hdlr.c \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   input_hdlr.h
+option_input.o: option_input.c \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   diag_menu.h \
+   input_hdlr.h \
+   option_menu.h \
+   option_input.h
+option_menu.o: option_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   center.h \
+   clear_screen.h \
+   option_menu.h \
+   option_input.h
+submenu_input.o: submenu_input.c \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   option_menu.h \
+   run_test.h \
+   input_hdlr.h \
+   submenu_input.h
+sub_menu.o: sub_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/date.h \
+   sub_menu.h \
+   center.h \
+   clear_screen.h \
+   submenu_input.h
+main_menu.o: main_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/detect_db.h \
+   /home/speedy1/build/ppc_diag/includes/date.h \
+   center.h \
+   clear_screen.h \
+   diag_menu.h \
+   main_input.h
+main_input.o: main_input.c \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   diag_menu.h \
+   sub_menu.h \
+   run_test.h \
+   system_log.h \
+   nv_journal.h \
+   input_hdlr.h \
+   main_input.h
+power_up.o: power_up.c \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   diag_menu.h \
+   run_test.h
+nv_journal.o: nv_journal.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/string.h \
+   input_hdlr.h \
+   /home/speedy1/build/ppc_diag/includes/nvram.h \
+   nv_journal.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/diag_ui/diag_menu.c ppc_diag/diag_ui/diag_menu.c
--- ppc_diag-1.0.2/diag_ui/diag_menu.c	Thu Jan  9 16:27:46 2003
+++ ppc_diag/diag_ui/diag_menu.c	Thu May  1 11:31:26 2003
@@ -35,6 +35,9 @@
 #ifdef ENABLE_NVRAM_SUPPORT
 extern test_submenu_package nvram_package;
 #endif
+#ifdef ENABLE_NAND_FLASH_SUPPORT
+extern test_submenu_package nflash_package;
+#endif
 extern test_submenu_package memory_package;
 #ifdef ENABLE_FEC_SUPPORT
 extern test_submenu_package fec_ethernet_package;
@@ -47,6 +50,9 @@
 extern test_submenu_package gb_dpram_package;
 extern test_submenu_package gb_xilinx_package;
 #endif
+#ifdef ENABLE_RED_BOX_SUPPORT
+extern test_submenu_package redbox_package;
+#endif
 
 void empty_function( void );
 
@@ -64,6 +70,9 @@
 #ifdef ENABLE_NVRAM_SUPPORT
     &nvram_package,
 #endif
+#ifdef ENABLE_NAND_FLASH_SUPPORT
+    &nflash_package,
+#endif
     &memory_package,
 #ifdef ENABLE_FEC_SUPPORT
     &fec_ethernet_package,
@@ -75,6 +84,9 @@
 #ifdef ENABLE_GREEN_BOX_SUPPORT
     &gb_dpram_package,
     &gb_xilinx_package,
+#endif
+#ifdef ENABLE_RED_BOX_SUPPORT
+    &redbox_package,
 #endif
 };
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/diag_ui/diag_menu.h ppc_diag/diag_ui/diag_menu.h
--- ppc_diag-1.0.2/diag_ui/diag_menu.h	Thu Jan  9 16:27:46 2003
+++ ppc_diag/diag_ui/diag_menu.h	Thu May  1 11:31:26 2003
@@ -34,6 +34,9 @@
 #ifdef ENABLE_NVRAM_SUPPORT
     NVRAMPackage,
 #endif
+#ifdef ENABLE_NAND_FLASH_SUPPORT
+    nflashPackage,
+#endif
     MemoryPackage,
 #ifdef ENABLE_FEC_SUPPORT
     FECEthernetPackage,
@@ -45,6 +48,9 @@
 #ifdef ENABLE_GREEN_BOX_SUPPORT
     GreenBoxDPRAMPackage,
     GreenBoxXilinxPackage,
+#endif
+#ifdef ENABLE_RED_BOX_SUPPORT
+    RedBoxPackage,
 #endif
     LastPackage
 } package_elements;
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/diag_ui/main_menu.c ppc_diag/diag_ui/main_menu.c
--- ppc_diag-1.0.2/diag_ui/main_menu.c	Mon Jan 13 15:53:53 2003
+++ ppc_diag/diag_ui/main_menu.c	Thu May  1 11:31:26 2003
@@ -64,6 +64,9 @@
     { /* disable green/red box submenus */
         all_packages[GreenBoxDPRAMPackage]->pkg_enabled = DisableSubmenu;
         all_packages[GreenBoxXilinxPackage]->pkg_enabled = DisableSubmenu;
+#ifdef ENABLE_RED_BOX_SUPPORT
+        all_packages[RedBoxPackage]->pkg_enabled = DisableSubmenu;
+#endif
     }
 #endif /* ENABLE_GREEN_BOX_SUPPORT */
     /* ^^^ end of run-time menu alterations     ^^^ */
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/diag_ui/version.c ppc_diag/diag_ui/version.c
--- ppc_diag-1.0.2/diag_ui/version.c	Fri Feb  7 18:14:15 2003
+++ ppc_diag/diag_ui/version.c	Mon May 12 14:53:03 2003
@@ -1,2 +1,2 @@
-char diag_version[] = "Version 1.0.2";
+char diag_version[] = "Version 1.0.4";
 char copyright[] = "(c) 2002, VCT Labs";
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/documents/diag_developer_guide.lyx ppc_diag/documents/diag_developer_guide.lyx
--- ppc_diag-1.0.2/documents/diag_developer_guide.lyx	Fri Feb  7 14:44:23 2003
+++ ppc_diag/documents/diag_developer_guide.lyx	Tue Feb 11 16:16:50 2003
@@ -437,6 +437,11 @@
 .
  This should be the same directory where the tftp server application looks
  when sending files to a tftp client.
+\layout Itemize
+
+MKIMAGE - Points to the mkimage program built during the PPCBoot build process.
+ The 'make standalone' make target uses this program to convert the ppc_diag
+ elf executable into an image file loadable by PPCBoot.
 \layout Standard
 
 The following sections describe the available make
@@ -529,9 +534,9 @@
  target that will convert the diagnostics elf file into a .img file (a format
  usable by PPCBoot), and place it into the TFTPBASEDIR path specified in
  the Makefile.
- For this to work properly, make sure that MKIMAGEDIR in gendiags.sh points
- to PPCBoot's mkimage program, and that BINUTILSPATH in gendiags.sh points
- to the path for the target's version of objcopy.
+ For this to work properly, make sure that MKIMAGE in the Makefile points
+ to PPCBoot's mkimage program, and that OBJCOPY in the Makefile points to
+ the path for the target's version of objcopy.
 \layout Chapter
 
 Diagnostics Code Walkthrough
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/documents/diag_developer_guide.ps ppc_diag/documents/diag_developer_guide.ps
--- ppc_diag-1.0.2/documents/diag_developer_guide.ps	Fri Feb  7 14:58:19 2003
+++ ppc_diag/documents/diag_developer_guide.ps	Mon May 12 15:26:49 2003
@@ -9,7 +9,7 @@
 %DVIPSCommandLine: dvips -t letter -o diag_developer_guide.ps
 %+ diag_developer_guide.dvi
 %DVIPSParameters: dpi=600, compressed
-%DVIPSSource:  TeX output 2003.02.07:1458
+%DVIPSSource:  TeX output 2003.05.12:1526
 %%BeginProcSet: texc.pro
 %!
 /TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
@@ -1764,52 +1764,40 @@
 03D81FF8EB07F8000FEC1FF06CB4EBFFE06C90B55AC692CFFC6D13FC011F13F001011380
 69857CDB72>121 D E
 %EndDVIPSBitmapFont
-%DVIPSBitmapFont: Fq ecrm1200 12 13
-/Fq 13 122 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
+%DVIPSBitmapFont: Fq ecrm1200 12 9
+/Fq 9 122 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
 48EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815
 FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D
 130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131
->48 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F8048
-EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C4813076C
-C7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A
-5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C812
-30000E1570001FB612F0A25A5AB712E0A326427BC131>50 D<49B4FC010F13E0013F13FC
-9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
-077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
-C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
-A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
-0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
-90C7FC28447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C003015
-1C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A
-5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130F
-AA6D5AEB01C02A457BC231>55 D<B912F0A3000101C0C7127F6C6C48EC0FF81703170117
-0018781838A2181CA3180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3
-EC8001ED007C163C161CA2160CA793C8FCB08048487EB612F8A337447CC340>70
+>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA320
+4278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA
+7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C48
+13076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D
+4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A48481438
+48C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F
+13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8
+A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0
+EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC1503
+16FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F800
+38140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E0
+010190C7FC28447CC131>I<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D9
+67F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E
+6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A2
+92383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2
+486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>77
 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
 6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
 5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
 3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
-D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
-007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
-17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
-9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EB01FE9038
-07FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F48
-4814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670
-000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F89038
-03FFE0010090C7FC242E7DAC2B>101 D<EA01FC12FFA3120712031201B3EC01FE913807
-FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8
-486CECFF80B5D8F83F13FEA32F457DC436>104 D<3903F803F000FFEB1FFCEC3C3EEC70
-7F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3
-202C7DAB26>114 D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FC
-A2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E090
-3801FFC09038007F001E3E7EBC26>116 D<D801FC147F00FFEC3FFFA300071401000380
-000181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC078
-903803FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC
-1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F
-5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8
-EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEA
-FE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121
-D E
+D<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FEC
+E000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC4
+36>104 D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7
+FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC0
+9038007F001E3E7EBC26>116 D<B539F001FFFCA3000790C7EA7FE06C48EC1F80000116
+00160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C48
+5AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC
+1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C03
+80D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121 D E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fr ecrm1728 17.28 18
 /Fr 18 119 df<120FEA3FC0EA7FE0EAFFF0A213F8A313FC127FEA3FDCEA0F1C1200A713
@@ -1903,8 +1891,8 @@
 
 %%EndSetup
 %%Page: 1 1
-1 0 bop 1054 2143 a Fr(Diagnostics)47 b(Dev)l(elop)t(er's)f(Guide)1558
-2749 y Fq(7th)32 b(F)-8 b(ebruary)33 b(2003)p eop
+1 0 bop 1054 2143 a Fr(Diagnostics)47 b(Dev)l(elop)t(er's)f(Guide)1632
+2749 y Fq(12th)32 b(Ma)m(y)h(2003)p eop
 %%Page: 1 2
 1 1 bop 0 997 a Fp(Con)-6 b(ten)g(ts)0 1512 y Fo(1)77
 b(In)m(tro)s(duction)3201 b(3)0 1694 y(2)77 b(Diagnostics)30
@@ -1985,7 +1973,7 @@
 3986 y(2.3.3)94 b(mak)n(e)27 b(dep)r(end)60 b(.)42 b(.)g(.)f(.)h(.)f(.)
 h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
 (.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
-134 b(7)315 4085 y(2.3.4)94 b(default)28 b(mak)n(e)f(target)f(\(mak)n
+134 b(8)315 4085 y(2.3.4)94 b(default)28 b(mak)n(e)f(target)f(\(mak)n
 (e)h(with)h(no)g(argumen)n(ts\))60 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h
 (.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)134
 b(8)315 4185 y(2.3.5)94 b(mak)n(e)27 b(standalone)61
@@ -2291,64 +2279,70 @@
 2757 y(\020mak)n(e)i(standalone\021.)52 b(This)32 b(should)h(b)r(e)g
 (the)h(same)e(directory)f(where)i(the)g(tftp)h(serv)n(er)d(application)
 h(lo)r(oks)g(when)208 2857 y(sending)27 b(\034les)g(to)h(a)f(tftp)i
-(clien)n(t.)0 3039 y(The)f(follo)n(wing)e(sections)h(describ)r(e)g(the)
-h(a)n(v)-5 b(ailable)26 b(mak)n(e)1826 3009 y Fi(6)1890
-3039 y Fn(targets.)0 3272 y Fh(2.3.1)112 b(mak)m(e)38
-b(sub_mak)m(e)0 3425 y Fn(If)27 b(building)f(from)h(the)f(CVS)h(rep)r
-(ository)-7 b(,)25 b(this)i(creates)e(all)h(the)h(Mak)n(e\034le)f
-(links)g(in)g(the)h(source)e(directories,)h(whic)n(h)g(p)r(oin)n(t)0
-3524 y(to)g(build/mo)r(dule.mak.)36 b(If)26 b(the)g(diagnostics)e(are)h
+(clien)n(t.)125 3023 y Fj(\017)41 b Fn(MKIMA)n(GE)34
+b(-)f(P)n(oin)n(ts)h(to)f(the)h(mkimage)f(program)f(built)i(during)f
+(the)i(PPCBo)r(ot)f(build)g(pro)r(cess.)54 b(The)34 b('mak)n(e)208
+3122 y(standalone')c(mak)n(e)h(target)f(uses)h(this)h(program)d(to)j
+(con)n(v)n(ert)e(the)h(pp)r(c_diag)g(elf)h(executable)f(in)n(to)g(an)g
+(image)g(\034le)208 3222 y(loadable)26 b(b)n(y)h(PPCBo)r(ot.)0
+3404 y(The)h(follo)n(wing)e(sections)h(describ)r(e)g(the)h(a)n(v)-5
+b(ailable)26 b(mak)n(e)1826 3374 y Fi(6)1890 3404 y Fn(targets.)0
+3637 y Fh(2.3.1)112 b(mak)m(e)38 b(sub_mak)m(e)0 3790
+y Fn(If)27 b(building)f(from)h(the)f(CVS)h(rep)r(ository)-7
+b(,)25 b(this)i(creates)e(all)h(the)h(Mak)n(e\034le)f(links)g(in)g(the)
+h(source)e(directories,)h(whic)n(h)g(p)r(oin)n(t)0 3890
+y(to)g(build/mo)r(dule.mak.)36 b(If)26 b(the)g(diagnostics)e(are)h
 (unpac)n(k)n(ed)g(from)g(a)h(tar.gz,)f(these)h(links)f(should)h
-(already)e(b)r(e)i(a)n(v)-5 b(ailable.)0 3757 y Fh(2.3.2)112
-b(mak)m(e)38 b(h\034les)0 3910 y Fn(As)26 b(for)f(the)g(sub_mak)n(e)g
+(already)e(b)r(e)i(a)n(v)-5 b(ailable.)0 4122 y Fh(2.3.2)112
+b(mak)m(e)38 b(h\034les)0 4275 y Fn(As)26 b(for)f(the)g(sub_mak)n(e)g
 (target,)g(this)g(is)h(merely)f(for)g(con)n(v)n(enience)f(for)h(CVS)h
 (c)n(hec)n(k)n(outs)d(of)j(the)g(diagnostics.)35 b(This)25
-b(mak)n(e)0 4010 y(target)j(places)f(links)i(to)f(all)g(the)h(.h)g
+b(mak)n(e)0 4375 y(target)j(places)f(links)i(to)f(all)g(the)h(.h)g
 (\034les)f(in)n(to)g(the)h(includes/)f(sub)r(directory)-7
 b(.)39 b(Once)28 b(again,)g(if)h(unpac)n(k)n(ed)e(from)h(a)g(tar.gz,)0
-4109 y(these)g(links)f(should)g(already)f(exist.)0 4342
-y Fh(2.3.3)112 b(mak)m(e)38 b(dep)s(end)0 4495 y Fn(Similar)28
-b(to)h(the)g(\020dep\021)35 b(mak)n(e)27 b(target)h(when)h(building)f
-(a)h(lin)n(ux)f(k)n(ernel,)g(the)h(mak)n(e)f(dep)r(end)h(stage)f
-(creates)f(.dep)r(end)i(\034les)0 4594 y(in)h(eac)n(h)f(source)f
-(directory)h(so)g(that)g(the)i(mak)n(e)d(pro)r(cess)h(kno)n(ws)f(whic)n
-(h)i(\034les)g(dep)r(end)g(on)f(eac)n(h)g(other.)43 b(This)29
-b(sp)r(eeds)h(up)0 4694 y(the)c(mak)n(e)f(pro)r(cess)g(since)g(only)h
-(c)n(hanged)f(\034les,)h(and)f(those)h(that)g(dep)r(end)h(on)e(them,)i
-(get)e(recompiled.)36 b(F)-7 b(or)25 b(this)h(stage)f(to)0
-4794 y(w)n(ork)k(prop)r(erly)-7 b(,)31 b(set)g(the)g(MKDEP)h(constan)n
-(t)e(in)h(the)h(Mak)n(e\034le)e(to)g(the)h(lo)r(cation)g(on)f(y)n(our)g
-(system)g(where)h(mkdep)g(has)0 4893 y(b)r(een)d(built)g(in)g(the)g
-(lin)n(ux)g(k)n(ernel)e(source)g(tree.)p 0 4947 1560
-4 v 92 5000 a Fg(6)127 5023 y Ff(Under)31 b(Lin)n(ux,)g(the)g
+4475 y(these)g(links)f(should)g(already)f(exist.)p 0
+4544 1560 4 v 92 4597 a Fg(6)127 4621 y Ff(Under)31 b(Lin)n(ux,)g(the)g
 (\020info\021)j(utilit)n(y)c(has)h(excellen)n(t)g(do)r(cumen)n(tation)g
 (for)f(the)h(\020mak)n(e\021)k(command)28 b(-)i(try)h(\020info)e(mak)n
-(e\021.)49 b(There)31 b(are)g(also)0 5102 y(en)n(tries)25
+(e\021.)49 b(There)31 b(are)g(also)0 4700 y(en)n(tries)25
 b(for)f(gcc)g(and)g(bin)n(utils)g(\(if)f(running)h(Debian,)g(mak)n(e)f
 (sure)i(the)f(gcc-2.95-do)r(c)h(and)f(bin)n(utils-do)r(c)f(pac)n(k)l
 (ages)j(are)f(installed\))p eop
 %%Page: 8 9
 8 8 bop 0 100 a Fm(CHAPTER)29 b(2.)64 b(DIA)n(GNOSTICS)28
-b(BUILD)g(ENVIR)n(ONMENT)1724 b Fn(8)0 333 y Fh(2.3.4)112
+b(BUILD)g(ENVIR)n(ONMENT)1724 b Fn(8)0 333 y Fh(2.3.3)112
+b(mak)m(e)38 b(dep)s(end)0 486 y Fn(Similar)28 b(to)h(the)g
+(\020dep\021)35 b(mak)n(e)27 b(target)h(when)h(building)f(a)h(lin)n(ux)
+f(k)n(ernel,)g(the)h(mak)n(e)f(dep)r(end)h(stage)f(creates)f(.dep)r
+(end)i(\034les)0 586 y(in)h(eac)n(h)f(source)f(directory)h(so)g(that)g
+(the)i(mak)n(e)d(pro)r(cess)h(kno)n(ws)f(whic)n(h)i(\034les)g(dep)r
+(end)g(on)f(eac)n(h)g(other.)43 b(This)29 b(sp)r(eeds)h(up)0
+685 y(the)c(mak)n(e)f(pro)r(cess)g(since)g(only)h(c)n(hanged)f
+(\034les,)h(and)f(those)h(that)g(dep)r(end)h(on)e(them,)i(get)e
+(recompiled.)36 b(F)-7 b(or)25 b(this)h(stage)f(to)0
+785 y(w)n(ork)k(prop)r(erly)-7 b(,)31 b(set)g(the)g(MKDEP)h(constan)n
+(t)e(in)h(the)h(Mak)n(e\034le)e(to)g(the)h(lo)r(cation)g(on)f(y)n(our)g
+(system)g(where)h(mkdep)g(has)0 884 y(b)r(een)d(built)g(in)g(the)g(lin)
+n(ux)g(k)n(ernel)e(source)g(tree.)0 1117 y Fh(2.3.4)112
 b(default)38 b(mak)m(e)f(target)g(\(mak)m(e)g(with)f(no)i(argumen)m
-(ts\))0 486 y Fn(The)26 b(default)h(mak)n(e)e(target)g(compiles)h(all)g
-(the)g(source)f(co)r(de,)h(outputs)h(a)f(link)n(er)f(script,)h(and)g
-(links)g(the)h(diagnostics)d(co)r(de)0 586 y(in)n(to)j(a)g(single)g(ob)
-5 b(ject)28 b(\034le)g(that)f(can)h(b)r(e)g(copied)f(in)n(to)g(the)h
-(target)f(system's)g(memory)f(and)i(executed.)0 818 y
-Fh(2.3.5)112 b(mak)m(e)38 b(standalone)0 971 y Fn(F)-7
+(ts\))0 1270 y Fn(The)26 b(default)h(mak)n(e)e(target)g(compiles)h(all)
+g(the)g(source)f(co)r(de,)h(outputs)h(a)f(link)n(er)f(script,)h(and)g
+(links)g(the)h(diagnostics)d(co)r(de)0 1370 y(in)n(to)j(a)g(single)g
+(ob)5 b(ject)28 b(\034le)g(that)f(can)h(b)r(e)g(copied)f(in)n(to)g(the)
+h(target)f(system's)g(memory)f(and)i(executed.)0 1602
+y Fh(2.3.5)112 b(mak)m(e)38 b(standalone)0 1755 y Fn(F)-7
 b(or)29 b(em)n(b)r(edded)h(b)r(oards)f(that)h(use)f(PPCBo)r(ot)h(for)g
 (the)g(b)r(o)r(ot)g(loader,)f(this)h(is)f(a)h(con)n(v)n(enience)e
-(target)h(that)h(will)g(con)n(v)n(ert)0 1071 y(the)d(diagnostics)e(elf)
+(target)h(that)h(will)g(con)n(v)n(ert)0 1855 y(the)d(diagnostics)e(elf)
 i(\034le)f(in)n(to)g(a)h(.img)f(\034le)g(\(a)h(format)f(usable)g(b)n(y)
 g(PPCBo)r(ot\),)h(and)f(place)g(it)h(in)n(to)f(the)h(TFTPBASEDIR)0
-1170 y(path)34 b(sp)r(eci\034ed)h(in)f(the)h(Mak)n(e\034le.)56
-b(F)-7 b(or)33 b(this)i(to)f(w)n(ork)f(prop)r(erly)-7
-b(,)35 b(mak)n(e)e(sure)h(that)g(MKIMA)n(GEDIR)h(in)g(gendiags.sh)0
-1270 y(p)r(oin)n(ts)24 b(to)g(PPCBo)r(ot's)g(mkimage)f(program,)f(and)i
-(that)g(BINUTILSP)-7 b(A)g(TH)25 b(in)f(gendiags.sh)f(p)r(oin)n(ts)g
-(to)h(the)g(path)g(for)g(the)0 1370 y(target's)i(v)n(ersion)g(of)i(ob)5
-b(jcop)n(y)-7 b(.)p eop
+1954 y(path)g(sp)r(eci\034ed)g(in)g(the)g(Mak)n(e\034le.)35
+b(F)-7 b(or)27 b(this)g(to)f(w)n(ork)f(prop)r(erly)-7
+b(,)26 b(mak)n(e)g(sure)g(that)h(MKIMA)n(GE)g(in)g(the)g(Mak)n(e\034le)
+f(p)r(oin)n(ts)0 2054 y(to)32 b(PPCBo)r(ot's)h(mkimage)f(program,)f
+(and)i(that)f(OBJCOPY)g(in)h(the)g(Mak)n(e\034le)e(p)r(oin)n(ts)i(to)f
+(the)h(path)f(for)g(the)h(target's)0 2154 y(v)n(ersion)26
+b(of)i(ob)5 b(jcop)n(y)-7 b(.)p eop
 %%Page: 9 10
 9 9 bop 0 955 a Fl(Chapter)61 b(3)0 1370 y Fp(Diagnostics)73
 b(Co)6 b(de)73 b(W)-18 b(alkthrough)0 1813 y Fn(This)24
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/documents/diag_developer_guide.txt ppc_diag/documents/diag_developer_guide.txt
--- ppc_diag-1.0.2/documents/diag_developer_guide.txt	Fri Feb  7 14:58:09 2003
+++ ppc_diag/documents/diag_developer_guide.txt	Mon May 12 15:26:33 2003
@@ -290,6 +290,11 @@
   where the tftp server application looks when sending files
   to a tftp client.
 
+* MKIMAGE - Points to the mkimage program built during the
+  PPCBoot build process. The 'make standalone' make target
+  uses this program to convert the ppc_diag elf executable
+  into an image file loadable by PPCBoot.
+
 The following sections describe the available make([footnote] Under Linux, the "info" utility has excellent documentation
 for the "make" command - try "info
 make". There are also entries for gcc and binutils (if
@@ -336,10 +341,10 @@
 this is a convenience target that will convert the diagnostics
 elf file into a .img file (a format usable by PPCBoot),
 and place it into the TFTPBASEDIR path specified in the
-Makefile. For this to work properly, make sure that MKIMAGEDIR
-in gendiags.sh points to PPCBoot's mkimage program, and
-that BINUTILSPATH in gendiags.sh points to the path for
-the target's version of objcopy.
+Makefile. For this to work properly, make sure that MKIMAGE
+in the Makefile points to PPCBoot's mkimage program, and
+that OBJCOPY in the Makefile points to the path for the
+target's version of objcopy.
 
 Diagnostics Code Walkthrough
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/documents/diag_guide.lyx ppc_diag/documents/diag_guide.lyx
--- ppc_diag-1.0.2/documents/diag_guide.lyx	Fri Feb  7 14:44:23 2003
+++ ppc_diag/documents/diag_guide.lyx	Mon May 12 14:29:12 2003
@@ -549,14 +549,14 @@
  The test descriptions follow the format:
 \layout Standard
 
-3.1 Submenu name
+3.X Submenu name
 \layout Standard
 
-3.1.1 Description of submenu's purpose (may include figures, screen shots,
+3.X.1 Description of submenu's purpose (may include figures, screen shots,
  tables, etc.)
 \layout Standard
 
-3.1.2 Description of options available (possible values, with default values
+3.X.2 Description of options available (possible values, with default values
  in 
 \series bold 
 bold
@@ -564,7 +564,7 @@
 )
 \layout Standard
 
-3.1.3 Test Descriptions
+3.X.3 Test Descriptions
 \layout Standard
 
 Test Name
@@ -1442,6 +1442,448 @@
 None.
 \layout Section
 
+NAND Flash
+\layout Subsection
+
+Submenu Descriptions
+\layout Standard
+
+The tests in this menu exercise read, write, and erase operations on a NAND
+ flash device (specifically the 8- and 16-MB Toshiba devices).
+ Note that different makes and models of NAND flash recommend different
+ methods for discovering bad blocks; check the NAND flash device's data
+ sheet before attempting potentially destructive operations.
+ For instance, some devices recommend searching for bad blocks by ensuring
+ that all bits are '1' before ever performing any write or erase operations.
+\layout Subsection
+
+Submenu Options
+\layout List
+\labelwidthstring 00.00.0000
+
+Debug\SpecialChar ~
+level: View diagnostics software debug information.
+ Four levels of debugging are available: (
+\series bold 
+0 = none
+\series default 
+, 1 = terse, 2 = verbose, 3 = massive screen scroll).
+\layout List
+\labelwidthstring 00.00.0000
+
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ If the device ID is recognized, this value will be set automatically.
+\layout List
+\labelwidthstring 00.00.0000
+
+Pages\SpecialChar ~
+per\SpecialChar ~
+block: Set the number of pages per block.
+ If the device ID is recognized, this value will be set automatically.
+\layout List
+\labelwidthstring 00.00.0000
+
+Capacity: Set the total number of pages in the device.
+ If the device ID is recognized, this value will be set automatically.
+\layout List
+\labelwidthstring 00.00.0000
+
+NAND\SpecialChar ~
+device\SpecialChar ~
+ID: The NAND flash menu initialization executes the device ID
+ read command automatically and fills in this field.
+ If the initialization code recognizes the device ID, the other fields will
+ be initialized as well.
+\layout List
+\labelwidthstring 00.00.0000
+
+Page\SpecialChar ~
+number: For the Dump\SpecialChar ~
+NAND\SpecialChar ~
+Flash\SpecialChar ~
+Page test, selects which page to view.
+\layout List
+\labelwidthstring 00.00.0000
+
+Block\SpecialChar ~
+number: For block-based operations (write and erase), selects which
+ block to operate on.
+ The value 0xFFFFFFFF indicates all blocks.
+\layout List
+\labelwidthstring 00.00.0000
+
+Mem\SpecialChar ~
+copy\SpecialChar ~
+start: Used only for the Dump\SpecialChar ~
+NAND\SpecialChar ~
+Flash\SpecialChar ~
+Page test.
+ The contents of the NAND flash page will be copied to the RAM starting
+ at the address specified here before being printed.
+\layout Subsection
+
+Test Descriptions
+\layout Subsubsection
+
+Test: Reset NAND Flash
+\layout Description
+
+Test\SpecialChar ~
+Description: 
+\series medium 
+This test sends the reset command to the NAND flash.
+\layout Description
+
+Test\SpecialChar ~
+Modes: 
+\series medium 
+All test modes
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Debug level: If set to a value other than '0', displays the code returned
+ by the NAND flash device.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+
+\series bold 
+NAND Flash did not reset!: 
+\series default 
+The NAND device did not return the correct response for the reset command.
+\layout Subsubsection
+
+Test: Check For Bad Blocks
+\layout Description
+
+Test\SpecialChar ~
+Description: This test is intended for NAND flash devices that recommend
+ the erase, write 01010101b, erase, write 10101010b, erase sequence for
+ finding bad blocks on the device.
+ Do not use this test for devices that recommend searching for bits that
+ are not '1' when received from the factory for determining bad blocks.
+ See the Verify\SpecialChar ~
+Erase/New\SpecialChar ~
+Device test description, below, for these devices.
+ This test will erase all data contained on the flash device.
+ Also, the bad block information will only be printed, not stored on the
+ NAND flash.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Pages\SpecialChar ~
+per\SpecialChar ~
+block: Set the number of pages contained within a flash block.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Capacity: Set the total number of pages contained by the flash device.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Block\SpecialChar ~
+number: Set which block number to test.
+ If set to the value 0xFFFFFFFF, all flash blocks will be tested, from block
+ 0 up to the value Capacity / Pages\SpecialChar ~
+per\SpecialChar ~
+block.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+This test doesn't fail, it only prints a list of bad locations on the NAND
+ flash.
+\layout Subsubsection
+
+Test: Erase Blocks
+\layout Description
+
+Test\SpecialChar ~
+Description: Erase a given NAND flash block, or all flash blocks.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: - 
+\newline 
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Pages\SpecialChar ~
+per\SpecialChar ~
+block: Set the number of pages contained within a flash block.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Capacity: Set the total number of pages contained by the flash device.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Block\SpecialChar ~
+number: Indicate which block to erase.
+ The value 0xFFFFFFFF for this option will erase all blocks.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+
+\series bold 
+Specified block # out of range:
+\series default 
+ Double-check the Block\SpecialChar ~
+number option.
+ It should be within the range 0 to (Capacity / Pages\SpecialChar ~
+per\SpecialChar ~
+block).
+\newline 
+
+\series bold 
+NAND device reports erase failure in block:
+\series default 
+ The NAND status read indicated that the previous erase command failed.
+\newline 
+
+\series bold 
+Erase error in page:
+\series default 
+ (Unlikely) The NAND status read did not indicate a failure, but the contents
+ of the block contained one or more '0' bits.
+\layout Subsubsection
+
+Test: Write Test Ptn 1
+\layout Description
+
+Test\SpecialChar ~
+Description: Writes the binary pattern 01010101b to each byte in the
+ given block, or all flash blocks.
+ Make sure the blocks selected in the Block\SpecialChar ~
+number option have been erased.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Pages\SpecialChar ~
+per\SpecialChar ~
+block: Set the number of pages contained within a flash block.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Capacity: Set the total number of pages contained by the flash device.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Block\SpecialChar ~
+number: Indicate which block to write.
+ The value 0xFFFFFFFF indicates all blocks.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+
+\series bold 
+NAND device reports program failure in page:
+\series default 
+ The NAND status read indicated that the previous page write command failed.
+ It's possible the blocks selected for the test pattern weren't erased;
+ try erasing the blocks and run this test again.
+\newline 
+
+\series bold 
+Program error in page:
+\series default 
+ (Unlikely) The NAND status read did not indicate a failure, but when read
+ back, the contents of one or more bytes was other than 01010101b.
+\layout Subsubsection
+
+Test: Write Test Ptn 2
+\layout Description
+
+Test\SpecialChar ~
+Description: Writes the binary pattern 10101010b to each byte in the
+ given block, or all flash blocks.
+ Make sure the blocks selected in the Block\SpecialChar ~
+number option have been erased.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Pages\SpecialChar ~
+per\SpecialChar ~
+block: Set the number of pages contained within a flash block.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Capacity: Set the total number of pages contained by the flash device.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Block\SpecialChar ~
+number: Indicate which block to write.
+ The value 0xFFFFFFFF indicates all blocks.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+
+\series bold 
+NAND device reports program failure in page:
+\series default 
+ The NAND status read indicated that the previous page write command failed.
+ It's possible the blocks selected for the test pattern weren't erased;
+ try erasing the blocks and run this test again.
+\newline 
+
+\series bold 
+Program error in page:
+\series default 
+ (Unlikely) The NAND status read did not indicate a failure, but when read
+ back, the contents of one or more bytes was other than 10101010b.
+\layout Subsubsection
+
+Test: Get NAND Flash ID
+\layout Description
+
+Test\SpecialChar ~
+Description: Send the Read ID command to the NAND flash, and display
+ the device code read back from the device.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+None.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+None.
+\layout Subsubsection
+
+Test: Dump NAND Flash Page
+\layout Description
+
+Test\SpecialChar ~
+Description: Display the contents of a given NAND flash page.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Page\SpecialChar ~
+number: Select which page to display.
+\newline 
+Mem\SpecialChar ~
+copy\SpecialChar ~
+start: Select where in SDRAM to copy the NAND flash page for the
+ memory dump.
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+None.
+\layout Subsubsection
+
+Test: Verify Erase/New Device
+\layout Description
+
+Test\SpecialChar ~
+Description: Read every byte in the NAND flash and make sure there are
+ no '0' bits.
+ This test is recommended for devices such as the Toshiba TC58V64BFT.
+ When received from the factory, this device should have no '0' bits.
+ Any '0' bits in the flash indicate a bad block.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Custom test
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Page\SpecialChar ~
+size: Set the number of bytes per page.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\newline 
+Capacity: Set the total number of pages contained by the flash device.
+ Usually pre-set by the menu initialization code, if the NAND flash device
+ is recognized.
+\layout Description
+\added_space_bottom medskip 
+Test\SpecialChar ~
+Failures: -
+\newline 
+For the purposes of error logging, this test does not fail, it only prints
+ the first error it finds in the flash.
+\newline 
+
+\series bold 
+Bit error in byte:
+\series default 
+ A '0' bit was found within a flash block.
+\layout Section
+
 Memory
 \layout Subsection
 
@@ -3876,9 +4318,123 @@
 \newline 
 None.
 \layout Description
-
+\added_space_bottom medskip 
 Test\SpecialChar ~
 Failures: -
 \newline 
 None.
+\layout Section
+
+Red Box
+\layout Subsection
+
+Submenu description
+\layout Standard
+
+The tests in this menu verify the HDB-10 transmission capability of the
+ Red Box.
+\layout Subsection
+
+Submenu options
+\layout List
+\labelwidthstring 00.00.0000
+
+Debug\SpecialChar ~
+level: Selects level of debugging output.
+ Available levels are: (
+\series bold 
+0 = none
+\series default 
+, 1 = terse, 2 = verbose, 3 = massive screen scroll)
+\layout List
+\labelwidthstring 00.00.0000
+
+1st\SpecialChar ~
+buffer\SpecialChar ~
+base\SpecialChar ~
+address: Unused
+\layout List
+\labelwidthstring 00.00.0000
+
+Buffer\SpecialChar ~
+size: Number of bytes to transmit.
+ Limited to 64kB
+\layout List
+\labelwidthstring 00.00.0000
+
+Xmit\SpecialChar ~
+pattern: Select a pattern to transmit.
+ Available patterns are: (0=all 0's, 1 = all 1's, 2 = 01010101b, 3 = 10101010b,
+ 
+\series bold 
+4 = Pseudo-Random
+\series default 
+, 5 = user-defined (see User\SpecialChar ~
+pattern option), 6 = Summa test data, 7 = increment
+ by 4 pattern)
+\layout List
+\labelwidthstring 00.00.0000
+
+User\SpecialChar ~
+pattern: Set the 2-byte pattern to be transmitted, if the Xmit\SpecialChar ~
+pattern
+ option has been set to user-defined.
+\layout List
+\labelwidthstring 00.00.0000
+
+Test\SpecialChar ~
+time: Unused
+\layout Subsection
+
+Test descriptions
+\layout Subsubsection
+
+Test: Transmit Test
+\layout Description
+
+Test\SpecialChar ~
+Description: This test transmits data via the HDB-10 interface, then
+ examines the receive buffer to make sure that it matches the transmit buffer.
+\layout Description
+
+Test\SpecialChar ~
+Modes: Basic and burn-in modes.
+\layout Description
+
+Test\SpecialChar ~
+Options: -
+\newline 
+Buffer\SpecialChar ~
+size: Selects how many bytes to transmit (must be divisible by 4)
+\newline 
+Xmit\SpecialChar ~
+pattern: Selects which pattern to transmit
+\newline 
+User\SpecialChar ~
+pattern: If Xmit\SpecialChar ~
+pattern equals 5, set this to the desired 2-byte pattern
+\layout Description
+
+Test\SpecialChar ~
+Failures: -
+\newline 
+
+\series bold 
+Failed to transmit test buffer:
+\series default 
+ The Xilinx status register did not indicate a transmit interrupt within
+ the timeout period.
+\newline 
+
+\series bold 
+Failed to receive test buffer:
+\series default 
+ The Xilinx status register did not indicate a receive interrupt within
+ the timeout period.
+\newline 
+
+\series bold 
+Comparison failure in xmit word:
+\series default 
+ The two buffers were compared (disregarding the sync bit) and did not match.
 \the_end
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/documents/diag_guide.ps ppc_diag/documents/diag_guide.ps
--- ppc_diag-1.0.2/documents/diag_guide.ps	Fri Feb  7 14:58:49 2003
+++ ppc_diag/documents/diag_guide.ps	Mon May 12 15:25:44 2003
@@ -1,14 +1,14 @@
 %!PS-Adobe-2.0
 %%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
 %%Title: diag_guide.dvi
-%%Pages: 36
+%%Pages: 40
 %%PageOrder: Ascend
 %%BoundingBox: 0 0 612 792
 %%EndComments
 %DVIPSWebPage: (www.radicaleye.com)
 %DVIPSCommandLine: dvips -t letter -o diag_guide.ps diag_guide.dvi
 %DVIPSParameters: dpi=600, compressed
-%DVIPSSource:  TeX output 2003.02.07:1458
+%DVIPSSource:  TeX output 2003.05.12:1525
 %%BeginProcSet: texc.pro
 %!
 /TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
@@ -307,8 +307,8 @@
 C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5B
 A36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I E
 %EndDVIPSBitmapFont
-%DVIPSBitmapFont: Fe ecbx1440 14.4 48
-/Fe 48 122 df<B712E0AB230B7F9F2C>45 D<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA
+%DVIPSBitmapFont: Fe ecbx1440 14.4 49
+/Fe 49 122 df<B712E0AB230B7F9F2C>45 D<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA
 7FFEA2EA3FFCEA1FF8EA07E01010768F25>I<913803FF80023F13F849B6FC010715C049
 01017F903A3FFC007FF8D97FF0EB1FFC49486D7E48496D7E4A7F4817804890C76C13C0A2
 48486E13E0A2001F17F0A3003F17F8A249157FA2007F17FCA600FF17FEB3A5007F17FCA6
@@ -462,52 +462,52 @@
 >103 D<EB3FF8B5FCA51203C6FCB3A4EE1FFC93B57E030314E0030F14F892391FC07FFC
 92397E003FFE03F86D7EECF9F04B6D7FECFBC0ECFF8092C76C7FA25CA25CA45CB3ACB6D8
 F807B612C0A542537CD249>I<133FEBFFC0487F487FA2487FA66C5BA26C5B6C5B013FC7
-FC90C8FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547CD324>I<D93FF0D91FF84AB4
-7EB591B56C010F13F8030302E0013F13FE030F6E90B6FCDB3F809027F803F80F7F922A7E
-007FFC07E0077F000302F890283FFE0F80037FC6D9F1F0011F49487EDAF3E0DAFF3E814B
-153CDAF7805D92C76C496D7F14FF4A5EA24A5EA34A5EB3ADB6D8F80FB66CB612F8A56536
-7BB56E>109 D<D93FF0EB1FFCB591B57E030314E0030F14F892391FC07FFC92397E003F
-FE000302F86D7EC6EBF1F04B6D7FECF3C0ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F8
-07B612C0A542367CB549>I<913801FFC0023F13FE91B67E010315E0010F018013F8903A
-3FFC001FFED97FF0EB07FF49486D7F48496D7F48496D7F91C8127F4883488349153F001F
-83A2003F8349151FA2007F83A400FF1880AC007F1800A3003F5F6D153FA2001F5FA26C6C
-4B5AA26C6D4A5A6C5F6C6D495B6C6D495B6D6C4990C7FCD93FFCEB1FFE6DB46CB45A0107
-90B512F0010115C0D9003F49C8FC020313E039387CB642>I<D93FF8EB7FF0B50107B5FC
-031F14C0037F14F09126F9FF0013FCDAFFF8EB3FFF000302E0010F7FC602806D7F92C76C
-7F4A824A804A6E7F85187F85A2183F85A4721380AD4E1300A44E5AA26118FF616E5C616E
-4A5B6E4A5B6F495B03E04990C7FC6FEB7FFE913AF9FE01FFF802F8B65A033F14C0030749
-C8FC030013E093CAFCB1B612F8A5414D7DB549>I<90393FF001FCB590380FFF804B13E0
-037F13F09238FE1FF89138F1F83F00019138F07FFC6CEBF3E015C0ECF780A2ECFF00EE3F
-F84AEB1FF0EE0FE093C7FC5CA45CB3ABB612FEA52E367DB535>114
-D<903903FFC00E011FEBFC1E90B6127E000315FE3907FE003FD80FF0130F484813034848
-1301491300127F90C8127EA248153EA27FA27F01F091C7FC13FCEBFF806C13FEECFFF06C
-14FE6F7E6C15E06C816C15FC6C81C681133F010F15801301D9000F14C0EC003F030713E0
-150100F880167F6C153FA2161F7EA217C07E6D143F17807F6DEC7F0001F85C6DEB03FE90
-39FF801FFC486CB512F0D8F81F14C0D8F00791C7FC39E0007FF02B387CB634>I<147CA6
-14FCA41301A31303A21307A2130F131F133F137F13FF1203000F90B512FEB7FCA426007F
-FCC8FCB3A9EE0F80ABEE1F006D7EA2011F143E806D6D5A6DEBC1F86DEBFFF001005C023F
-1380DA03FEC7FC294D7ECB33>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607
-B3AE5FA35FA25F137F5F6D6C14F7DC01E713F06D6CD907C7EBFFC0903A0FFF801F876D90
-B51207010114FC6D6C13F0020701C091C7FC42377CB549>I<B600E090381FFFFCA50001
-01F8C7000113006CEE007C6E15FC017F5E8017016D6C5D17036D5E6F13076D5E6F130FA2
-6D6D5C171F6D93C7FC6F5B6D153E6F137E6D157C8117FC027F5CEDFE01023F5CEDFF036E
-5C168316876E5C16CF6E5C16FF6E91C8FCA36E5BA26E5BA26F5AA36F5AA26F5AA26F5AA2
-3E367DB445>I<B600E1B6D8800FB5FCA500019026F0000301C0C7EA3FE06E6D6DEC0F80
-6CF21F00A26E6D6D5C017F193E6E147F72147E013F197C6E6F14FC6D6117FF6F6E13016D
-4A5E03C06E13036D615E03E001E7EB80076D02075E03F001C313C06D4E5A160F03F80181
-EBE01F6D96C7FC6F48C6FC735A027F49153EDBFE3E90387FF87E023F177C167EDBFF7C90
-383FFCFC6E01FC5D4CEB1FFF6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C7FA26E94C8FC93
-C8FC6F5DA2033E157C58367DB45F>I<B6D8F001B512FCA5C66C48C7381FF8006D6CEC0F
-E06D6D495A606D6D49C7FC6D6D137E6D6D13FE6D6D485A4C5A6D01FC5B6E6C485A6E6C48
-5A161F6EEBBF806E01FFC8FC6E5B5E6E5B806E7F6F7EA26F7E834B7F92B5FC83DA01FB7F
-DA03F17FDA07F07F4A5A4A486C7E4B6C7E4A486C7F147E02FE6D7F49486D7F49486D7F4A
-8149487F49486D7F011F6F7ED97FE06E7EB500FE0107B6FCA540357EB445>I<B600E090
-381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E6E1401013F5E8017036D6D5C
-17076D5E6F130F6D5E6F131F6D93C7FC815F6D6D133E177E6D157C6F13FC027F5C811601
-DA3FFF5B16036E5C16876E5C16CF6E5C16EF16FF6E91C8FCA26E5BA26E5BA26F5AA36F5A
-A26F5AA26F5AA35E151F93C9FC5D153E157ED81FC0137C487E486C13FC486C5B14015D4A
-5A14074A5A6C48485A4948CAFC495A383F81FC6CB45A6C5B000313C0C648CBFC3E4D7DB4
-45>I E
+FC90C8FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547CD324>I<EB3FF8B5FCA51203
+C6FCB3B3B3B1B612F8A51D537CD224>108 D<D93FF0D91FF84AB47EB591B56C010F13F8
+030302E0013F13FE030F6E90B6FCDB3F809027F803F80F7F922A7E007FFC07E0077F0003
+02F890283FFE0F80037FC6D9F1F0011F49487EDAF3E0DAFF3E814B153CDAF7805D92C76C
+496D7F14FF4A5EA24A5EA34A5EB3ADB6D8F80FB66CB612F8A565367BB56E>I<D93FF0EB
+1FFCB591B57E030314E0030F14F892391FC07FFC92397E003FFE000302F86D7EC6EBF1F0
+4B6D7FECF3C0ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F807B612C0A542367CB549>
+I<913801FFC0023F13FE91B67E010315E0010F018013F8903A3FFC001FFED97FF0EB07FF
+49486D7F48496D7F48496D7F91C8127F4883488349153F001F83A2003F8349151FA2007F
+83A400FF1880AC007F1800A3003F5F6D153FA2001F5FA26C6C4B5AA26C6D4A5A6C5F6C6D
+495B6C6D495B6D6C4990C7FCD93FFCEB1FFE6DB46CB45A010790B512F0010115C0D9003F
+49C8FC020313E039387CB642>I<D93FF8EB7FF0B50107B5FC031F14C0037F14F09126F9
+FF0013FCDAFFF8EB3FFF000302E0010F7FC602806D7F92C76C7F4A824A804A6E7F85187F
+85A2183F85A4721380AD4E1300A44E5AA26118FF616E5C616E4A5B6E4A5B6F495B03E049
+90C7FC6FEB7FFE913AF9FE01FFF802F8B65A033F14C0030749C8FC030013E093CAFCB1B6
+12F8A5414D7DB549>I<90393FF001FCB590380FFF804B13E0037F13F09238FE1FF89138
+F1F83F00019138F07FFC6CEBF3E015C0ECF780A2ECFF00EE3FF84AEB1FF0EE0FE093C7FC
+5CA45CB3ABB612FEA52E367DB535>114 D<903903FFC00E011FEBFC1E90B6127E000315
+FE3907FE003FD80FF0130F4848130348481301491300127F90C8127EA248153EA27FA27F
+01F091C7FC13FCEBFF806C13FEECFFF06C14FE6F7E6C15E06C816C15FC6C81C681133F01
+0F15801301D9000F14C0EC003F030713E0150100F880167F6C153FA2161F7EA217C07E6D
+143F17807F6DEC7F0001F85C6DEB03FE9039FF801FFC486CB512F0D8F81F14C0D8F00791
+C7FC39E0007FF02B387CB634>I<147CA614FCA41301A31303A21307A2130F131F133F13
+7F13FF1203000F90B512FEB7FCA426007FFCC8FCB3A9EE0F80ABEE1F006D7EA2011F143E
+806D6D5A6DEBC1F86DEBFFF001005C023F1380DA03FEC7FC294D7ECB33>I<D93FF89138
+01FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA25F137F5F6D6C14F7DC01E713F0
+6D6CD907C7EBFFC0903A0FFF801F876D90B51207010114FC6D6C13F0020701C091C7FC42
+377CB549>I<B600E090381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E8017
+016D6C5D17036D5E6F13076D5E6F130FA26D6D5C171F6D93C7FC6F5B6D153E6F137E6D15
+7C8117FC027F5CEDFE01023F5CEDFF036E5C168316876E5C16CF6E5C16FF6E91C8FCA36E
+5BA26E5BA26F5AA36F5AA26F5AA26F5AA23E367DB445>I<B600E1B6D8800FB5FCA50001
+9026F0000301C0C7EA3FE06E6D6DEC0F806CF21F00A26E6D6D5C017F193E6E147F72147E
+013F197C6E6F14FC6D6117FF6F6E13016D4A5E03C06E13036D615E03E001E7EB80076D02
+075E03F001C313C06D4E5A160F03F80181EBE01F6D96C7FC6F48C6FC735A027F49153EDB
+FE3E90387FF87E023F177C167EDBFF7C90383FFCFC6E01FC5D4CEB1FFF6E5FA24C7F6E5F
+4C7F6E5FA24C7F6E5F4C7FA26E94C8FC93C8FC6F5DA2033E157C58367DB45F>I<B6D8F0
+01B512FCA5C66C48C7381FF8006D6CEC0FE06D6D495A606D6D49C7FC6D6D137E6D6D13FE
+6D6D485A4C5A6D01FC5B6E6C485A6E6C485A161F6EEBBF806E01FFC8FC6E5B5E6E5B806E
+7F6F7EA26F7E834B7F92B5FC83DA01FB7FDA03F17FDA07F07F4A5A4A486C7E4B6C7E4A48
+6C7F147E02FE6D7F49486D7F49486D7F4A8149487F49486D7F011F6F7ED97FE06E7EB500
+FE0107B6FCA540357EB445>I<B600E090381FFFFCA5000101F8C7000113006CEE007C6E
+15FC017F5E6E1401013F5E8017036D6D5C17076D5E6F130F6D5E6F131F6D93C7FC815F6D
+6D133E177E6D157C6F13FC027F5C811601DA3FFF5B16036E5C16876E5C16CF6E5C16EF16
+FF6E91C8FCA26E5BA26E5BA26F5AA36F5AA26F5AA26F5AA35E151F93C9FC5D153E157ED8
+1FC0137C487E486C13FC486C5B14015D4A5A14074A5A6C48485A4948CAFC495A383F81FC
+6CB45A6C5B000313C0C648CBFC3E4D7DB445>I E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Ff ecbx2074 20.74 10
 /Ff 10 117 df<EE03C0160F161F163F16FF1503150F157F0203B5FC143F010FB6FCB8FC
@@ -881,14 +881,16 @@
 A290387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48
 EB03FC90B5FCA21F247EA325>I E
 %EndDVIPSBitmapFont
-%DVIPSBitmapFont: Fi ecbx1000 10 69
-/Fi 69 123 df<913A03FF8007FE027F9039F07FFF800103B500FDB512E0010F903A00FF
+%DVIPSBitmapFont: Fi ecbx1000 10 72
+/Fi 72 123 df<913A03FF8007FE027F9039F07FFF800103B500FDB512E0010F903A00FF
 FE0FF0D93FF8ECF81F90267FE0019038F03FF849485A4816E014804816C00200ED1FF081
 F007C06F91C7FCA8B912E0A4000390C701C0C7FCB3ABB5D8FC3FEBFF80A43D3A7EB938>
-27 D<913903FFC7C0027F13FF0103B6FC010F130090383FF80190387FE003EBFFC05A14
-805A4A7EA281A9B8FCA4000390C7FCB3ABB5D8FC3F13FFA4303A7EB935>29
-D<EA0F80EA3FE0EA7FF0EAFFF8A8EA7FF0A7EA3FE0A7EA1FC0A7EA0F80A7C7FCA7EA0F80
-EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D3B78BA1D>33
+27 D<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF8049485A
+5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390C7FCB3AB
+B5D8FC3F13FFA4303A7EB935>I<913903FFC7C0027F13FF0103B6FC010F130090383FF8
+0190387FE003EBFFC05A14805A4A7EA281A9B8FCA4000390C7FCB3ABB5D8FC3F13FFA430
+3A7EB935>I<EA0F80EA3FE0EA7FF0EAFFF8A8EA7FF0A7EA3FE0A7EA1FC0A7EA0F80A7C7
+FCA7EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D3B78BA1D>33
 D<0470EB01C0A304F013034C5CA2030114074C91C7FCA203035C4C130EA30307141E93C7
 121CA24B143C030E1438A2031E1478031C1470A3033C14F003385CA2007FBA12F0BB12F8
 A2C72801E0000780C7FC4B91C8FCA302035C4B130EA30207141E92C7121CA34A143C020E
@@ -903,35 +905,39 @@
 16537BBD25>I<ED0380B3ADBA12FEA3C8D80380C8FCB3AD3F417BB44A>43
 D<EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3127FA2123FEA0F9CEA001C133C1338A31378
 137013F0EA01E0A2EA03C0EA0780EA0F005A121C12180E1D798C1B>I<B61280A819087F
-9620>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>I<49B4
-FC011F13F0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC04848EB1FE0A2001F
-15F0A24848EB0FF8A3007F15FCA400FF15FEB3007F15FCA5003F15F86D131FA2001F15F0
-A26C6CEB3FE0000715C06C6CEB7F806C6CEBFF003900FF83FE6DB45A011F13F0010190C7
-FC27377CB530>48 D<141E143E14FE1307137FB5FCA3138FEA000FB3B3A5007FB61280A4
-213679B530>I<EB0FFE90387FFFC048B512F0000714FC390FE03FFF261F800F1380263F
-000313C0D87F8014E0EBE00100FF6D13F07FA2ED7FF8A46C5A6C5A0006C7FCC8FCEDFFF0
-A216E05C16C04A138016004A5A4A5AEC1FF05D4A5A4AC7FC14FE495AD903F01378495A49
-5A495A49C712F8017C14F05B49130148B6FC5A5A5A5A5A4815E0B7FCA425367BB530>I<
-EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF86D14
-F0487EA66C4814E06C5A6C485AC714C04A138016004A5A4A5AEC3FF090380FFFC05D15F0
-90380007FE913801FF806E13C016E0ED7FF016F8ED3FFCA216FEEA1FC0487E487E487EA4
-16FCA249137F007F15F801C0EBFFF06C5A6C6C4813E0260FFC0713806CB61200000114FC
-6C6C13F0010790C7FC27377CB530>I<ED07C0150FA2151F153F157F15FF5CA25C5C5C5C
-143E143C5C5C1301495A5C495A495A5B133E5B13785B485A1203485A5B48C7FC121E5A12
-7C5AB81280A4C70001EBC000AA0103B61280A429367DB530>I<001C15C0D81F80130701
-F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA7EB03FE90381FFFE0017F
-13F89038FE07FC9038F003FFD9C0011380496C13C090C7FC000E15E0C8127F16F0A216F8
-A3121FEA3FC0487E12FF7FA316F05B15FFD87F8014E0007EC713C0003E5B003F4913806C
-6C481300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25377BB530>I<EC0FF8
-ECFFFE0103EBFF8090390FF80FC090393FE003E090397F8001F09038FF000F48EC1FF848
-48133F485A120F5B121FA2003FEC1FF0ED0FE0484890C7FCA31408EC7FF039FFF1FFFC01
-F313FFD9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA4127FA512
-3F16FCA26C7E16F8000F143F6D14F0000715E06C6CEB7FC03A01FF81FF806C90B5120001
-3F13FC010F13F00101138027377CB530>I<EB03FF011F13E0017F13F83901FF01FE4848
-6C7E4848EB7F80484814C0001FEC3FE0485AED1FF0127F16F8A212FF16FCA416FEA5007F
-143FA3123F157F6C7E000F14FF6C6C5A3903FE03DF6CB5129F6C6C131FD91FFC13FCEB00
-201400A3D80FE0EB3FF8487E486C14F0A216E0157F16C0EDFF80495A6C48481300903880
-07FE390FE01FF86CB55A6C14C0C691C7FCEB1FF027377CB530>57
+9620>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>I<1618
+163816781670A216F016E0150116C015031680A2150716005D150E151E151CA2153C1538
+1578157015F05DA214015D14035D140792C7FCA25C140E141E141C143C1438A214781470
+14F05CA213015C13035C130791C8FCA25B130E131E131C133C1338A21378137013F05B12
+015BA212035B120790C9FC5A120EA2121E121C123C123812781270A212F05AA225537BBD
+30>I<49B4FC011F13F0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC04848EB
+1FE0A2001F15F0A24848EB0FF8A3007F15FCA400FF15FEB3007F15FCA5003F15F86D131F
+A2001F15F0A26C6CEB3FE0000715C06C6CEB7F806C6CEBFF003900FF83FE6DB45A011F13
+F0010190C7FC27377CB530>I<141E143E14FE1307137FB5FCA3138FEA000FB3B3A5007F
+B61280A4213679B530>I<EB0FFE90387FFFC048B512F0000714FC390FE03FFF261F800F
+1380263F000313C0D87F8014E0EBE00100FF6D13F07FA2ED7FF8A46C5A6C5A0006C7FCC8
+FCEDFFF0A216E05C16C04A138016004A5A4A5AEC1FF05D4A5A4AC7FC14FE495AD903F013
+78495A495A495A49C712F8017C14F05B49130148B6FC5A5A5A5A5A4815E0B7FCA425367B
+B530>I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA
+0FF86D14F0487EA66C4814E06C5A6C485AC714C04A138016004A5A4A5AEC3FF090380FFF
+C05D15F090380007FE913801FF806E13C016E0ED7FF016F8ED3FFCA216FEEA1FC0487E48
+7E487EA416FCA249137F007F15F801C0EBFFF06C5A6C6C4813E0260FFC0713806CB61200
+000114FC6C6C13F0010790C7FC27377CB530>I<ED07C0150FA2151F153F157F15FF5CA2
+5C5C5C5C143E143C5C5C1301495A5C495A495A5B133E5B13785B485A1203485A5B48C7FC
+121E5A127C5AB81280A4C70001EBC000AA0103B61280A429367DB530>I<001C15C0D81F
+80130701F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA7EB03FE90381F
+FFE0017F13F89038FE07FC9038F003FFD9C0011380496C13C090C7FC000E15E0C8127F16
+F0A216F8A3121FEA3FC0487E12FF7FA316F05B15FFD87F8014E0007EC713C0003E5B003F
+4913806C6C481300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25377BB530>
+I<EC0FF8ECFFFE0103EBFF8090390FF80FC090393FE003E090397F8001F09038FF000F48
+EC1FF84848133F485A120F5B121FA2003FEC1FF0ED0FE0484890C7FCA31408EC7FF039FF
+F1FFFC01F313FFD9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA4
+127FA5123F16FCA26C7E16F8000F143F6D14F0000715E06C6CEB7FC03A01FF81FF806C90
+B51200013F13FC010F13F00101138027377CB530>I<EB03FF011F13E0017F13F83901FF
+01FE48486C7E4848EB7F80484814C0001FEC3FE0485AED1FF0127F16F8A212FF16FCA416
+FEA5007F143FA3123F157F6C7E000F14FF6C6C5A3903FE03DF6CB5129F6C6C131FD91FFC
+13FCEB00201400A3D80FE0EB3FF8487E486C14F0A216E0157F16C0EDFF80495A6C484813
+0090388007FE390FE01FF86CB55A6C14C0C691C7FCEB1FF027377CB530>57
 D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA0F80EA3FE0EA7F
 F0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579A41B>I<007FB912FCBA12FEA2CDFCB1BA
 12FEA26C18FC3F177B9F4A>61 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA3
@@ -953,132 +959,136 @@
 1800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183EA2
 183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F>I<B912C0A4
 3A007FF800039338007FE0171F170F1707A21703A21701A318F0EE7800A41800A216F8A2
-1501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C>I<B612FC
-A439007FF800B3B3ADB612FCA41E397DB824>73 D<010FB612C0A4D90001EBE000B3B3EA
-0F80EA3FE0EA7FF0A2EAFFF8A35E5C13F0007F495BD83FE091C7FC391F800FFE390FF03F
-FC6CB512F0000114C026003FFCC8FC2A3A7FB831>I<B7FCA426007FF8C9FCB3ACEF0780
-A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FCA431397DB839>76
-D<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA201796D5DA201786D5D
-A26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D
-5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA2923803FF1EA36F13BC
-A26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE070054397DB85B>I<
-B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81017B7F13798101787F6E7E6E
-7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E06F13F06F13F88117
-FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013FDEF7FFF8383A28383838383
-187FA2183F181F01FC160FB500FC150718031801A244397DB84B>I<EDFFF8020FEBFF80
-027F14F0903A01FFC01FFC010790380007FFD91FFC010113C0D93FF06D6C7E49486E7E49
-486E7E48496E7E48834890C86C7EA248486F1380A248486F13C0A2003F18E0A348486F13
-F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C6C4B13806C18006E5C
-6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107D9C01F90C7FC010190
-B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB948>I<B8FC17F017FEEFFF8028007F
-F8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8
-EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA438397DB841>I<ED
-FFF8020FEBFF80027F14F0903A01FFE03FFC010790380007FFD91FFC010113C049486D7F
-D97FE0EC3FF049486E7E488348496E7E4890C86C7EA248486F1380A2001F18C04981003F
-18E0A3007F18F04981A300FF18F8AC007F18F0A36D5D003F18E0A36C6C4B13C0A2000FDA
-1FC014806C6C90267FF0071300EDFFF86C903A81F07C0FFE6C903AC3C01E1FFC6CDA800F
-5BD97FE3ECBFF0D93FF36DB45AD91FFF5D010701C091C7FC01019038F01FFC6D6CB500F0
-1308020F6E131C0200EBF9FC92260001FE133C9438FF80FC18FF8219F8A28319F0A27113
-E0A27113C0711380711300EF01FC3E4A7BB948>I<B712FCEEFFE017FC17FF28007FF800
-0F13C004017F707F717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91
-B612FC17E0839139F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901
-DD3FFE13E0B600FC011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>
-I<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F
-48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014
-FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F03
-0F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F81303
-9039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<003F
-B91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200781703
-A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<B600FC011FB512C0A4
-26007FF8C8381FC000725AB3B3181F013F94C7FC8060011F163E6D6C157E187C6D6C15FC
-6D6D495A6D6DEB07F06D01F0EB1FE0DA7FFEEBFFC0021FB6C8FC02075C020014F0030F13
-80423A7DB849>I<B600F00103B512E0A4C601F0C83807F0006E5E017F5F6E150FA2013F
-5F6E151F011F94C7FC6E5D6D163E6F147E6D167CA26F14FC6D5E6F13016D5E6F13036D5E
-811707027F5D6F130F023F5D6F131F021F92C8FC815F6E143EEE807E6E147CEEC0FC6E5C
-16E016E16E5C16F36E5C16FF6F5BA36F5BA26F90C9FCA26F5AA36F5AA26F5AA26F5A433A
-7EB848>I<B6D8E01FB500FC90383FFFFCA4000101F0C7D83FFCC8EA7E006C71153C171F
-6E197C017F701578836E7014F8013F6F5E6E1801011F4B6D5CA26E18036D4B6D5CA26D6D
-496D495A173C6F170F6D037C6D91C7FCEF787F6F5F6D4B6C6C131E816D02016E5BEFE01F
-03F8177C027F01036E13784D7E03FCEE80F8023F49486C5C15FE021F010FEDC1E04D7E03
-FF16C36E49EDE3C0041E7F049E15F76E01BC6D5C04FC15FF6E95C8FC4C80A26E5F4C143F
-6E5F4C141FA2037F5E4C140FA26F486E5AA2031F5E93C812036F5E5E3A7EB863>I<007F
-B5D8F803B512F8A4C66C48C7D80FF0C7FC6D6C5D6D5E6F495A6D6D49C8FC7F6D6D137E6F
-5B6DEBF8016D5D6F485A6E6C485A023F130FDA1FFF5BEE9F806E01FFC9FC805E6E5B6E5B
-80826F7E153F826F7F5D4B7F92B57EA2DA01F97FDA03F17F03F07F913807E07FDA0FC07F
-021F6D7E4B7E4A486C7F027E8102FE6D7F4A7F49488149486D7F0107804A6E7E49488149
-486E7E013F81017F83B60107B61280A441397DB848>I<003FB712FEA4913980007FFC01
-FCC7EAFFF801F05B01C015F0494913E090C75A4816C0007E4A13805D007C16004B5A157F
-00785D4B5A5C5EC7485B5C5E5C4A5B93C7FC5C4A5A5D14FF495B5D5B495B4B131E5B5D49
-90C7FC5B5C4948143E13FF5C485B48167E4A147C484914FC5A4A13014890C7120348150F
-49143F4848EB01FFB8FCA42F397BB83A>90 D<B51280A3EBC000B3B3B3B3A5EBFF80A311
-5379BD1B>I<B51280A31201B3B3B3B3A5B5FCA311537EBD1B>93
-D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5A
-EA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF
-5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE003
-2A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF000
-13804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F0
-6E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9
-C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C0
-48485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01
-E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023
-257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F00
-03EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B00
-0F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010113012F3A7DB935>
-I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC
-1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F
-6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025
-257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A248
-1381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D
->I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C13
-8F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907
-FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E0
-6C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C
-6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<
-13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A
-14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487E
-A56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FFB5
-FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8EC07
-E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E8215
-0F82B5D8F83F13F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3ACB512FCA4163A7D
-B91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F8190
-3983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A
-5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FF
-F8020F13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3
-B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003F
-E048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F
-5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC0101
-13C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800003
-496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F0
-6E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91
-C9FCACB512FCA42F357EA435>I<49B4EB0780010FEBE00F013FEBF81F9039FFC07C3F00
-03EB803E3A07FE000F7F4848EB07FF121F497F123F497F127FA25B12FFAA6C7EA36C7E5D
-6C7E000F5C6C6C5B6C6C133F6CEBC0FD39007FFFF1011F13C10101130190C7FCAC037F13
-FEA42F357DA432>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C
-6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>I<90383F
-F0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E7E6D1300
-13FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0
-130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF8
-1F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578
-A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>I<01FFEC
-3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC
-011F13F00103138030257DA435>I<B539F001FFF8A4000390C7EA1F00161E6E133E6C15
-3C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F01
-0791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA22D257EA432
->I<B500F1B538803FFFA43D07FE000FF80003E06C6C010715C082028015076C6E6C1480
-15076C01C0ED0F00826E485C017FED801E5D90273FF01E7F5B17C0DAF83E147C011F9039
-3C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF10107EDF9E002FF14FB6D496CB4
-5AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E147C023C143C40257EA445>I<B5
-39F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B6D6C485A6E48C7FC9038
-1FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA24A7E903801F3FFD903
-E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F00016E7EB590383FFFF8A4
-2D257EA432>I<B539F001FFF8A4000390C7EA1F00161E6E133E6C153C6E137C6C15786E
-13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D13
-1E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C141E003F133E387F
-803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F02D35
-7EA432>I<003FB612C0A3D9F0031380EB800749481300003E5C003C495A007C133F5D00
-78495A14FF5D495B5BC6485B92C7FC495A131F5C495A017FEB03C0EBFFF014E04813C05A
-EC80074813005A49EB0F80485A003F141F4848133F9038F001FFB7FCA322257DA42A>I
-E
+1501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C>I<DB3FFC
+EB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFE
+C77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A180F123F5B18
+07127FA24993C8FC12FFAB043FB61280A2127F7FDC0003EBC000123FA27F121FA26C7EA2
+6C7F6C7F6C7F7ED97FF85C6D7E6DB45C010701C05B6D01FCEBFF3F010090B5EAFE0F021F
+ECF8030203ECE0009126003FFEC9FC413B7BB94B>I<B612FCA439007FF800B3B3ADB612
+FCA41E397DB824>73 D<010FB612C0A4D90001EBE000B3B3EA0F80EA3FE0EA7FF0A2EAFF
+F8A35E5C13F0007F495BD83FE091C7FC391F800FFE390FF03FFC6CB512F0000114C02600
+3FFCC8FC2A3A7FB831>I<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F
+5F5E5EEE0FFE167FB8FCA431397DB839>76 D<B500F80403B512F06E5EA26E5ED8007FF1
+E000A2D97BFF161EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A
+5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C
+485AA26F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D48
+48B612F0A2EE0F80EE070054397DB85B>I<B500FC0203B512F0A28080C66C6D90390003
+F0006F6E5A81017B7F13798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F
+826F13806F13C06F13E06F13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E18218
+F17013F97013FDEF7FFF8383A28383838383187FA2183F181F01FC160FB500FC15071803
+1801A244397DB84B>I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FF
+D91FFC010113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F
+1380A248486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0
+A26D5D001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49
+485A6DB401075B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D
+3B7BB948>I<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFC
+A2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E0
+02F8C9FCB3A4B612FCA438397DB841>I<EDFFF8020FEBFF80027F14F0903A01FFE03FFC
+010790380007FFD91FFC010113C049486D7FD97FE0EC3FF049486E7E488348496E7E4890
+C86C7EA248486F1380A2001F18C04981003F18E0A3007F18F04981A300FF18F8AC007F18
+F0A36D5D003F18E0A36C6C4B13C0A2000FDA1FC014806C6C90267FF0071300EDFFF86C90
+3A81F07C0FFE6C903AC3C01E1FFC6CDA800F5BD97FE3ECBFF0D93FF36DB45AD91FFF5D01
+0701C091C7FC01019038F01FFC6D6CB500F01308020F6E131C0200EBF9FC92260001FE13
+3C9438FF80FC18FF8219F8A28319F0A27113E0A27113C0711380711300EF01FC3E4A7BB9
+48>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717EA284A7
+60A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF707F70
+7F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390FFF87C0
+71EBFF8005011400CBEA1FFC443A7DB848>I<D907FF130E013FEBE01E90B5EAF83E0003
+ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8FC167E5A16
+3EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15F06C816C81
+C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA3163FA27E1780
+7E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8F83F5CD8F0
+0749C7FC39E0007FF02A3B7BB935>I<003FB91280A4D9F800EBF003D87FC09238007FC0
+49161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3AE010FB7
+FCA43B387DB742>I<B600FC011FB512C0A426007FF8C8381FC000725AB3B3181F013F94
+C7FC8060011F163E6D6C157E187C6D6C15FC6D6D495A6D6DEB07F06D01F0EB1FE0DA7FFE
+EBFFC0021FB6C8FC02075C020014F0030F1380423A7DB849>I<B600F00103B512E0A4C6
+01F0C83807F0006E5E017F5F6E150FA2013F5F6E151F011F94C7FC6E5D6D163E6F147E6D
+167CA26F14FC6D5E6F13016D5E6F13036D5E811707027F5D6F130F023F5D6F131F021F92
+C8FC815F6E143EEE807E6E147CEEC0FC6E5C16E016E16E5C16F36E5C16FF6F5BA36F5BA2
+6F90C9FCA26F5AA36F5AA26F5AA26F5A433A7EB848>I<B6D8E01FB500FC90383FFFFCA4
+000101F0C7D83FFCC8EA7E006C71153C171F6E197C017F701578836E7014F8013F6F5E6E
+1801011F4B6D5CA26E18036D4B6D5CA26D6D496D495A173C6F170F6D037C6D91C7FCEF78
+7F6F5F6D4B6C6C131E816D02016E5BEFE01F03F8177C027F01036E13784D7E03FCEE80F8
+023F49486C5C15FE021F010FEDC1E04D7E03FF16C36E49EDE3C0041E7F049E15F76E01BC
+6D5C04FC15FF6E95C8FC4C80A26E5F4C143F6E5F4C141FA2037F5E4C140FA26F486E5AA2
+031F5E93C812036F5E5E3A7EB863>I<007FB5D8F803B512F8A4C66C48C7D80FF0C7FC6D
+6C5D6D5E6F495A6D6D49C8FC7F6D6D137E6F5B6DEBF8016D5D6F485A6E6C485A023F130F
+DA1FFF5BEE9F806E01FFC9FC805E6E5B6E5B80826F7E153F826F7F5D4B7F92B57EA2DA01
+F97FDA03F17F03F07F913807E07FDA0FC07F021F6D7E4B7E4A486C7F027E8102FE6D7F4A
+7F49488149486D7F0107804A6E7E49488149486E7E013F81017F83B60107B61280A44139
+7DB848>I<003FB712FEA4913980007FFC01FCC7EAFFF801F05B01C015F0494913E090C7
+5A4816C0007E4A13805D007C16004B5A157F00785D4B5A5C5EC7485B5C5E5C4A5B93C7FC
+5C4A5A5D14FF495B5D5B495B4B131E5B5D4990C7FC5B5C4948143E13FF5C485B48167E4A
+147C484914FC5A4A13014890C7120348150F49143F4848EB01FFB8FCA42F397BB83A>90
+D<B51280A3EBC000B3B3B3B3A5EBFF80A3115379BD1B>I<B51280A31201B3B3B3B3A5B5
+FCA311537EBD1B>93 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E
+7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE
+00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F00
+03EBF80F39003FE0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13
+FC9138FE03FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA
+17FCA3EE1FF8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F0
+3FFFF8D9E00F13E0D9C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF
+8013802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FF
+A9127FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A
+010F13F00101138023257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F101
+3F13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127F
+A27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E101
+0113012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848
+133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4
+127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200
+010F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383F
+E0FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3AB
+B512FEA4223A7DB91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F26
+0FF801131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F
+5D6C6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E
+90B512F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA3
+6C157F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC0107
+13F02B377DA530>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA
+3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01
+F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A415
+3B7DBA1B>I<13FFB5FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7
+FC157E5DEC03F8EC07E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F
+82157F6F7E6F7E82150F82B5D8F83F13F8A42D3A7EB932>107 D<13FFB5FCA412077EB3
+B3ACB512FCA4163A7DB91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701
+FF90B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48
+D97FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FE
+EB7FC000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E6D4814C0
+5CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FF
+D9FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF16
+80A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6C
+B5C7FC011F13FC010113C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE
+07FFDAF00113800003496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC
+161FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF802
+0F13E0020390C7FC91C9FCACB512FCA42F357EA435>I<49B4EB0780010FEBE00F013FEB
+F81F9039FFC07C3F0003EB803E3A07FE000F7F4848EB07FF121F497F123F497F127FA25B
+12FFAA6C7EA36C7E5D6C7E000F5C6C6C5B6C6C133F6CEBC0FD39007FFFF1011F13C10101
+130190C7FCAC037F13FEA42F357DA432>I<9038FE03F000FFEB0FFEEC3FFF91387C7F80
+9138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422
+257EA427>I<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C1300
+12FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F
+9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512
+C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FC
+A3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D
+357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9
+C03E13FF90387FFFFC011F13F00103138030257DA435>I<B539F001FFF8A4000390C7EA
+1F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2EC
+FC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5A
+A26E5AA22D257EA432>I<B500F1B538803FFFA43D07FE000FF80003E06C6C010715C082
+028015076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF01E7F5B17C0
+DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF10107EDF9
+E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E147C023C14
+3C40257EA445>I<B539F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B6D
+6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7EA2
+4A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F0001
+6E7EB590383FFFF8A42D257EA432>I<B539F001FFF8A4000390C7EA1F00161E6E133E6C
+153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F
+010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA2
+5C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9
+FCEA1FFCEA07F02D357EA432>I<003FB612C0A3D9F0031380EB800749481300003E5C00
+3C495A007C133F5D0078495A14FF5D495B5BC6485B92C7FC495A131F5C495A017FEB03C0
+EBFFF014E04813C05AEC80074813005A49EB0F80485A003F141F4848133F9038F001FFB7
+FCA322257DA42A>I E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fj ecbx2488 24.88 22
 /Fj 22 118 df[<97263FFFE017E0071FB616010603B700F01503063F04FC15074DB96C
@@ -1211,52 +1221,40 @@
 9139E001FF006E91B512FC033F5D030715E0030092C7FC040701F804E0C7FC6B5E79DC78
 >I E
 %EndDVIPSBitmapFont
-%DVIPSBitmapFont: Fk ecrm1200 12 13
-/Fk 13 122 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
+%DVIPSBitmapFont: Fk ecrm1200 12 9
+/Fk 9 122 df<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F48
 48EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815
 FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D
 130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131
->48 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F8048
-EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C4813076C
-C7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A
-5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C812
-30000E1570001FB612F0A25A5AB712E0A326427BC131>50 D<49B4FC010F13E0013F13FC
-9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
-077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
-C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
-A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
-0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
-90C7FC28447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C003015
-1C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A
-5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130F
-AA6D5AEB01C02A457BC231>55 D<B912F0A3000101C0C7127F6C6C48EC0FF81703170117
-0018781838A2181CA3180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3
-EC8001ED007C163C161CA2160CA793C8FCB08048487EB612F8A337447CC340>70
+>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA320
+4278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA
+7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C48
+13076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D
+4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A48481438
+48C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F
+13FC9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8
+A215077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0
+EC1FC0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC1503
+16FEA2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F800
+38140F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E0
+010190C7FC28447CC131>I<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D9
+67F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E
+6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A2
+92383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2
+486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>77
 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
 6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
 5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
 3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
-D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
-007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
-17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
-9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<EB01FE9038
-07FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F121F48
-4814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C7E1670
-000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80F89038
-03FFE0010090C7FC242E7DAC2B>101 D<EA01FC12FFA3120712031201B3EC01FE913807
-FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8
-486CECFF80B5D8F83F13FEA32F457DC436>104 D<3903F803F000FFEB1FFCEC3C3EEC70
-7F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3
-202C7DAB26>114 D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FC
-A2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E090
-3801FFC09038007F001E3E7EBC26>116 D<D801FC147F00FFEC3FFFA300071401000380
-000181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C13FE90380FC078
-903803FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC
-1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F
-5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8
-EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEA
-FE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121
-D E
+D<EA01FC12FFA3120712031201B3EC01FE913807FFC091381E07F091383801F802707FEC
+E000D9FDC07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC4
+36>104 D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7
+FCB3A4150CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC0
+9038007F001E3E7EBC26>116 D<B539F001FFFCA3000790C7EA7FE06C48EC1F80000116
+00160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C48
+5AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC
+1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C03
+80D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>121 D E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fl ecrm1728 17.28 17
 /Fl 17 118 df<DDFFF015C0040F01FF1401047F14E00303B600F81303030F9038E003FE
@@ -1354,8 +1352,8 @@
 
 %%EndSetup
 %%Page: 1 1
-1 0 bop 1096 2143 a Fl(PPC)45 b(Diagnostics)i(User)e(Guide)1558
-2749 y Fk(7th)32 b(F)-8 b(ebruary)33 b(2003)p eop
+1 0 bop 1096 2143 a Fl(PPC)45 b(Diagnostics)i(User)e(Guide)1632
+2749 y Fk(12th)32 b(Ma)m(y)h(2003)p eop
 %%Page: 1 2
 1 1 bop 0 997 a Fj(Con)-6 b(ten)g(ts)0 1512 y Fi(1)77
 b(Diagnostics)30 b(Principles)2805 b(4)125 1611 y Fh(1.1)83
@@ -1441,10 +1439,10 @@
 b(Descriptions)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
 (.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
 f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(16)125 4367
-y(3.5)83 b(Memory)50 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
-(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
-h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
-(.)h(.)93 b(18)315 4467 y(3.5.1)h(Submen)n(u)28 b(Description)83
+y(3.5)83 b(NAND)29 b(Flash)69 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
+(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
+f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
+(.)93 b(18)315 4467 y(3.5.1)h(Submen)n(u)28 b(Descriptions)50
 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
 h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
 (.)h(.)93 b(18)315 4567 y(3.5.2)h(Submen)n(u)28 b(Options)82
@@ -1453,76 +1451,103 @@
 (.)h(.)f(.)h(.)93 b(18)315 4666 y(3.5.3)h(T)-7 b(est)28
 b(Descriptions)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
 (.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
-f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(19)125 4766
-y(3.6)83 b(FEC)29 b(Ethernet)e(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
-(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
-f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
-(.)93 b(21)315 4866 y(3.6.1)h(Submen)n(u)28 b(description)36
-b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
-f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
-(.)f(.)h(.)93 b(21)315 4965 y(3.6.2)h(Submen)n(u)28 b(options)41
-b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
-(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
-f(.)h(.)f(.)h(.)93 b(21)315 5065 y(3.6.3)h(T)-7 b(est)28
-b(descriptions)53 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
+f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(18)125 4766
+y(3.6)83 b(Memory)50 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
+(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
+h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
+(.)h(.)93 b(21)315 4866 y(3.6.1)h(Submen)n(u)28 b(Description)83
+b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
+h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
+(.)h(.)93 b(21)315 4965 y(3.6.2)h(Submen)n(u)28 b(Options)82
+b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
+h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
+(.)h(.)f(.)h(.)93 b(21)315 5065 y(3.6.3)h(T)-7 b(est)28
+b(Descriptions)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
 (.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
 f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(22)125 5164
-y(3.7)83 b(SCC1)28 b(Ethernet)55 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f
+y(3.7)83 b(FEC)29 b(Ethernet)e(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
 (.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
 f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
-(.)93 b(24)1929 5400 y(1)p eop
+(.)93 b(25)1929 5400 y(1)p eop
 %%Page: 2 3
 2 2 bop 0 100 a Fg(CONTENTS)3387 b Fh(2)315 333 y(3.7.1)94
 b(Submen)n(u)28 b(description)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f
 (.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
-f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(24)315
+f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(25)315
 432 y(3.7.2)h(Submen)n(u)28 b(options)41 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f
 (.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
 h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
-b(24)315 532 y(3.7.3)h(T)-7 b(est)28 b(descriptions)53
+b(25)315 532 y(3.7.3)h(T)-7 b(est)28 b(descriptions)53
 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
 f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
-(.)f(.)h(.)f(.)h(.)93 b(25)125 632 y(3.8)83 b(Ethernet)29
-b(Crosso)n(v)n(er)38 b(.)j(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g
-(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
-h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(26)315
-731 y(3.8.1)h(Submen)n(u)28 b(description)36 b(.)41 b(.)h(.)f(.)h(.)f
-(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
-h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
-b(26)315 831 y(3.8.2)h(Submen)n(u)28 b(options)41 b(.)g(.)h(.)f(.)h(.)f
-(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
-g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
-b(26)315 930 y(3.8.3)h(T)-7 b(est)28 b(description)21
-b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
-g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
-(.)h(.)f(.)h(.)f(.)h(.)93 b(27)125 1030 y(3.9)83 b(Green)28
-b(Bo)n(x)e(DPRAM)70 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
-f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
-(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(28)315
-1130 y(3.9.1)h(Submen)n(u)28 b(description)36 b(.)41
-b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
-(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
-h(.)93 b(28)315 1229 y(3.9.2)h(Submen)n(u)28 b(options)41
+(.)f(.)h(.)f(.)h(.)93 b(25)125 632 y(3.8)83 b(SCC1)28
+b(Ethernet)55 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
+(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
+f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
+b(28)315 731 y(3.8.1)h(Submen)n(u)28 b(description)36
+b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
+f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
+(.)f(.)h(.)93 b(28)315 831 y(3.8.2)h(Submen)n(u)28 b(options)41
 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
 (.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
-f(.)h(.)f(.)h(.)93 b(28)315 1329 y(3.9.3)h(T)-7 b(est)28
+f(.)h(.)f(.)h(.)93 b(28)315 930 y(3.8.3)h(T)-7 b(est)28
 b(descriptions)53 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
 (.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
-f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(29)125 1429
-y(3.10)41 b(Green)28 b(Bo)n(x)e(XILINX)g(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h
+f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(29)125 1030
+y(3.9)83 b(Ethernet)29 b(Crosso)n(v)n(er)38 b(.)j(.)h(.)g(.)f(.)h(.)f
+(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
+f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
+(.)93 b(30)315 1130 y(3.9.1)h(Submen)n(u)28 b(description)36
+b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
+f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
+(.)f(.)h(.)93 b(30)315 1229 y(3.9.2)h(Submen)n(u)28 b(options)41
+b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
+(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
+f(.)h(.)f(.)h(.)93 b(30)315 1329 y(3.9.3)h(T)-7 b(est)28
+b(description)21 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
+(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
+h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(31)125 1429
+y(3.10)41 b(Green)28 b(Bo)n(x)e(DPRAM)70 b(.)42 b(.)g(.)f(.)h(.)f(.)h
 (.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
 h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
-b(33)315 1528 y(3.10.1)52 b(Submen)n(u)28 b(description)36
+b(32)315 1528 y(3.10.1)52 b(Submen)n(u)28 b(description)36
 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
 f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
-(.)f(.)h(.)93 b(33)315 1628 y(3.10.2)52 b(Submen)n(u)28
+(.)f(.)h(.)93 b(32)315 1628 y(3.10.2)52 b(Submen)n(u)28
 b(options)41 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
 (.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
-g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(33)315 1727 y(3.10.3)52
-b(T)-7 b(est)28 b(Descriptions)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h
+g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(32)315 1727 y(3.10.3)52
+b(T)-7 b(est)28 b(descriptions)53 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h
 (.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
 f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
-b(33)p eop
+b(33)125 1827 y(3.11)41 b(Green)28 b(Bo)n(x)e(XILINX)g(.)41
+b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
+(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
+f(.)h(.)f(.)h(.)f(.)h(.)93 b(37)315 1927 y(3.11.1)52
+b(Submen)n(u)28 b(description)36 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f
+(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
+f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(37)315
+2026 y(3.11.2)52 b(Submen)n(u)28 b(options)41 b(.)g(.)h(.)f(.)h(.)f(.)h
+(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
+f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
+b(37)315 2126 y(3.11.3)52 b(T)-7 b(est)28 b(Descriptions)36
+b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
+f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
+(.)f(.)h(.)f(.)h(.)93 b(37)125 2226 y(3.12)41 b(Red)28
+b(Bo)n(x)36 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
+f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
+(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
+b(38)315 2325 y(3.12.1)52 b(Submen)n(u)28 b(description)36
+b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
+f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
+(.)f(.)h(.)93 b(38)315 2425 y(3.12.2)52 b(Submen)n(u)28
+b(options)41 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
+(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
+g(.)f(.)h(.)f(.)h(.)f(.)h(.)93 b(38)315 2524 y(3.12.3)52
+b(T)-7 b(est)28 b(descriptions)53 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h
+(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
+f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)93
+b(39)p eop
 %%Page: 3 4
 3 3 bop 0 997 a Fj(List)72 b(of)h(Figures)125 1512 y
 Fh(2.1)83 b(Main)28 b(diagnostics)e(men)n(u)i(screenshot)80
@@ -1667,7 +1692,7 @@
 neg exch translate
  600 2894 a @beginspecial
 14 @llx 14 @lly 511 @urx 313 @ury 4970 @rwi @setspecial
-%%BeginDocument: /home/speedy/tmp/ppc_diag/documents//main_menu.ps
+%%BeginDocument: /home/speedy1/build/ppc_diag/documents//main_menu.ps
 %!PS-Adobe-3.0 EPSF-3.0
 %%Creator: GIMP PostScript file plugin V 1.12 by Peter Kirchgessner
 %%Title: /home/speedy/pics/main_menu.ps
@@ -1942,7 +1967,7 @@
 neg exch translate
  600 3256 a @beginspecial 14 @llx 14 @lly 561 @urx
 313 @ury 5470 @rwi @setspecial
-%%BeginDocument: /home/speedy/tmp/ppc_diag/documents//submenu.ps
+%%BeginDocument: /home/speedy1/build/ppc_diag/documents//submenu.ps
 %!PS-Adobe-3.0 EPSF-3.0
 %%Creator: GIMP PostScript file plugin V 1.12 by Peter Kirchgessner
 %%Title: /home/speedy/pics/submenu.ps
@@ -2526,7 +2551,7 @@
 neg exch translate
  600 3405 a @beginspecial 14 @llx 14 @lly
 560 @urx 313 @ury 5460 @rwi @setspecial
-%%BeginDocument: /home/speedy/tmp/ppc_diag/documents//opt_menu.ps
+%%BeginDocument: /home/speedy1/build/ppc_diag/documents//opt_menu.ps
 %!PS-Adobe-3.0 EPSF-3.0
 %%Creator: GIMP PostScript file plugin V 1.12 by Peter Kirchgessner
 %%Title: /home/speedy/pics/opt_menu.ps
@@ -3370,12 +3395,12 @@
 b(T)-18 b(est)72 b(Descriptions)0 1802 y Fh(The)28 b(follo)n(wing)e
 (sections)h(describ)r(e)g(the)h(tests)g(curren)n(tly)e(a)n(v)-5
 b(ailable.)36 b(The)27 b(test)h(descriptions)f(follo)n(w)g(the)h
-(format:)125 1902 y(3.1)e(Submen)n(u)i(name)125 2001
-y(3.1.1)e(Description)h(of)h(submen)n(u's)f(purp)r(ose)g(\(ma)n(y)g
-(include)h(\034gures,)f(screen)f(shots,)h(tables,)h(etc.\))125
-2101 y(3.1.2)e(Description)h(of)h(options)f(a)n(v)-5
-b(ailable)26 b(\(p)r(ossible)h(v)-5 b(alues,)27 b(with)h(default)g(v)-5
-b(alues)28 b(in)f Fi(b)s(old)p Fh(\))125 2201 y(3.1.3)f(T)-7
+(format:)125 1902 y(3.X)f(Submen)n(u)h(name)125 2001
+y(3.X.1)f(Description)g(of)g(submen)n(u's)h(purp)r(ose)f(\(ma)n(y)g
+(include)h(\034gures,)e(screen)h(shots,)g(tables,)g(etc.\))125
+2101 y(3.X.2)g(Description)g(of)g(options)g(a)n(v)-5
+b(ailable)27 b(\(p)r(ossible)g(v)-5 b(alues,)27 b(with)h(default)g(v)-5
+b(alues)27 b(in)h Fi(b)s(old)p Fh(\))125 2201 y(3.X.3)f(T)-7
 b(est)27 b(Descriptions)125 2300 y(T)-7 b(est)27 b(Name)125
 2400 y(T)-7 b(est)27 b(Description)125 2500 y(T)-7 b(est)27
 b(Mo)r(des)125 2599 y(T)-7 b(est)27 b(Options)125 2699
@@ -3817,1314 +3842,1613 @@
 %%Page: 18 19
 18 18 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
 b(TEST)g(DESCRIPTIONS)1788 b Fh(18)0 333 y Fe(3.5)130
-b(Memory)0 531 y Fd(3.5.1)112 b(Submen)m(u)38 b(Description)0
-684 y Fh(The)31 b(tests)h(in)f(this)h(men)n(u)g(p)r(erform)e(v)-5
-b(arious)31 b(tests)g(of)g(the)h(installed)f(RAM)h(to)f(\034nd)h(t)n
-(ypical)f(memory)g(\035a)n(ws.)47 b(Some)31 b(of)0 784
-y(these)d(tests)f(w)n(ere)g(inspired)g(b)n(y)g(the)h(MemT)-7
-b(est86)27 b(application)g(for)g(x86)f(hardw)n(are.)0
-1016 y Fd(3.5.2)112 b(Submen)m(u)38 b(Options)0 1170
+b(NAND)44 b(Flash)0 531 y Fd(3.5.1)112 b(Submen)m(u)38
+b(Descriptions)0 684 y Fh(The)31 b(tests)f(in)h(this)g(men)n(u)g
+(exercise)e(read,)i(write,)g(and)f(erase)f(op)r(erations)h(on)g(a)g
+(NAND)i(\035ash)e(device)g(\(sp)r(eci\034cally)h(the)0
+784 y(8-)c(and)g(16-MB)g(T)-7 b(oshiba)26 b(devices\).)37
+b(Note)28 b(that)f(di\033eren)n(t)h(mak)n(es)f(and)g(mo)r(dels)h(of)f
+(NAND)i(\035ash)e(recommend)g(di\033eren)n(t)0 884 y(metho)r(ds)e(for)f
+(disco)n(v)n(ering)e(bad)j(blo)r(c)n(ks;)g(c)n(hec)n(k)e(the)i(NAND)h
+(\035ash)e(device's)g(data)h(sheet)f(b)r(efore)g(attempting)h(p)r(oten)
+n(tially)0 983 y(destructiv)n(e)h(op)r(erations.)35 b(F)-7
+b(or)27 b(instance,)f(some)g(devices)h(recommend)f(searc)n(hing)f(for)h
+(bad)h(blo)r(c)n(ks)f(b)n(y)g(ensuring)g(that)h(all)0
+1083 y(bits)h(are)e('1')i(b)r(efore)f(ev)n(er)f(p)r(erforming)h(an)n(y)
+g(write)g(or)g(erase)f(op)r(erations.)0 1315 y Fd(3.5.2)112
+b(Submen)m(u)38 b(Options)0 1468 y Fh(Debug)28 b(lev)n(el:)41
+b(View)35 b(diagnostics)f(soft)n(w)n(are)g(debug)h(information.)60
+b(F)-7 b(our)35 b(lev)n(els)f(of)i(debugging)e(are)h(a)n(v)-5
+b(ailable:)51 b(\()p Fi(0)41 b(=)420 1568 y(none)p Fh(,)27
+b(1)g(=)g(terse,)g(2)g(=)h(v)n(erb)r(ose,)e(3)h(=)g(massiv)n(e)g
+(screen)f(scroll\).)0 1734 y(P)n(age)h(size:)65 b(Set)27
+b(the)g(n)n(um)n(b)r(er)g(of)g(b)n(ytes)g(p)r(er)g(page.)35
+b(If)28 b(the)f(device)g(ID)h(is)e(recognized,)g(this)h(v)-5
+b(alue)27 b(will)h(b)r(e)f(set)g(automat-)420 1834 y(ically)-7
+b(.)0 2000 y(P)n(ages)26 b(p)r(er)i(blo)r(c)n(k:)41 b(Set)33
+b(the)g(n)n(um)n(b)r(er)g(of)f(pages)g(p)r(er)g(blo)r(c)n(k.)52
+b(If)33 b(the)h(device)e(ID)h(is)g(recognized,)f(this)h(v)-5
+b(alue)33 b(will)g(b)r(e)g(set)420 2099 y(automatically)-7
+b(.)0 2265 y(Capacit)n(y:)73 b(Set)27 b(the)h(total)e(n)n(um)n(b)r(er)h
+(of)g(pages)f(in)h(the)h(device.)36 b(If)28 b(the)f(device)g(ID)g(is)g
+(recognized,)f(this)h(v)-5 b(alue)27 b(will)h(b)r(e)f(set)420
+2365 y(automatically)-7 b(.)0 2531 y(NAND)29 b(device)e(ID:)42
+b(The)24 b(NAND)h(\035ash)e(men)n(u)h(initialization)g(executes)f(the)h
+(device)g(ID)g(read)f(command)g(automatically)420 2631
+y(and)30 b(\034lls)g(in)g(this)h(\034eld.)44 b(If)31
+b(the)f(initialization)g(co)r(de)g(recognizes)e(the)j(device)f(ID,)g
+(the)h(other)e(\034elds)h(will)h(b)r(e)420 2730 y(initialized)c(as)g(w)
+n(ell.)0 2896 y(P)n(age)g(n)n(um)n(b)r(er:)41 b(F)-7
+b(or)27 b(the)h(Dump)g(NAND)h(Flash)e(P)n(age)g(test,)h(selects)f(whic)
+n(h)h(page)e(to)i(view.)0 3062 y(Blo)r(c)n(k)f(n)n(um)n(b)r(er:)41
+b(F)-7 b(or)29 b(blo)r(c)n(k-based)g(op)r(erations)f(\(write)i(and)g
+(erase\),)g(selects)f(whic)n(h)h(blo)r(c)n(k)g(to)f(op)r(erate)g(on.)44
+b(The)30 b(v)-5 b(alue)420 3162 y(0xFFFFFFFF)28 b(indicates)f(all)h
+(blo)r(c)n(ks.)0 3328 y(Mem)g(cop)n(y)e(start:)41 b(Used)33
+b(only)e(for)h(the)g(Dump)h(NAND)h(Flash)e(P)n(age)f(test.)51
+b(The)32 b(con)n(ten)n(ts)f(of)h(the)h(NAND)g(\035ash)f(page)420
+3428 y(will)27 b(b)r(e)h(copied)g(to)f(the)h(RAM)g(starting)f(at)g(the)
+h(address)e(sp)r(eci\034ed)i(here)f(b)r(efore)g(b)r(eing)h(prin)n(ted.)
+0 3660 y Fd(3.5.3)112 b(T)-9 b(est)37 b(Descriptions)0
+3813 y Fi(T)-8 b(est:)42 b(Reset)31 b(NAND)g(Flash)0
+3967 y(T)-8 b(est)32 b(Description:)40 b Fh(This)28 b(test)f(sends)h
+(the)g(reset)f(command)g(to)g(the)h(NAND)h(\035ash.)0
+4133 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des)0
+4299 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 4398
+y(Debug)27 b(lev)n(el:)37 b(If)28 b(set)f(to)h(a)f(v)-5
+b(alue)27 b(other)g(than)h('0',)f(displa)n(ys)g(the)h(co)r(de)f
+(returned)g(b)n(y)g(the)h(NAND)h(\035ash)e(device.)0
+4564 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+4664 y Fi(NAND)34 b(Flash)g(did)g(not)g(reset!:)41 b
+Fh(The)30 b(NAND)h(device)f(did)g(not)g(return)f(the)i(correct)d(resp)r
+(onse)h(for)g(the)i(reset)208 4764 y(command.)p eop
+%%Page: 19 20
+19 19 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(19)0 333 y Fi(T)-8 b(est:)42
+b(Chec)m(k)33 b(F)-8 b(or)32 b(Bad)g(Blo)s(c)m(ks)0 486
+y(T)-8 b(est)32 b(Description:)40 b Fh(This)18 b(test)h(is)f(in)n
+(tended)h(for)f(NAND)h(\035ash)f(devices)g(that)h(recommend)e(the)i
+(erase,)g(write)f(01010101b,)208 586 y(erase,)30 b(write)g(10101010b,)e
+(erase)i(sequence)g(for)g(\034nding)h(bad)g(blo)r(c)n(ks)f(on)g(the)h
+(device.)46 b(Do)31 b(not)g(use)g(this)g(test)g(for)208
+685 y(devices)22 b(that)g(recommend)g(searc)n(hing)f(for)h(bits)h(that)
+f(are)g(not)g('1')h(when)f(receiv)n(ed)g(from)g(the)h(factory)e(for)h
+(determin-)208 785 y(ing)28 b(bad)h(blo)r(c)n(ks.)41
+b(See)29 b(the)g(V)-7 b(erify)29 b(Erase/New)f(Device)h(test)h
+(description,)e(b)r(elo)n(w,)h(for)g(these)g(devices.)41
+b(This)29 b(test)208 884 y(will)e(erase)f(all)g(data)h(con)n(tained)f
+(on)h(the)h(\035ash)e(device.)37 b(Also,)26 b(the)i(bad)f(blo)r(c)n(k)f
+(information)h(will)g(only)g(b)r(e)g(prin)n(ted,)208
+984 y(not)g(stored)g(on)g(the)h(NAND)h(\035ash.)0 1150
+y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28 b(test)0
+1316 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 1416
+y(P)n(age)30 b(size:)45 b(Set)33 b(the)f(n)n(um)n(b)r(er)f(of)h(b)n
+(ytes)f(p)r(er)h(page.)49 b(Usually)31 b(pre-set)g(b)n(y)g(the)i(men)n
+(u)e(initialization)h(co)r(de,)g(if)h(the)208 1515 y(NAND)28
+b(\035ash)g(device)f(is)g(recognized.)208 1615 y(P)n(ages)e(p)r(er)h
+(blo)r(c)n(k:)35 b(Set)27 b(the)f(n)n(um)n(b)r(er)g(of)g(pages)f(con)n
+(tained)g(within)i(a)e(\035ash)h(blo)r(c)n(k.)36 b(Usually)26
+b(pre-set)f(b)n(y)h(the)g(men)n(u)208 1715 y(initialization)h(co)r(de,)
+g(if)h(the)g(NAND)h(\035ash)e(device)g(is)h(recognized.)208
+1814 y(Capacit)n(y:)42 b(Set)31 b(the)h(total)e(n)n(um)n(b)r(er)h(of)g
+(pages)e(con)n(tained)i(b)n(y)f(the)h(\035ash)g(device.)47
+b(Usually)30 b(pre-set)g(b)n(y)h(the)g(men)n(u)208 1914
+y(initialization)c(co)r(de,)g(if)h(the)g(NAND)h(\035ash)e(device)g(is)h
+(recognized.)208 2013 y(Blo)r(c)n(k)e(n)n(um)n(b)r(er:)37
+b(Set)27 b(whic)n(h)h(blo)r(c)n(k)f(n)n(um)n(b)r(er)g(to)g(test.)37
+b(If)28 b(set)f(to)h(the)g(v)-5 b(alue)27 b(0xFFFFFFFF,)h(all)f
+(\035ash)g(blo)r(c)n(ks)g(will)208 2113 y(b)r(e)h(tested,)f(from)h(blo)
+r(c)n(k)f(0)g(up)h(to)f(the)h(v)-5 b(alue)28 b(Capacit)n(y)e(/)h(P)n
+(ages)g(p)r(er)g(blo)r(c)n(k.)0 2279 y Fi(T)-8 b(est)32
+b(F)-8 b(ailures:)40 b Fh(-)208 2379 y(This)27 b(test)h(do)r(esn't)g
+(fail,)f(it)h(only)f(prin)n(ts)h(a)f(list)h(of)f(bad)g(lo)r(cations)g
+(on)g(the)h(NAND)h(\035ash.)0 2595 y Fi(T)-8 b(est:)42
+b(Erase)32 b(Blo)s(c)m(ks)0 2748 y(T)-8 b(est)32 b(Description:)40
+b Fh(Erase)27 b(a)g(giv)n(en)g(NAND)i(\035ash)e(blo)r(c)n(k,)g(or)f
+(all)i(\035ash)f(blo)r(c)n(ks.)0 2914 y Fi(T)-8 b(est)32
+b(Mo)s(des:)39 b Fh(Custom)28 b(test)0 3080 y Fi(T)-8
+b(est)32 b(Options:)40 b Fh(-)208 3179 y(P)n(age)30 b(size:)45
+b(Set)33 b(the)f(n)n(um)n(b)r(er)f(of)h(b)n(ytes)f(p)r(er)h(page.)49
+b(Usually)31 b(pre-set)g(b)n(y)g(the)i(men)n(u)e(initialization)h(co)r
+(de,)g(if)h(the)208 3279 y(NAND)28 b(\035ash)g(device)f(is)g
+(recognized.)208 3379 y(P)n(ages)e(p)r(er)h(blo)r(c)n(k:)35
+b(Set)27 b(the)f(n)n(um)n(b)r(er)g(of)g(pages)f(con)n(tained)g(within)i
+(a)e(\035ash)h(blo)r(c)n(k.)36 b(Usually)26 b(pre-set)f(b)n(y)h(the)g
+(men)n(u)208 3478 y(initialization)h(co)r(de,)g(if)h(the)g(NAND)h
+(\035ash)e(device)g(is)h(recognized.)208 3578 y(Capacit)n(y:)42
+b(Set)31 b(the)h(total)e(n)n(um)n(b)r(er)h(of)g(pages)e(con)n(tained)i
+(b)n(y)f(the)h(\035ash)g(device.)47 b(Usually)30 b(pre-set)g(b)n(y)h
+(the)g(men)n(u)208 3678 y(initialization)c(co)r(de,)g(if)h(the)g(NAND)h
+(\035ash)e(device)g(is)h(recognized.)208 3777 y(Blo)r(c)n(k)i(n)n(um)n
+(b)r(er:)45 b(Indicate)32 b(whic)n(h)g(blo)r(c)n(k)f(to)h(erase.)48
+b(The)32 b(v)-5 b(alue)31 b(0xFFFFFFFF)i(for)e(this)h(option)g(will)g
+(erase)e(all)208 3877 y(blo)r(c)n(ks.)0 4043 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 4143 y Fi(Sp)s(eci\034ed)33
+b(blo)s(c)m(k)h(#)g(out)g(of)g(range:)41 b Fh(Double-c)n(hec)n(k)28
+b(the)i(Blo)r(c)n(k)f(n)n(um)n(b)r(er)g(option.)43 b(It)30
+b(should)f(b)r(e)h(within)h(the)208 4242 y(range)26 b(0)h(to)g
+(\(Capacit)n(y)g(/)g(P)n(ages)g(p)r(er)g(blo)r(c)n(k\).)208
+4342 y Fi(NAND)g(device)g(rep)s(orts)g(erase)g(failure)g(in)g(blo)s(c)m
+(k:)35 b Fh(The)23 b(NAND)i(status)f(read)e(indicated)i(that)g(the)g
+(previous)208 4441 y(erase)i(command)h(failed.)208 4541
+y Fi(Erase)32 b(error)g(in)g(page:)37 b Fh(\(Unlik)n(ely\))28
+b(The)g(NAND)h(status)f(read)f(did)h(not)g(indicate)g(a)f(failure,)h
+(but)h(the)f(con)n(ten)n(ts)208 4641 y(of)f(the)h(blo)r(c)n(k)f(con)n
+(tained)g(one)g(or)g(more)f('0')i(bits.)0 4856 y Fi(T)-8
+b(est:)42 b(W)-8 b(rite)31 b(T)-8 b(est)32 b(Ptn)g(1)0
+5010 y(T)-8 b(est)32 b(Description:)40 b Fh(W)-7 b(rites)24
+b(the)g(binary)f(pattern)h(01010101b)c(to)k(eac)n(h)f(b)n(yte)g(in)i
+(the)f(giv)n(en)f(blo)r(c)n(k,)h(or)f(all)g(\035ash)h(blo)r(c)n(ks.)208
+5109 y(Mak)n(e)i(sure)h(the)h(blo)r(c)n(ks)f(selected)g(in)h(the)g(Blo)
+r(c)n(k)f(n)n(um)n(b)r(er)g(option)g(ha)n(v)n(e)g(b)r(een)h(erased.)p
+eop
+%%Page: 20 21
+20 20 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(20)0 333 y Fi(T)-8 b(est)32
+b(Mo)s(des:)39 b Fh(Custom)28 b(test)0 499 y Fi(T)-8
+b(est)32 b(Options:)40 b Fh(-)208 598 y(P)n(age)30 b(size:)45
+b(Set)33 b(the)f(n)n(um)n(b)r(er)f(of)h(b)n(ytes)f(p)r(er)h(page.)49
+b(Usually)31 b(pre-set)g(b)n(y)g(the)i(men)n(u)e(initialization)h(co)r
+(de,)g(if)h(the)208 698 y(NAND)28 b(\035ash)g(device)f(is)g
+(recognized.)208 798 y(P)n(ages)e(p)r(er)h(blo)r(c)n(k:)35
+b(Set)27 b(the)f(n)n(um)n(b)r(er)g(of)g(pages)f(con)n(tained)g(within)i
+(a)e(\035ash)h(blo)r(c)n(k.)36 b(Usually)26 b(pre-set)f(b)n(y)h(the)g
+(men)n(u)208 897 y(initialization)h(co)r(de,)g(if)h(the)g(NAND)h
+(\035ash)e(device)g(is)h(recognized.)208 997 y(Capacit)n(y:)42
+b(Set)31 b(the)h(total)e(n)n(um)n(b)r(er)h(of)g(pages)e(con)n(tained)i
+(b)n(y)f(the)h(\035ash)g(device.)47 b(Usually)30 b(pre-set)g(b)n(y)h
+(the)g(men)n(u)208 1096 y(initialization)c(co)r(de,)g(if)h(the)g(NAND)h
+(\035ash)e(device)g(is)h(recognized.)208 1196 y(Blo)r(c)n(k)e(n)n(um)n
+(b)r(er:)37 b(Indicate)27 b(whic)n(h)h(blo)r(c)n(k)f(to)g(write.)37
+b(The)27 b(v)-5 b(alue)28 b(0xFFFFFFFF)g(indicates)g(all)f(blo)r(c)n
+(ks.)0 1362 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b
+Fh(-)208 1462 y Fi(NAND)k(device)g(rep)s(orts)g(program)f(failure)h(in)
+g(page:)58 b Fh(The)38 b(NAND)i(status)e(read)g(indicated)g(that)h(the)
+208 1561 y(previous)d(page)i(write)f(command)h(failed.)68
+b(It's)38 b(p)r(ossible)g(the)g(blo)r(c)n(ks)g(selected)g(for)f(the)h
+(test)h(pattern)f(w)n(eren't)208 1661 y(erased;)26 b(try)h(erasing)f
+(the)i(blo)r(c)n(ks)f(and)g(run)h(this)g(test)f(again.)208
+1761 y Fi(Program)f(error)i(in)f(page:)34 b Fh(\(Unlik)n(ely\))25
+b(The)e(NAND)i(status)f(read)f(did)h(not)g(indicate)f(a)h(failure,)g
+(but)g(when)g(read)208 1860 y(bac)n(k,)i(the)i(con)n(ten)n(ts)f(of)h
+(one)f(or)f(more)h(b)n(ytes)g(w)n(as)g(other)g(than)h(01010101b.)0
+2076 y Fi(T)-8 b(est:)42 b(W)-8 b(rite)31 b(T)-8 b(est)32
+b(Ptn)g(2)0 2229 y(T)-8 b(est)32 b(Description:)40 b
+Fh(W)-7 b(rites)24 b(the)g(binary)f(pattern)h(10101010b)c(to)k(eac)n(h)
+f(b)n(yte)g(in)i(the)f(giv)n(en)f(blo)r(c)n(k,)h(or)f(all)g(\035ash)h
+(blo)r(c)n(ks.)208 2329 y(Mak)n(e)i(sure)h(the)h(blo)r(c)n(ks)f
+(selected)g(in)h(the)g(Blo)r(c)n(k)f(n)n(um)n(b)r(er)g(option)g(ha)n(v)
+n(e)g(b)r(een)h(erased.)0 2495 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
+b Fh(Custom)28 b(test)0 2661 y Fi(T)-8 b(est)32 b(Options:)40
+b Fh(-)208 2761 y(P)n(age)30 b(size:)45 b(Set)33 b(the)f(n)n(um)n(b)r
+(er)f(of)h(b)n(ytes)f(p)r(er)h(page.)49 b(Usually)31
+b(pre-set)g(b)n(y)g(the)i(men)n(u)e(initialization)h(co)r(de,)g(if)h
+(the)208 2860 y(NAND)28 b(\035ash)g(device)f(is)g(recognized.)208
+2960 y(P)n(ages)e(p)r(er)h(blo)r(c)n(k:)35 b(Set)27 b(the)f(n)n(um)n(b)
+r(er)g(of)g(pages)f(con)n(tained)g(within)i(a)e(\035ash)h(blo)r(c)n(k.)
+36 b(Usually)26 b(pre-set)f(b)n(y)h(the)g(men)n(u)208
+3059 y(initialization)h(co)r(de,)g(if)h(the)g(NAND)h(\035ash)e(device)g
+(is)h(recognized.)208 3159 y(Capacit)n(y:)42 b(Set)31
+b(the)h(total)e(n)n(um)n(b)r(er)h(of)g(pages)e(con)n(tained)i(b)n(y)f
+(the)h(\035ash)g(device.)47 b(Usually)30 b(pre-set)g(b)n(y)h(the)g(men)
+n(u)208 3259 y(initialization)c(co)r(de,)g(if)h(the)g(NAND)h(\035ash)e
+(device)g(is)h(recognized.)208 3358 y(Blo)r(c)n(k)e(n)n(um)n(b)r(er:)37
+b(Indicate)27 b(whic)n(h)h(blo)r(c)n(k)f(to)g(write.)37
+b(The)27 b(v)-5 b(alue)28 b(0xFFFFFFFF)g(indicates)g(all)f(blo)r(c)n
+(ks.)0 3524 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b
+Fh(-)208 3624 y Fi(NAND)k(device)g(rep)s(orts)g(program)f(failure)h(in)
+g(page:)58 b Fh(The)38 b(NAND)i(status)e(read)g(indicated)g(that)h(the)
+208 3724 y(previous)d(page)i(write)f(command)h(failed.)68
+b(It's)38 b(p)r(ossible)g(the)g(blo)r(c)n(ks)g(selected)g(for)f(the)h
+(test)h(pattern)f(w)n(eren't)208 3823 y(erased;)26 b(try)h(erasing)f
+(the)i(blo)r(c)n(ks)f(and)g(run)h(this)g(test)f(again.)208
+3923 y Fi(Program)f(error)i(in)f(page:)34 b Fh(\(Unlik)n(ely\))25
+b(The)e(NAND)i(status)f(read)f(did)h(not)g(indicate)f(a)h(failure,)g
+(but)g(when)g(read)208 4023 y(bac)n(k,)i(the)i(con)n(ten)n(ts)f(of)h
+(one)f(or)f(more)h(b)n(ytes)g(w)n(as)g(other)g(than)h(10101010b.)0
+4238 y Fi(T)-8 b(est:)42 b(Get)32 b(NAND)f(Flash)h(ID)0
+4392 y(T)-8 b(est)32 b(Description:)40 b Fh(Send)26 b(the)f(Read)g(ID)h
+(command)f(to)g(the)h(NAND)g(\035ash,)f(and)h(displa)n(y)e(the)i
+(device)f(co)r(de)g(read)f(bac)n(k)208 4491 y(from)j(the)h(device.)0
+4657 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test)0 4823 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
+4923 y(None.)0 5089 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
+b Fh(-)208 5189 y(None.)p eop
+%%Page: 21 22
+21 21 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(21)0 333 y Fi(T)-8 b(est:)42
+b(Dump)31 b(NAND)g(Flash)h(P)m(age)0 486 y(T)-8 b(est)32
+b(Description:)40 b Fh(Displa)n(y)27 b(the)h(con)n(ten)n(ts)f(of)g(a)h
+(giv)n(en)e(NAND)j(\035ash)e(page.)0 643 y Fi(T)-8 b(est)32
+b(Mo)s(des:)39 b Fh(Custom)28 b(test)0 801 y Fi(T)-8
+b(est)32 b(Options:)40 b Fh(-)208 900 y(P)n(age)30 b(size:)45
+b(Set)33 b(the)f(n)n(um)n(b)r(er)f(of)h(b)n(ytes)f(p)r(er)h(page.)49
+b(Usually)31 b(pre-set)g(b)n(y)g(the)i(men)n(u)e(initialization)h(co)r
+(de,)g(if)h(the)208 1000 y(NAND)28 b(\035ash)g(device)f(is)g
+(recognized.)208 1100 y(P)n(age)f(n)n(um)n(b)r(er:)37
+b(Select)28 b(whic)n(h)f(page)g(to)g(displa)n(y)-7 b(.)208
+1199 y(Mem)27 b(cop)n(y)g(start:)36 b(Select)28 b(where)f(in)h(SDRAM)h
+(to)e(cop)n(y)g(the)h(NAND)g(\035ash)g(page)e(for)h(the)h(memory)f
+(dump.)0 1357 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
+b Fh(-)208 1456 y(None.)0 1668 y Fi(T)-8 b(est:)42 b(V)-8
+b(erify)32 b(Erase/New)f(Device)0 1821 y(T)-8 b(est)32
+b(Description:)40 b Fh(Read)31 b(ev)n(ery)g(b)n(yte)g(in)h(the)g(NAND)h
+(\035ash)e(and)h(mak)n(e)f(sure)g(there)g(are)g(no)g('0')g(bits.)50
+b(This)31 b(test)h(is)208 1921 y(recommended)j(for)g(devices)g(suc)n(h)
+g(as)h(the)g(T)-7 b(oshiba)35 b(TC58V64BFT.)f(When)i(receiv)n(ed)e
+(from)i(the)g(factory)-7 b(,)37 b(this)208 2021 y(device)27
+b(should)g(ha)n(v)n(e)g(no)g('0')g(bits.)37 b(An)n(y)28
+b('0')f(bits)h(in)g(the)g(\035ash)f(indicate)g(a)h(bad)f(blo)r(c)n(k.)0
+2178 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test)0 2335 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
+2435 y(P)n(age)30 b(size:)45 b(Set)33 b(the)f(n)n(um)n(b)r(er)f(of)h(b)
+n(ytes)f(p)r(er)h(page.)49 b(Usually)31 b(pre-set)g(b)n(y)g(the)i(men)n
+(u)e(initialization)h(co)r(de,)g(if)h(the)208 2535 y(NAND)28
+b(\035ash)g(device)f(is)g(recognized.)208 2634 y(Capacit)n(y:)42
+b(Set)31 b(the)h(total)e(n)n(um)n(b)r(er)h(of)g(pages)e(con)n(tained)i
+(b)n(y)f(the)h(\035ash)g(device.)47 b(Usually)30 b(pre-set)g(b)n(y)h
+(the)g(men)n(u)208 2734 y(initialization)c(co)r(de,)g(if)h(the)g(NAND)h
+(\035ash)e(device)g(is)h(recognized.)0 2891 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 2991 y(F)-7
+b(or)32 b(the)h(purp)r(oses)f(of)h(error)e(logging,)i(this)h(test)f(do)
+r(es)f(not)h(fail,)i(it)e(only)g(prin)n(ts)g(the)g(\034rst)g(error)e
+(it)i(\034nds)g(in)h(the)208 3091 y(\035ash.)208 3190
+y Fi(Bit)d(error)h(in)f(b)m(yte:)38 b Fh(A)27 b('0')h(bit)g(w)n(as)e
+(found)i(within)g(a)g(\035ash)f(blo)r(c)n(k.)0 3502 y
+Fe(3.6)130 b(Memory)0 3701 y Fd(3.6.1)112 b(Submen)m(u)38
+b(Description)0 3854 y Fh(The)31 b(tests)h(in)f(this)h(men)n(u)g(p)r
+(erform)e(v)-5 b(arious)31 b(tests)g(of)g(the)h(installed)f(RAM)h(to)f
+(\034nd)h(t)n(ypical)f(memory)g(\035a)n(ws.)47 b(Some)31
+b(of)0 3953 y(these)d(tests)f(w)n(ere)g(inspired)g(b)n(y)g(the)h(MemT)
+-7 b(est86)27 b(application)g(for)g(x86)f(hardw)n(are.)0
+4182 y Fd(3.6.2)112 b(Submen)m(u)38 b(Options)0 4335
 y Fh(Debug)28 b(Lev)n(el:)40 b(View)34 b(diagnostics)e(soft)n(w)n(are)g
 (debug)h(information.)54 b(F)-7 b(our)33 b(lev)n(els)g(of)h(debugging)e
 (are)h(a)n(v)-5 b(ailable:)47 b(\()p Fi(0)39 b(=)420
-1269 y(none)p Fh(,)27 b(1)g(=)g(terse,)g(2)g(=)h(v)n(erb)r(ose,)e(3)h
-(=)g(massiv)n(e)g(screen)f(scroll\).)0 1435 y(Memory)h(base)g(address:)
+4435 y(none)p Fh(,)27 b(1)g(=)g(terse,)g(2)g(=)h(v)n(erb)r(ose,)e(3)h
+(=)g(massiv)n(e)g(screen)f(scroll\).)0 4592 y(Memory)h(base)g(address:)
 40 b(The)30 b(lo)n(w)n(est)e(address)h(for)g(memory)g(testing.)44
 b(Setting)30 b(this)h(v)-5 b(alue)29 b(lo)n(w)n(er)g(than)h(the)g
-(default)g(is)420 1535 y(not)35 b(recommended,)h(since)f(the)g
+(default)g(is)420 4692 y(not)35 b(recommended,)h(since)f(the)g
 (diagnostics)e(executable)i(requires)e(the)j(b)r(ottom)f(of)g(memory)f
-(to)h(remain)420 1634 y(un)n(touc)n(hed.)50 b(Ca)n(v)n(eat)31
+(to)h(remain)420 4791 y(un)n(touc)n(hed.)50 b(Ca)n(v)n(eat)31
 b(op)r(erator.)50 b(If)33 b(this)f(v)-5 b(alue)32 b(is)h(higher)e(than)
 i(Memory)e(end)i(address,)f(the)h(t)n(w)n(o)f(v)-5 b(alues)420
-1734 y(will)25 b(b)r(e)g(sw)n(app)r(ed)g(when)g(the)h(tests)f(are)f
+4891 y(will)25 b(b)r(e)g(sw)n(app)r(ed)g(when)g(the)h(tests)f(are)f
 (run.)36 b(If)26 b(this)f(v)-5 b(alue)25 b(is)g(not)g(aligned)g(to)g
-(the)g(maxim)n(um)g(test)g(address)420 1834 y(size)k(\(see)h(Memory)e
+(the)g(maxim)n(um)g(test)g(address)420 4991 y(size)k(\(see)h(Memory)e
 (test)i(size,)g(b)r(elo)n(w\),)g(then)h(the)f(address)e(will)i(b)r(e)g
 Fa(de)l(cr)l(emente)l(d)38 b Fh(to)30 b(the)g(nearest)f(aligned)420
-1933 y(address)j(when)j(the)f(tests)g(are)f(run.)56 b(This)34
+5090 y(address)j(when)j(the)f(tests)g(are)f(run.)56 b(This)34
 b(option)g(also)f(doubles)h(as)f(the)h(source)f(bu\033er)h(address)f
-(for)h(the)420 2033 y(DMA)28 b(test.)0 2199 y(Memory)f(end)g(address:)
-41 b(The)32 b(highest)g(address)f(for)h(memory)g(testing.)51
-b(Setting)32 b(this)h(v)-5 b(alue)32 b(greater)f(than)h(the)h(size)f
-(of)420 2299 y(the)e(ph)n(ysical)f(RAM)h(a)n(v)-5 b(ailable)29
-b(is)h(not)f(recommended,)h(since)g(usually)f(the)h(ph)n(ysical)f
-(address)g(will)h(simply)420 2398 y(wrap)e(around)h(to)g(the)h(b)r
-(ottom)g(of)f(memory)g(-)g(where)g(the)h(diagnostics)e(executable)h
+(for)h(the)420 5190 y(DMA)28 b(test.)p eop
+%%Page: 22 23
+22 22 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(22)0 333 y(Memory)27
+b(end)g(address:)41 b(The)32 b(highest)g(address)f(for)h(memory)g
+(testing.)51 b(Setting)32 b(this)h(v)-5 b(alue)32 b(greater)f(than)h
+(the)h(size)f(of)420 432 y(the)e(ph)n(ysical)f(RAM)h(a)n(v)-5
+b(ailable)29 b(is)h(not)f(recommended,)h(since)g(usually)f(the)h(ph)n
+(ysical)f(address)g(will)h(simply)420 532 y(wrap)e(around)h(to)g(the)h
+(b)r(ottom)g(of)f(memory)g(-)g(where)g(the)h(diagnostics)e(executable)h
 (liv)n(es.)42 b(If)30 b(this)g(v)-5 b(alue)29 b(is)420
-2498 y(lo)n(w)n(er)c(than)i(Memory)f(base)g(address,)g(the)h(t)n(w)n(o)
-f(v)-5 b(alues)27 b(will)g(b)r(e)g(sw)n(app)r(ed)g(when)g(the)g(tests)g
-(are)f(run.)36 b(If)28 b(this)420 2598 y(v)-5 b(alue)31
+632 y(lo)n(w)n(er)c(than)i(Memory)f(base)g(address,)g(the)h(t)n(w)n(o)f
+(v)-5 b(alues)27 b(will)g(b)r(e)g(sw)n(app)r(ed)g(when)g(the)g(tests)g
+(are)f(run.)36 b(If)28 b(this)420 731 y(v)-5 b(alue)31
 b(is)h(not)g(aligned)f(to)h(the)g(maxim)n(um)g(test)g(address)e(size)i
 (\(see)g(Memory)f(test)h(size,)g(b)r(elo)n(w\),)h(then)g(the)420
-2697 y(address)26 b(will)i(b)r(e)g Fa(incr)l(emente)l(d)36
+831 y(address)26 b(will)i(b)r(e)g Fa(incr)l(emente)l(d)36
 b Fh(to)27 b(the)h(nearest)f(aligned)g(address)f(when)i(the)g(tests)f
-(are)g(run.)0 2863 y(Memory)g(test)g(size:)42 b(The)28
+(are)g(run.)0 992 y(Memory)g(test)g(size:)42 b(The)28
 b(data)g(size\(s\))h(to)f(use)h(during)f(the)h(test.)40
 b(F)-7 b(our)28 b(options)g(are)g(a)n(v)-5 b(ailable:)37
-b(\(0)29 b(=)f(b)n(yte)h(\(8)f(bits\),)h(1)420 2963 y(=)e(w)n(ord)f
+b(\(0)29 b(=)f(b)n(yte)h(\(8)f(bits\),)h(1)420 1091 y(=)e(w)n(ord)f
 (\(16)h(bits\),)h(2)g(=)f(long)g(\(32)g(bits\),)h Fi(3)j(=)h(test)g
-(all)f(sizes)p Fh(\).)0 3129 y(Random)c(data:)41 b(Flags)20
+(all)f(sizes)p Fh(\).)0 1252 y(Random)c(data:)41 b(Flags)20
 b(whic)n(h)g(data)g(t)n(yp)r(e)g(should)h(b)r(e)f(used)h(in)f(the)h
 (Memory)f(P)n(atterns)g(test.)34 b(T)-7 b(w)n(o)20 b(options)g(are)f(a)
-n(v)-5 b(ailable:)420 3228 y(\(0)27 b(=)g(\034xed)h(data)f(\(see)g(T)-7
+n(v)-5 b(ailable:)420 1352 y(\(0)27 b(=)g(\034xed)h(data)f(\(see)g(T)-7
 b(est)28 b(data)f(option\),)h Fi(other)j(=)h(pseudo-random)e(data)p
-Fh(\).)0 3395 y(T)-7 b(est)28 b(data:)52 b(If)32 b(the)g(Random)f(data)
+Fh(\).)0 1512 y(T)-7 b(est)28 b(data:)52 b(If)32 b(the)g(Random)f(data)
 g(option)g(is)g(set)h(to)f(\034xed)h(data,)g(this)g(is)f(the)h(v)-5
 b(alue)32 b(to)f(place)g(in)n(to)h(eac)n(h)e(address.)48
-b(It)420 3494 y(will)27 b(b)r(e)h(truncated)g(to)f(\034t)h(the)g(maxim)
+b(It)420 1612 y(will)27 b(b)r(e)h(truncated)g(to)f(\034t)h(the)g(maxim)
 n(um)g(data)f(size)g(selected)g(in)h(the)g(Memory)f(test)h(size)f
-(option.)0 3660 y(DMA)h(bu\033er)g(address:)40 b(Selects)28
+(option.)0 1773 y(DMA)h(bu\033er)g(address:)40 b(Selects)28
 b(the)g(destination)f(address)f(for)h(the)h(DMA)h(transfer.)0
-3826 y(DMA)f(size:)42 b(Selects)27 b(the)h(n)n(um)n(b)r(er)f(of)h(b)n
+1934 y(DMA)f(size:)42 b(Selects)27 b(the)h(n)n(um)n(b)r(er)f(of)h(b)n
 (ytes)f(to)g(transfer)g(from)g(the)h(source)e(to)i(the)g(destination)f
-(bu\033er.)0 3992 y(DMA)h(in)n(terrupt)g(test:)41 b(If)28
+(bu\033er.)0 2095 y(DMA)h(in)n(terrupt)g(test:)41 b(If)28
 b(this)g(option)g(is)f(set,)h(the)g(DMA)h(engine)e(will)h(b)r(e)g(allo)
 n(w)n(ed)e(to)i(in)n(terrupt)f(the)h(CPU)h(during)e(the)420
-4092 y(DMA)h(test.)0 4258 y(Enable)g(icac)n(he:)40 b(If)g(this)f
+2194 y(DMA)h(test.)0 2355 y(Enable)g(icac)n(he:)40 b(If)g(this)f
 (option)f(is)h(set,)j(enable)c(the)h(instruction)g(cac)n(he)f(b)r
 (efore)g(running)h(the)g(test,)j(and)c(disable)h(it)420
-4358 y(afterw)n(ards)25 b(\(default\).)39 b(If)28 b(not)f(set,)h(don't)
+2455 y(afterw)n(ards)25 b(\(default\).)39 b(If)28 b(not)f(set,)h(don't)
 g(c)n(hange)f(the)h(instruction)f(cac)n(he)g(state.)37
-b(This)27 b(option)h(is)f(ignored)420 4457 y(if)h(instruction)f(cac)n
+b(This)27 b(option)h(is)f(ignored)420 2554 y(if)h(instruction)f(cac)n
 (he)g(supp)r(ort)g(has)g(b)r(een)h(globally)e(disabled)i(when)f(the)h
-(diagnostics)e(w)n(ere)h(compiled.)0 4623 y(Dump)h(mem)g(start:)41
+(diagnostics)e(w)n(ere)h(compiled.)0 2715 y(Dump)h(mem)g(start:)41
 b(Indicates)28 b(where)f(the)i(Displa)n(y)e(Memory)g(custom)h(test)g(b)
 r(egins)g(its)g(memory)f(dump.)39 b(If)28 b(this)g(v)-5
-b(alue)420 4723 y(is)23 b(greater)f(than)i(Dump)h(mem)f(end,)g(the)g(t)
+b(alue)420 2815 y(is)23 b(greater)f(than)i(Dump)h(mem)f(end,)g(the)g(t)
 n(w)n(o)f(v)-5 b(alues)24 b(will)g(b)r(e)g(sw)n(app)r(ed)f(when)h(the)g
 (test)g(is)g(run.)35 b(If)24 b(the)g(v)-5 b(alue)420
-4823 y(is)25 b(not)g(aligned)g(to)h(the)f(address)g(size)g(selected)g
+2914 y(is)25 b(not)g(aligned)g(to)h(the)f(address)g(size)g(selected)g
 (in)h(Dump)g(mem)g(size,)f(the)h(address)e(will)i(b)r(e)g
-Fa(de)l(cr)l(emente)l(d)34 b Fh(to)420 4922 y(the)28
-b(nearest)e(aligned)h(address)f(when)i(the)g(test)g(is)f(run.)p
-eop
-%%Page: 19 20
-19 19 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(19)0 333 y(Dump)28 b(mem)g(end:)42
-b(Indicates)29 b(where)g(the)h(Displa)n(y)f(Memory)g(custom)g(test)h
-(ends)f(its)h(memory)f(dump.)43 b(If)30 b(this)g(v)-5
-b(alue)29 b(is)420 432 y(less)f(than)g(Dump)h(mem)g(start,)f(the)h(t)n
-(w)n(o)e(v)-5 b(alues)28 b(will)h(b)r(e)f(sw)n(app)r(ed)g(when)h(the)g
-(test)f(is)g(run.)39 b(If)29 b(the)g(v)-5 b(alue)28 b(is)420
-532 y(not)i(aligned)h(to)f(the)h(address)f(size)g(selected)h(in)g(Dump)
-h(mem)f(size,)g(the)g(address)f(will)h(b)r(e)g Fa(incr)l(emente)l(d)39
-b Fh(to)420 632 y(the)28 b(nearest)e(aligned)h(address)f(when)i(the)g
-(test)g(is)f(run.)0 794 y(Dump)h(mem)g(size:)41 b(Indicates)25
-b(the)f(memory)g(size)g(in)h(b)n(ytes)f(to)g(use)g(when)h(dumping)g
-(memory)e(via)h(the)h(Displa)n(y)f(Memory)420 894 y(custom)j(test.)37
-b(Three)27 b(sizes)g(are)g(supp)r(orted:)36 b(\(1)28
-b(=)f(b)n(yte,)g(2)h(=)f(w)n(ord,)f Fi(4)32 b(=)g(longw)m(ord)p
-Fh(\).)0 1125 y Fd(3.5.3)112 b(T)-9 b(est)37 b(Descriptions)0
-1278 y Fi(T)-8 b(est:)42 b(Quic)m(k)32 b(T)-8 b(est)0
-1431 y(T)g(est)32 b(Description:)40 b Fh(This)34 b(test)g(writes)g(the)
-g(same)f(data)h(pattern)g(as)f(\020Own)g(A)n(ddress\021,)i(b)r(elo)n
-(w,)g(but)f(only)g(reads)f(the)208 1531 y(data)d(bac)n(k)f(once.)46
-b(This)30 b(test)h(is)f(mean)n(t)h(for)f(p)r(o)n(w)n(er-up)f
-(situations,)i(in)f(whic)n(h)h(test)g(time)g(should)f(b)r(e)h(as)f
-(short)g(as)208 1630 y(p)r(ossible.)36 b(One)27 b(of)h(the)g(LEDs)g
-(should)f(blink)h(during)f(the)h(test)g(to)f(indicate)h(that)g(it)g(is)
-f(still)h(running.)0 1793 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(All)28 b(test)g(mo)r(des.)0 1955 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 2055 y(Memory)26 b(base)h(address:)36
-b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
-2155 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
-(for)h(the)h(test.)208 2254 y(Memory)e(test)i(size:)37
-b(Ignored.)e(Only)27 b(the)h(longw)n(ord)e(data)h(size)g(is)h(tested.)
-208 2354 y(Enable)f(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)
-f(the)h(instruction)f(cac)n(he)g(during)g(the)h(test.)0
-2517 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-2616 y Fi(While)33 b(reading:)43 b Fh(Indicates)30 b(that)h(the)g(v)-5
-b(alue)30 b(c)n(hanged)g(someho)n(w)f(after)i(it)g(w)n(as)e(written,)j
-(or)e(w)n(as)f(not)i(written)208 2716 y(prop)r(erly)-7
-b(.)0 2976 y Fi(T)f(est:)42 b(Own)31 b(A)m(ddress)0 3130
-y(T)-8 b(est)32 b(Description:)40 b Fh(This)25 b(test)f(writes)g(eac)n
-(h)g(address)f(v)-5 b(alue)25 b(to)f(ev)n(ery)f(address)h(\(i.e.)36
-b(eac)n(h)24 b(address)f(con)n(tains)g(its)i(\020o)n(wn)208
-3229 y(address\021)33 b(as)28 b(data\).)39 b(Ev)n(ery)28
-b(address)f(is)i(tested)f(t)n(wice:)39 b(once)28 b(immediately)g(after)
-h(writing)f(the)g(v)-5 b(alue,)29 b(and)f(again)208 3329
-y(after)f(all)g(addresses)f(are)h(written)g(in)h(order)e(to)i(detect)g
-(memory)e(aliasing)h(problems.)0 3491 y Fi(T)-8 b(est)32
-b(Mo)s(des:)39 b Fh(Basic)27 b(and)g(burn-in)h(mo)r(des.)0
-3654 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 3754
+Fa(de)l(cr)l(emente)l(d)34 b Fh(to)420 3014 y(the)28
+b(nearest)e(aligned)h(address)f(when)i(the)g(test)g(is)f(run.)0
+3175 y(Dump)h(mem)g(end:)42 b(Indicates)29 b(where)g(the)h(Displa)n(y)f
+(Memory)g(custom)g(test)h(ends)f(its)h(memory)f(dump.)43
+b(If)30 b(this)g(v)-5 b(alue)29 b(is)420 3274 y(less)f(than)g(Dump)h
+(mem)g(start,)f(the)h(t)n(w)n(o)e(v)-5 b(alues)28 b(will)h(b)r(e)f(sw)n
+(app)r(ed)g(when)h(the)g(test)f(is)g(run.)39 b(If)29
+b(the)g(v)-5 b(alue)28 b(is)420 3374 y(not)i(aligned)h(to)f(the)h
+(address)f(size)g(selected)h(in)g(Dump)h(mem)f(size,)g(the)g(address)f
+(will)h(b)r(e)g Fa(incr)l(emente)l(d)39 b Fh(to)420 3474
+y(the)28 b(nearest)e(aligned)h(address)f(when)i(the)g(test)g(is)f(run.)
+0 3634 y(Dump)h(mem)g(size:)41 b(Indicates)25 b(the)f(memory)g(size)g
+(in)h(b)n(ytes)f(to)g(use)g(when)h(dumping)g(memory)e(via)h(the)h
+(Displa)n(y)f(Memory)420 3734 y(custom)j(test.)37 b(Three)27
+b(sizes)g(are)g(supp)r(orted:)36 b(\(1)28 b(=)f(b)n(yte,)g(2)h(=)f(w)n
+(ord,)f Fi(4)32 b(=)g(longw)m(ord)p Fh(\).)0 3964 y Fd(3.6.3)112
+b(T)-9 b(est)37 b(Descriptions)0 4117 y Fi(T)-8 b(est:)42
+b(Quic)m(k)32 b(T)-8 b(est)0 4271 y(T)g(est)32 b(Description:)40
+b Fh(This)34 b(test)g(writes)g(the)g(same)f(data)h(pattern)g(as)f
+(\020Own)g(A)n(ddress\021,)i(b)r(elo)n(w,)g(but)f(only)g(reads)f(the)
+208 4370 y(data)d(bac)n(k)f(once.)46 b(This)30 b(test)h(is)f(mean)n(t)h
+(for)f(p)r(o)n(w)n(er-up)f(situations,)i(in)f(whic)n(h)h(test)g(time)g
+(should)f(b)r(e)h(as)f(short)g(as)208 4470 y(p)r(ossible.)36
+b(One)27 b(of)h(the)g(LEDs)g(should)f(blink)h(during)f(the)h(test)g(to)
+f(indicate)h(that)g(it)g(is)f(still)h(running.)0 4631
+y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0
+4791 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 4891
 y(Memory)26 b(base)h(address:)36 b(Selects)27 b(the)h(start)f(address)f
-(for)h(the)h(test.)208 3853 y(Memory)e(end)i(address:)36
+(for)h(the)h(test.)208 4991 y(Memory)e(end)i(address:)36
 b(Selects)27 b(the)h(end)g(address)e(for)h(the)h(test.)208
-3953 y(Memory)e(test)i(size:)37 b(Selects)27 b(the)h(data)f(size\(s\))h
-(for)f(the)h(test.)208 4053 y(Enable)f(icac)n(he:)36
-b(Selects)28 b(whether)f(to)h(enable)f(the)h(instruction)f(cac)n(he)g
-(during)g(the)h(test.)0 4215 y Fi(T)-8 b(est)32 b(F)-8
-b(ailures:)40 b Fh(-)208 4315 y Fi(While)30 b(writing:)35
-b Fh(Indicates)28 b(that)f(the)h(v)-5 b(alue)28 b(w)n(as)e(not)i
-(written)g(correctly)e(to)h(the)h(indicated)g(address.)208
-4414 y Fi(While)i(reading:)36 b Fh(Indicates)27 b(that)h(the)g(v)-5
-b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h(w)n(as)f(written.)0
-4675 y Fi(T)-8 b(est:)42 b(Memory)30 b(P)m(atterns)0
-4828 y(T)-8 b(est)32 b(Description:)40 b Fh(This)f(test)h(writes)e
-(either)h(a)g(pseudo-random)e(or)i(\034xed)g(data)f(v)-5
-b(alue)39 b(\(see)g(the)h(Random)f(data)208 4928 y(option\))28
-b(to)g(eac)n(h)g(address.)38 b(Ev)n(ery)28 b(address)f(is)i(tested)f(t)
-n(wice:)39 b(once)28 b(immediately)h(after)f(writing)g(the)h(v)-5
-b(alue,)28 b(and)208 5027 y(again)e(after)h(all)g(addresses)f(are)h
-(written)h(in)f(order)g(to)g(detect)h(aliasing)e(problems.)0
-5190 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
-b(and)g(burn-in)h(mo)r(des.)p eop
-%%Page: 20 21
-20 20 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(20)0 333 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 432 y(Memory)26 b(base)h(address:)36
+5090 y(Memory)e(test)i(size:)37 b(Ignored.)e(Only)27
+b(the)h(longw)n(ord)e(data)h(size)g(is)h(tested.)208
+5190 y(Enable)f(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
+(the)h(instruction)f(cac)n(he)g(during)g(the)h(test.)p
+eop
+%%Page: 23 24
+23 23 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(23)0 333 y Fi(T)-8 b(est)32
+b(F)-8 b(ailures:)40 b Fh(-)208 432 y Fi(While)33 b(reading:)43
+b Fh(Indicates)30 b(that)h(the)g(v)-5 b(alue)30 b(c)n(hanged)g(someho)n
+(w)f(after)i(it)g(w)n(as)e(written,)j(or)e(w)n(as)f(not)i(written)208
+532 y(prop)r(erly)-7 b(.)0 797 y Fi(T)f(est:)42 b(Own)31
+b(A)m(ddress)0 951 y(T)-8 b(est)32 b(Description:)40
+b Fh(This)25 b(test)f(writes)g(eac)n(h)g(address)f(v)-5
+b(alue)25 b(to)f(ev)n(ery)f(address)h(\(i.e.)36 b(eac)n(h)24
+b(address)f(con)n(tains)g(its)i(\020o)n(wn)208 1050 y(address\021)33
+b(as)28 b(data\).)39 b(Ev)n(ery)28 b(address)f(is)i(tested)f(t)n(wice:)
+39 b(once)28 b(immediately)g(after)h(writing)f(the)g(v)-5
+b(alue,)29 b(and)f(again)208 1150 y(after)f(all)g(addresses)f(are)h
+(written)g(in)h(order)e(to)i(detect)g(memory)e(aliasing)h(problems.)0
+1316 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)0 1482 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 1582 y(Memory)26 b(base)h(address:)36
 b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
-532 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
-(for)h(the)h(test.)208 632 y(Memory)e(test)i(size:)37
+1681 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
+(for)h(the)h(test.)208 1781 y(Memory)e(test)i(size:)37
 b(Selects)27 b(the)h(data)f(size\(s\))h(for)f(the)h(test.)208
-731 y(Random)f(data:)36 b(Selects)28 b(whether)f(the)h(test)g(should)f
-(write)g(pseudo-random)f(or)h(\034xed)g(data.)208 831
+1881 y(Enable)f(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
+(the)h(instruction)f(cac)n(he)g(during)g(the)h(test.)0
+2047 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+2146 y Fi(While)30 b(writing:)35 b Fh(Indicates)28 b(that)f(the)h(v)-5
+b(alue)28 b(w)n(as)e(not)i(written)g(correctly)e(to)h(the)h(indicated)g
+(address.)208 2246 y Fi(While)i(reading:)36 b Fh(Indicates)27
+b(that)h(the)g(v)-5 b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h
+(w)n(as)f(written.)0 2511 y Fi(T)-8 b(est:)42 b(Memory)30
+b(P)m(atterns)0 2665 y(T)-8 b(est)32 b(Description:)40
+b Fh(This)f(test)h(writes)e(either)h(a)g(pseudo-random)e(or)i(\034xed)g
+(data)f(v)-5 b(alue)39 b(\(see)g(the)h(Random)f(data)208
+2764 y(option\))28 b(to)g(eac)n(h)g(address.)38 b(Ev)n(ery)28
+b(address)f(is)i(tested)f(t)n(wice:)39 b(once)28 b(immediately)h(after)
+f(writing)g(the)h(v)-5 b(alue,)28 b(and)208 2864 y(again)e(after)h(all)
+g(addresses)f(are)h(written)h(in)f(order)g(to)g(detect)h(aliasing)e
+(problems.)0 3030 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b
+Fh(Basic)27 b(and)g(burn-in)h(mo)r(des.)0 3196 y Fi(T)-8
+b(est)32 b(Options:)40 b Fh(-)208 3296 y(Memory)26 b(base)h(address:)36
+b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
+3395 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
+(for)h(the)h(test.)208 3495 y(Memory)e(test)i(size:)37
+b(Selects)27 b(the)h(data)f(size\(s\))h(for)f(the)h(test.)208
+3595 y(Random)f(data:)36 b(Selects)28 b(whether)f(the)h(test)g(should)f
+(write)g(pseudo-random)f(or)h(\034xed)g(data.)208 3694
 y(T)-7 b(est)27 b(data:)36 b(Selects)28 b(the)g(v)-5
 b(alue)27 b(to)h(write)f(to)h(eac)n(h)e(lo)r(cation)h(\(if)i(Random)e
-(data)g(has)g(b)r(een)h(set)f(appropriately\).)208 930
+(data)g(has)g(b)r(een)h(set)f(appropriately\).)208 3794
 y(Enable)g(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f(the)h
-(instruction)f(cac)n(he)g(during)g(the)h(test.)0 1093
-y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 1193
+(instruction)f(cac)n(he)g(during)g(the)h(test.)0 3960
+y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 4059
 y Fi(While)30 b(writing:)35 b Fh(Indicates)28 b(that)f(the)h(v)-5
 b(alue)28 b(w)n(as)e(not)i(written)g(correctly)e(to)h(the)h(indicated)g
-(address.)208 1292 y Fi(While)i(reading:)36 b Fh(Indicates)27
+(address.)208 4159 y Fi(While)i(reading:)36 b Fh(Indicates)27
 b(that)h(the)g(v)-5 b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h
-(w)n(as)f(written.)0 1553 y Fi(T)-8 b(est:)42 b(Mo)m(ving)31
-b(In)m(v)m(ersions)0 1707 y(T)-8 b(est)32 b(Description:)40
+(w)n(as)f(written.)0 4425 y Fi(T)-8 b(est:)42 b(Mo)m(ving)31
+b(In)m(v)m(ersions)0 4578 y(T)-8 b(est)32 b(Description:)40
 b Fh(This)35 b(test)g(\034rst)g(clears)e(the)j(memory)e(area,)h(then)g
 (starting)f(at)h(the)g(\034rst)g(address)f(ensures)g(the)208
-1806 y(address)d(con)n(tains)h(zero)r(es,)g(then)i(sets)e(ev)n(ery)f
+4678 y(address)d(con)n(tains)h(zero)r(es,)g(then)i(sets)e(ev)n(ery)f
 (bit)j(in)f(the)g(address.)51 b(Once)32 b(the)h(last)f(address)g(has)g
-(b)r(een)h(written,)208 1906 y(the)c(test)g(starts)g(again)e(at)i(the)h
+(b)r(een)h(written,)208 4777 y(the)c(test)g(starts)g(again)e(at)i(the)h
 (last)f(address,)f(but)h(this)h(time)f(mak)n(es)f(sure)h(ev)n(ery)f
-(bit)h(is)g(set,)h(then)f(clears)f(all)h(bits)208 2006
+(bit)h(is)g(set,)h(then)f(clears)f(all)h(bits)208 4877
 y(b)r(efore)g(mo)n(ving)g(to)g(the)i(previous)d(address.)42
 b(The)30 b(goal)f(of)g(this)h(test)g(is)g(to)g(ensure)f(that)h(setting)
-g(or)e(clearing)h(bits)208 2105 y(in)e(an)h(address)e(w)n(on't)h(ha)n
+g(or)e(clearing)h(bits)208 4976 y(in)e(an)h(address)e(w)n(on't)h(ha)n
 (v)n(e)g(an)n(y)f(e\033ect)i(on)g(adjacen)n(t)f(addresses.)0
-2268 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
-b(and)g(burn-in)h(mo)r(des.)0 2431 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 2530 y(Memory)26 b(base)h(address:)36
+5142 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)p eop
+%%Page: 24 25
+24 24 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(24)0 333 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 432 y(Memory)26 b(base)h(address:)36
 b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
-2630 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
-(for)h(the)h(test.)208 2730 y(Memory)e(test)i(size:)37
+532 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
+(for)h(the)h(test.)208 632 y(Memory)e(test)i(size:)37
 b(Selects)27 b(the)h(data)f(size\(s\))h(for)f(the)h(test.)208
-2829 y(Enable)f(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
+731 y(Enable)f(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
 (the)h(instruction)f(cac)n(he)g(during)g(the)h(test.)0
-2992 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-3092 y Fi(While)28 b(writing:)35 b Fh(Indicates)26 b(that)h(the)f(all)g
+897 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+997 y Fi(While)28 b(writing:)35 b Fh(Indicates)26 b(that)h(the)f(all)g
 (1's)g(or)f(all)h(0's)g(pattern)g(w)n(as)f(not)h(written)h(correctly)d
-(to)i(the)h(indicated)208 3191 y(address.)208 3291 y
+(to)i(the)h(indicated)208 1096 y(address.)208 1196 y
 Fi(While)35 b(reading:)44 b Fh(Indicates)31 b(that)h(the)g(previous)f
 (all)g(1's)g(or)g(all)g(0's)g(pattern)h(c)n(hanged)e(someho)n(w)h
-(after)g(it)h(w)n(as)208 3391 y(written.)0 3652 y Fi(T)-8
-b(est:)42 b(DMA)0 3805 y(T)-8 b(est)32 b(Description:)40
+(after)g(it)h(w)n(as)208 1296 y(written.)0 1561 y Fi(T)-8
+b(est:)42 b(DMA)0 1715 y(T)-8 b(est)32 b(Description:)40
 b Fh(This)25 b(test)f(p)r(erforms)g(a)g(DMA)h(transfer)f(from)g(one)g
 (SDRAM)i(bu\033er)e(to)h(another,)f(then)h(compares)208
-3905 y(the)d(source)f(bu\033er)i(to)f(the)h(destination)f(bu\033er)g
+1814 y(the)d(source)f(bu\033er)i(to)f(the)h(destination)f(bu\033er)g
 (to)g(v)n(erify)g(that)g(the)h(DMA)g(engine)f(transferred)f(the)i(data)
-f(correctly)-7 b(.)0 4067 y Fi(T)f(est)32 b(Mo)s(des:)39
-b Fh(All)28 b(test)g(mo)r(des.)0 4230 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 4330 y(Memory)26 b(base)h(address:)36
+f(correctly)-7 b(.)0 1980 y Fi(T)f(est)32 b(Mo)s(des:)39
+b Fh(All)28 b(test)g(mo)r(des.)0 2146 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 2246 y(Memory)26 b(base)h(address:)36
 b(Selects)27 b(the)h(source)e(bu\033er)i(address.)208
-4429 y(DMA)g(bu\033er)g(address:)35 b(Selects)28 b(the)g(destination)f
-(bu\033er)h(address.)208 4529 y(DMA)g(size:)36 b(Sets)28
-b(the)g(DMA)h(transfer)d(size)h(in)h(b)n(ytes.)208 4629
+2345 y(DMA)g(bu\033er)g(address:)35 b(Selects)28 b(the)g(destination)f
+(bu\033er)h(address.)208 2445 y(DMA)g(size:)36 b(Sets)28
+b(the)g(DMA)h(transfer)d(size)h(in)h(b)n(ytes.)208 2545
 y(DMA)g(in)n(terrupt)f(test:)37 b(If)28 b(set,)g(the)g(DMA)g(engine)g
 (in)n(terrupts)e(the)i(CPU)h(when)f(the)f(transfer)g(is)g(complete.)208
-4728 y(Enable)i(icac)n(he:)38 b(Selects)29 b(whether)f(to)h(enable)f
+2644 y(Enable)i(icac)n(he:)38 b(Selects)29 b(whether)f(to)h(enable)f
 (the)i(instruction)e(cac)n(he)g(while)h(comparing)e(the)i(source)f(and)
-g(desti-)208 4828 y(nation)f(bu\033ers.)0 4991 y Fi(T)-8
-b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 5090 y Fi(DMA)k(transfer)h
+g(desti-)208 2744 y(nation)f(bu\033ers.)0 2910 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 3010 y Fi(DMA)k(transfer)h
 (incomplete:)55 b Fh(The)39 b(DMA)g(bu\033er)f(descriptor)g(w)n(as)f
 (nev)n(er)g(up)r(dated)i(b)n(y)f(the)h(CPM.)g(This)208
-5190 y(usually)27 b(indicates)g(that)h(one)f(\(or)g(b)r(oth\))h(of)g
+3109 y(usually)27 b(indicates)g(that)h(one)f(\(or)g(b)r(oth\))h(of)g
 (the)g(source)e(or)h(destination)g(addresses)f(is)h(in)n(v)-5
-b(alid.)p eop
-%%Page: 21 22
-21 21 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(21)208 333 y Fi(Memory)36
-b(mismatc)m(h:)44 b Fh(The)32 b(DMA)i(transfer)e(completed,)i(but)f
-(the)g(source)e(and)i(destination)f(bu\033ers)h(do)f(not)208
-432 y(matc)n(h.)k(This)27 b(can)f(happ)r(en)h(if)h(the)f(destination)g
-(bu\033er)g(is)g(not)g(in)g(a)f(writeable)h(memory)f(device,)h(or)f(if)
-h(the)g(source)208 532 y(bu\033er)g(is)h(not)f(in)h(a)f(device)h(at)f
-(all.)0 783 y Fi(T)-8 b(est:)42 b(Displa)m(y)32 b(Memory)0
-936 y(T)-8 b(est)32 b(Description:)40 b Fh(This)18 b(displa)n(ys)g(the)
-g(con)n(ten)n(ts)g(of)g(the)h(addresses)e(b)r(et)n(w)n(een)h(Dump)h
-(mem)g(start)f(and)g(Dump)h(mem)g(end.)208 1036 y(Both)i(hexadecimal)f
-(and)h(ASCI)r(I)h(v)-5 b(alues)21 b(will)h(b)r(e)g(sho)n(wn.)33
+b(alid.)208 3209 y Fi(Memory)36 b(mismatc)m(h:)44 b Fh(The)32
+b(DMA)i(transfer)e(completed,)i(but)f(the)g(source)e(and)i(destination)
+f(bu\033ers)h(do)f(not)208 3309 y(matc)n(h.)k(This)27
+b(can)f(happ)r(en)h(if)h(the)f(destination)g(bu\033er)g(is)g(not)g(in)g
+(a)f(writeable)h(memory)f(device,)h(or)f(if)h(the)g(source)208
+3408 y(bu\033er)g(is)h(not)f(in)h(a)f(device)h(at)f(all.)0
+3674 y Fi(T)-8 b(est:)42 b(Displa)m(y)32 b(Memory)0 3827
+y(T)-8 b(est)32 b(Description:)40 b Fh(This)18 b(displa)n(ys)g(the)g
+(con)n(ten)n(ts)g(of)g(the)h(addresses)e(b)r(et)n(w)n(een)h(Dump)h(mem)
+g(start)f(and)g(Dump)h(mem)g(end.)208 3927 y(Both)i(hexadecimal)f(and)h
+(ASCI)r(I)h(v)-5 b(alues)21 b(will)h(b)r(e)g(sho)n(wn.)33
 b(If)22 b(more)f(than)g(one)g(screen)g(full)h(of)f(data)g(will)g(b)r(e)
-h(dump)r(ed,)208 1135 y(the)27 b(test)g(will)h(w)n(ait)f(for)f(a)h
+h(dump)r(ed,)208 4026 y(the)27 b(test)g(will)h(w)n(ait)f(for)f(a)h
 (user)f(k)n(eypress)g(b)r(et)n(w)n(een)h(eac)n(h)f(page)g(full)i(of)f
 (data,)g(and)g(will)g(cancel)g(the)g(displa)n(y)g(of)g(ad-)208
-1235 y(ditional)g(pages)f(if)i(the)g(user)f(en)n(ters)g('q'.)0
-1391 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
-b(test.)0 1546 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
-1646 y(Dump)56 b(mem)28 b(start:)36 b(Selects)27 b(the)h(\034rst)g
-(address)e(to)h(displa)n(y)-7 b(.)208 1746 y(Dump)28
+4126 y(ditional)g(pages)f(if)i(the)g(user)f(en)n(ters)g('q'.)0
+4292 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test.)0 4458 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
+4558 y(Dump)56 b(mem)28 b(start:)36 b(Selects)27 b(the)h(\034rst)g
+(address)e(to)h(displa)n(y)-7 b(.)208 4657 y(Dump)28
 b(mem)g(end:)37 b(Selects)27 b(where)h(to)f(stop)g(dumping)h(memory)-7
-b(.)208 1845 y(Dump)28 b(mem)g(size:)36 b(Selects)28
+b(.)208 4757 y(Dump)28 b(mem)g(size:)36 b(Selects)28
 b(the)g(address)e(size)h(for)g(the)h(displa)n(y)-7 b(.)0
-2001 y Fi(T)f(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-2101 y(None.)0 2371 y Fe(3.6)130 b(FEC)44 b(Ethernet)0
-2569 y Fd(3.6.1)112 b(Submen)m(u)38 b(description)0 2722
-y Fh(The)28 b(tests)f(in)h(this)g(submen)n(u)g(v)n(erify)e(the)i
-(functionalit)n(y)g(of)f(the)h(F)-7 b(ast)28 b(Ethernet)g(p)r(ort.)0
-2950 y Fd(3.6.2)112 b(Submen)m(u)38 b(options)0 3104
-y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29 b(lev)n(el)f(of)i(debugging)e
-(output.)42 b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39
-b(\()p Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)
-r(ose,)f(3)420 3203 y(=)f(massiv)n(e)f(screen)h(scroll\))0
-3359 y(Source)g(Ethernet)h(A:)42 b(The)27 b(top)h(2)f(b)n(ytes)g(of)h
-(the)g(6-b)n(yte)e(ethernet)i(source)e(address)h(placed)g(in)h(the)g
-(pac)n(k)n(et)e(header.)0 3515 y(Souce)h(Ethernet)h(B:)42
-b(The)27 b(b)r(ottom)h(4)f(b)n(ytes)h(of)f(the)h(6-b)n(yte)f(ethernet)g
-(source)g(address)f(placed)h(in)h(the)g(pac)n(k)n(et)e(header.)0
-3670 y(Dest)i(Ethernet)g(A:)42 b(The)28 b(top)f(2)g(b)n(ytes)h(of)f
-(the)h(6-b)n(yte)f(ethernet)g(destination)h(address)e(placed)h(in)h
-(the)g(pac)n(k)n(et)e(header.)0 3826 y(Dest)i(Ethernet)g(B:)42
-b(The)22 b(b)r(ottom)g(4)f(b)n(ytes)h(of)g(the)g(6-b)n(yte)f(ethernet)h
-(destination)f(address)g(placed)h(in)g(the)g(pac)n(k)n(et)f(header.)0
-3982 y(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Selects)30
-b(the)g(start)g(lo)r(cation)f(for)h(the)g(\034rst)g(ethernet)g
-(transmit)g(bu\033er.)45 b(The)30 b(diagnostics)f(actually)420
-4081 y(emplo)n(y)24 b(a)h(pair)f(of)h(transmit)g(bu\033ers,)h(the)f
-(second)g(one)f(1520)g(b)n(ytes)g(b)r(ey)n(ond)h(the)h(\034rst.)35
-b(A)-9 b(v)n(oid)25 b(selecting)f(an)420 4181 y(address)f(b)r(elo)n(w)i
-(the)h(\034rst)f(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)h
-(diagnostics)d(co)r(de)i(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n
-(erwritten.)420 4281 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
-b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
-(ou're)f(doing.)0 4436 y(Rx)i(Base)e(A)n(ddress:)41 b(Selects)34
+4923 y Fi(T)f(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+5023 y(None.)p eop
+%%Page: 25 26
+25 25 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(25)0 333 y Fe(3.7)130
+b(FEC)44 b(Ethernet)0 531 y Fd(3.7.1)112 b(Submen)m(u)38
+b(description)0 684 y Fh(The)28 b(tests)f(in)h(this)g(submen)n(u)g(v)n
+(erify)e(the)i(functionalit)n(y)g(of)f(the)h(F)-7 b(ast)28
+b(Ethernet)g(p)r(ort.)0 913 y Fd(3.7.2)112 b(Submen)m(u)38
+b(options)0 1066 y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29
+b(lev)n(el)f(of)i(debugging)e(output.)42 b(A)-9 b(v)k(ailable)29
+b(lev)n(els)f(are:)39 b(\()p Fi(0)34 b(=)g(none)p Fh(,)29
+b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)r(ose,)f(3)420 1166
+y(=)f(massiv)n(e)f(screen)h(scroll\))0 1324 y(Source)g(Ethernet)h(A:)42
+b(The)27 b(top)h(2)f(b)n(ytes)g(of)h(the)g(6-b)n(yte)e(ethernet)i
+(source)e(address)h(placed)g(in)h(the)g(pac)n(k)n(et)e(header.)0
+1482 y(Souce)h(Ethernet)h(B:)42 b(The)27 b(b)r(ottom)h(4)f(b)n(ytes)h
+(of)f(the)h(6-b)n(yte)f(ethernet)g(source)g(address)f(placed)h(in)h
+(the)g(pac)n(k)n(et)e(header.)0 1640 y(Dest)i(Ethernet)g(A:)42
+b(The)28 b(top)f(2)g(b)n(ytes)h(of)f(the)h(6-b)n(yte)f(ethernet)g
+(destination)h(address)e(placed)h(in)h(the)g(pac)n(k)n(et)e(header.)0
+1798 y(Dest)i(Ethernet)g(B:)42 b(The)22 b(b)r(ottom)g(4)f(b)n(ytes)h
+(of)g(the)g(6-b)n(yte)f(ethernet)h(destination)f(address)g(placed)h(in)
+g(the)g(pac)n(k)n(et)f(header.)0 1955 y(T)-7 b(x)28 b(Base)e(A)n
+(ddress:)41 b(Selects)30 b(the)g(start)g(lo)r(cation)f(for)h(the)g
+(\034rst)g(ethernet)g(transmit)g(bu\033er.)45 b(The)30
+b(diagnostics)f(actually)420 2055 y(emplo)n(y)24 b(a)h(pair)f(of)h
+(transmit)g(bu\033ers,)h(the)f(second)g(one)f(1520)g(b)n(ytes)g(b)r(ey)
+n(ond)h(the)h(\034rst.)35 b(A)-9 b(v)n(oid)25 b(selecting)f(an)420
+2155 y(address)f(b)r(elo)n(w)i(the)h(\034rst)f(megab)n(yte)f(or)g(t)n
+(w)n(o,)h(since)g(the)h(diagnostics)d(co)r(de)i(segmen)n(t)g(ma)n(y)f
+(b)r(e)i(o)n(v)n(erwritten.)420 2254 y(Lea)n(v)n(e)g(the)i(default)g(v)
+-5 b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
+(ou're)f(doing.)0 2412 y(Rx)i(Base)e(A)n(ddress:)41 b(Selects)34
 b(the)g(start)g(lo)r(cation)g(for)f(the)i(\034rst)f(ethernet)g(receiv)n
 (e)f(bu\033er.)57 b(The)34 b(diagnostics)f(actually)420
-4536 y(emplo)n(y)28 b(a)h(pair)f(of)h(receiv)n(e)f(bu\033ers,)h(the)h
+2512 y(emplo)n(y)28 b(a)h(pair)f(of)h(receiv)n(e)f(bu\033ers,)h(the)h
 (second)e(one)h(1520)e(b)n(ytes)i(b)r(ey)n(ond)g(the)g(\034rst.)41
-b(A)-9 b(v)n(oid)29 b(selecting)f(an)420 4636 y(address)23
+b(A)-9 b(v)n(oid)29 b(selecting)f(an)420 2611 y(address)23
 b(b)r(elo)n(w)i(the)h(\034rst)f(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g
 (the)h(diagnostics)d(co)r(de)i(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n
-(erwritten.)420 4735 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
+(erwritten.)420 2711 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
 b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
-(ou're)f(doing.)0 4891 y(P)n(ac)n(k)n(et)h(Length:)41
+(ou're)f(doing.)0 2869 y(P)n(ac)n(k)n(et)h(Length:)41
 b(Selects)25 b(the)g(total)g(n)n(um)n(b)r(er)f(of)h(b)n(ytes)g(in)g
 (the)g(transmit)g(pac)n(k)n(et.)35 b(This)25 b(n)n(um)n(b)r(er)g(is)f
-(sligh)n(tly)h(misleading)420 4991 y(since)30 b(the)h(MA)n(C)f(will)h
+(sligh)n(tly)h(misleading)420 2969 y(since)30 b(the)h(MA)n(C)f(will)h
 (app)r(end)f(a)g(4-b)n(yte)g(c)n(hec)n(ksum)f(during)h(transmission.)44
-b(Otherwise,)30 b(this)h(n)n(um)n(b)r(er)f(of)420 5090
+b(Otherwise,)30 b(this)h(n)n(um)n(b)r(er)f(of)420 3068
 y(b)n(ytes)i(will)h(b)r(e)h(split)f(b)r(et)n(w)n(een)g(the)g(standard)f
 (ethernet)h(header)g(and)f(the)i(pac)n(k)n(et)e(data.)52
-b(The)33 b(maxim)n(um)420 5190 y(n)n(um)n(b)r(er)27 b(of)g(b)n(ytes)h
-(is)f(1500,)f(and)h(the)h(minim)n(um)g(is)g Fi(64)f Fh(\(default\).)p
-eop
-%%Page: 22 23
-22 22 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(22)0 333 y(Lo)r(opbac)n(k:)46
-b(Selects)27 b(the)h(lo)r(opbac)n(k)e(p)r(osition)h(to)g(b)r(e)h(used)f
-(for)g(this)h(test.)37 b(Three)27 b(lo)r(opbac)n(k)f(p)r(oin)n(ts)h
-(are)g(a)n(v)-5 b(ailable:)35 b(\(0)27 b(=)420 432 y(in)n(ternal,)g(1)g
-(=)g(transceiv)n(er,)f Fi(2)31 b(=)h(external)g(\(lo)s(opbac)m(k)g
-(connector)h(required\))p Fh(\).)0 598 y(Sp)r(eed:)183
-b(Selects)34 b(the)h(bit)f(rate)g(for)g(the)g(transceiv)n(er)f(\(only)h
+b(The)33 b(maxim)n(um)420 3168 y(n)n(um)n(b)r(er)27 b(of)g(b)n(ytes)h
+(is)f(1500,)f(and)h(the)h(minim)n(um)g(is)g Fi(64)f Fh(\(default\).)0
+3326 y(Lo)r(opbac)n(k:)46 b(Selects)27 b(the)h(lo)r(opbac)n(k)e(p)r
+(osition)h(to)g(b)r(e)h(used)f(for)g(this)h(test.)37
+b(Three)27 b(lo)r(opbac)n(k)f(p)r(oin)n(ts)h(are)g(a)n(v)-5
+b(ailable:)35 b(\(0)27 b(=)420 3425 y(in)n(ternal,)g(1)g(=)g(transceiv)
+n(er,)f Fi(2)31 b(=)h(external)g(\(lo)s(opbac)m(k)g(connector)h
+(required\))p Fh(\).)0 3583 y(Sp)r(eed:)183 b(Selects)34
+b(the)h(bit)f(rate)g(for)g(the)g(transceiv)n(er)f(\(only)h
 (signi\034can)n(t)f(if)i(lo)r(opbac)n(k)e(is)h(not)g(in)n(ternal\).)57
-b(The)34 b(F)-7 b(ast)420 698 y(Ethernet)28 b(transceiv)n(er)d(supp)r
+b(The)34 b(F)-7 b(ast)420 3683 y(Ethernet)28 b(transceiv)n(er)d(supp)r
 (orts)i(the)h(follo)n(wing)f(transfer)f(rates:)36 b(\(0)28
-b(=)f(10)g(Mb,)h Fi(1)j(=)h(100Mb)p Fh(\).)0 864 y(T)-7
+b(=)f(10)g(Mb,)h Fi(1)j(=)h(100Mb)p Fh(\).)0 3841 y(T)-7
 b(est)28 b(Time:)41 b(Sp)r(eci\034es)20 b(the)g(n)n(um)n(b)r(er)f(of)h
 (seconds)f(to)g(transmit)h(pac)n(k)n(ets)e(in)i(the)g(exerciser)e
 (test.)34 b(The)20 b(default)g(is)g Fi(5)f Fh(seconds.)0
-1030 y(2nd)27 b(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Not)28
-b(used)f(in)h(this)g(men)n(u)0 1196 y(2nd_Rx_Base_A)n(ddress:)38
-b(Not)28 b(used)f(in)h(this)g(men)n(u)0 1428 y Fd(3.6.3)112
-b(T)-9 b(est)37 b(descriptions)0 1582 y Fi(T)-8 b(est:)42
-b(Op)s(eration)31 b(T)-8 b(est)0 1735 y(T)g(est)32 b(Description:)40
+3999 y(2nd)27 b(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Not)28
+b(used)f(in)h(this)g(men)n(u)0 4157 y(2nd_Rx_Base_A)n(ddress:)38
+b(Not)28 b(used)f(in)h(this)g(men)n(u)0 4385 y Fd(3.7.3)112
+b(T)-9 b(est)37 b(descriptions)0 4539 y Fi(T)-8 b(est:)42
+b(Op)s(eration)31 b(T)-8 b(est)0 4692 y(T)g(est)32 b(Description:)40
 b Fh(This)20 b(test)h(transmits)e(a)h(single)g(pac)n(k)n(et)f(using)h
 (the)g(options)g(sp)r(eci\034ed,)i(then)e(queries)g(the)g(hardw)n(are)
-208 1835 y(to)27 b(determine)h(whether)f(the)h(pac)n(k)n(et)e(w)n(as)h
-(receiv)n(ed.)208 1934 y(Note:)35 b(Remem)n(b)r(er)25
+208 4791 y(to)27 b(determine)h(whether)f(the)h(pac)n(k)n(et)e(w)n(as)h
+(receiv)n(ed.)208 4891 y(Note:)35 b(Remem)n(b)r(er)25
 b(to)h(attac)n(h)e(a)h(lo)r(opbac)n(k)f(connector)g(unless)i(sp)r
 (ecifying)f(in)n(ternal)f(or)h(transceiv)n(er)e(lo)r(opbac)n(k.)35
-b(In)208 2034 y(p)r(o)n(w)n(er-up)26 b(mo)r(de,)j(the)f(lo)r(opbac)n(k)
+b(In)208 4991 y(p)r(o)n(w)n(er-up)26 b(mo)r(de,)j(the)f(lo)r(opbac)n(k)
 f(p)r(osition)h(will)g(b)r(e)h(set)f(to)g(transceiv)n(er,)e(to)i(a)n(v)
-n(oid)f(requiring)g(the)h(user)g(to)g(attac)n(h)208 2133
+n(oid)f(requiring)g(the)h(user)g(to)g(attac)n(h)208 5090
 y(the)c(connector)e(ev)n(ery)g(time)i(the)g(b)r(oard)f(b)r(o)r(ots)g
 (up.)36 b(A)n(dditionally)-7 b(,)24 b(this)g(prev)n(en)n(ts)f(the)h
-(test)f(from)h(sending)f(the)h(test)208 2233 y(pac)n(k)n(et)i(on)n(to)h
-(a)g(liv)n(e)g(net)n(w)n(ork.)0 2399 y Fi(T)-8 b(est)32
-b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0 2565
-y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 2665 y(Source/Dest)28
+(test)f(from)h(sending)f(the)h(test)208 5190 y(pac)n(k)n(et)i(on)n(to)h
+(a)g(liv)n(e)g(net)n(w)n(ork.)p eop
+%%Page: 26 27
+26 26 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(26)0 333 y Fi(T)-8 b(est)32
+b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0 497 y
+Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 596 y(Source/Dest)28
 b(Ethernet)h(A/B:)g(Only)g(useful)g(if)h(the)g(FEC)f(ethernet)h(p)r
 (ort)f(is)g(connected)f(to)h(a)g(h)n(ub)g(or)g(switc)n(h,)g(or)208
-2764 y(an)d(ethernet)h(pac)n(k)n(et)e(capture)h(device.)37
+696 y(an)d(ethernet)h(pac)n(k)n(et)e(capture)h(device.)37
 b(This)26 b(allo)n(ws)g(the)h(op)r(erator)e(to)h(uniquely)h(set)g(the)g
-(ethernet)g(addresses)e(for)208 2864 y(the)j(test)f(equipmen)n(t.)208
-2964 y(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)27
+(ethernet)g(addresses)e(for)208 795 y(the)j(test)f(equipmen)n(t.)208
+895 y(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)27
 b(where)g(in)h(memory)f(the)h(transmit)f(bu\033ers)h(will)f(b)r(e)h
-(placed.)208 3063 y(Rx)f(Base)g(A)n(ddress:)36 b(Determines)27
+(placed.)208 995 y(Rx)f(Base)g(A)n(ddress:)36 b(Determines)27
 b(where)g(in)h(memory)f(the)h(receiv)n(e)e(bu\033ers)i(will)f(b)r(e)h
-(placed.)208 3163 y(P)n(ac)n(k)n(et)e(length:)37 b(Determines)28
+(placed.)208 1094 y(P)n(ac)n(k)n(et)e(length:)37 b(Determines)28
 b(the)g(size)f(of)g(eac)n(h)g(transmitted)h(ethernet)f(pac)n(k)n(et)g
-(\(except)h(for)f(the)h(c)n(hec)n(ksum\).)208 3263 y(Lo)r(opbac)n(k:)35
+(\(except)h(for)f(the)h(c)n(hec)n(ksum\).)208 1194 y(Lo)r(opbac)n(k:)35
 b(Determines)27 b(the)h(lo)r(opbac)n(k)e(p)r(osition.)36
 b('0')27 b(sets)g(the)h(lo)r(opbac)n(k)e(within)i(the)g(FEC)g(\(FEC)g
-(full)g(duplex,)208 3362 y(FEC)e(in)n(ternal)f(lo)r(opbac)n(k\),)g(and)
+(full)g(duplex,)208 1294 y(FEC)e(in)n(ternal)f(lo)r(opbac)n(k\),)g(and)
 g(turns)g(on)h(promiscuous)e(mo)r(de)h(\(destination)h(ethernet)g
-(address)e(w)n(on't)h(matter\).)208 3462 y('1')i(sets)h(lo)r(opbac)n(k)
+(address)e(w)n(on't)h(matter\).)208 1393 y('1')i(sets)h(lo)r(opbac)n(k)
 e(within)j(the)f(PHY)h(\(FEC)g(full)g(duplex,)f(PHY)h(in)n(ternal)e(lo)
 r(opbac)n(k\).)37 b('2')27 b(sets)h(full)h(duplex)f(with)208
-3561 y(all)f(lo)r(opbac)n(k)f(options)h(turned)h(o\033.)208
-3661 y(Sp)r(eed:)37 b(Determines)28 b(the)f(transfer)g(rate)g(\(10)g
-(Mb)h(or)e(100Mb\).)0 3827 y Fi(T)-8 b(est)32 b(F)-8
-b(ailures:)40 b Fh(-)208 3927 y Fi(Link)d(not)h(detected:)46
+1493 y(all)f(lo)r(opbac)n(k)f(options)h(turned)h(o\033.)208
+1592 y(Sp)r(eed:)37 b(Determines)28 b(the)f(transfer)g(rate)g(\(10)g
+(Mb)h(or)e(100Mb\).)0 1756 y Fi(T)-8 b(est)32 b(F)-8
+b(ailures:)40 b Fh(-)208 1856 y Fi(Link)d(not)h(detected:)46
 b Fh(The)33 b(FEC)g(transceiv)n(er)e(has)h(not)g(ac)n(hiev)n(ed)g(a)g
 (link)g(state)h(and)f(the)h(lo)r(opbac)n(k)e(is)i(set)f(to)208
-4026 y(external.)j(Usually)27 b(this)h(indicates)f(that)g(the)h(lo)r
+1956 y(external.)j(Usually)27 b(this)h(indicates)f(that)g(the)h(lo)r
 (opbac)n(k)e(connector)g(is)h(not)g(connected,)g(or)g(isn't)g(making)g
-(con)n(tact)208 4126 y(prop)r(erly)-7 b(.)208 4226 y
+(con)n(tact)208 2055 y(prop)r(erly)-7 b(.)208 2155 y
 Fi(Ethernet)24 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h(T)-8
 b(ransmit)24 b(ev)m(en)m(t)h(not)f(detected:)33 b Fh(The)21
-b(F)-7 b(ast)21 b(Ethernet)h(Con)n(troller)208 4325 y(nev)n(er)k(set)i
+b(F)-7 b(ast)21 b(Ethernet)h(Con)n(troller)208 2255 y(nev)n(er)k(set)i
 (the)g(TXF)g(bit)g(in)g(the)g(ev)n(en)n(t)f(register,)f(i.e.)37
 b(the)28 b(pac)n(k)n(et)e(w)n(as)h(nev)n(er)f(transmitted.)208
-4425 y Fi(Ethernet)41 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h
+2354 y Fi(Ethernet)41 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h
 (Bu\033er)g(not)g(released:)52 b Fh(The)35 b(ev)n(en)n(t)h(register)e
-(indicates)h(that)h(a)208 4524 y(pac)n(k)n(et)i(w)n(as)h(transmitted,)k
+(indicates)h(that)h(a)208 2454 y(pac)n(k)n(et)i(w)n(as)h(transmitted,)k
 (but)d(the)g(F)-7 b(ast)40 b(Ethernet)g(Con)n(troller)e(didn't)i(clear)
-f(the)h(ready)f(bit)h(in)g(the)g(bu\033er)208 4624 y(descriptor.)58
+f(the)h(ready)f(bit)h(in)g(the)g(bu\033er)208 2553 y(descriptor.)58
 b(It's)36 b(p)r(ossible)f(the)h(ev)n(en)n(t)f(bit)g(is)h(stuc)n(k)f
 (on,)i(or)d(the)i(bu\033er)g(descriptor)e(memory)g(is)h(fault)n(y)h(or)
-e(not)208 4724 y(accessible)26 b(to)h(the)h(con)n(troller)e(\(the)i
+e(not)208 2653 y(accessible)26 b(to)h(the)h(con)n(troller)e(\(the)i
 (descriptors)e(liv)n(e)h(in)h(the)g(MPC)g(860)f(dual)g(p)r(ort)g
-(RAM\).)208 4823 y Fi(Ethernet)36 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)
+(RAM\).)208 2753 y Fi(Ethernet)36 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)
 46 b Fh(The)32 b(F)-7 b(ast)32 b(Ethernet)h(Con)n(troller)d
 (transmitted)i(a)g(pac)n(k)n(et,)g(but)h(it)f(didn't)208
-4923 y(receiv)n(e)21 b(an)n(ything.)35 b(If)23 b(external)g(lo)r(opbac)
+2852 y(receiv)n(e)21 b(an)n(ything.)35 b(If)23 b(external)g(lo)r(opbac)
 n(k)e(is)i(selected)g(and)g(link)g(is)g(detected,)h(it's)g(lik)n(ely)e
-(the)h(p)r(ort)g(w)n(as)f(connected)208 5023 y(to)27
+(the)h(p)r(ort)g(w)n(as)f(connected)208 2952 y(to)27
 b(another)g(p)r(ort)g(or)g(switc)n(h)g(instead)g(of)h(a)f(lo)r(opbac)n
-(k)f(cable.)p eop
-%%Page: 23 24
-23 23 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(23)0 333 y Fi(T)-8 b(est:)42
-b(Exerciser)32 b(T)-8 b(est)0 486 y(T)g(est)32 b(Description:)40
-b Fh(This)e(test)h(transmits)e(and)h(receiv)n(es)f(pac)n(k)n(ets)g(un)n
+(k)f(cable.)0 3214 y Fi(T)-8 b(est:)42 b(Exerciser)32
+b(T)-8 b(est)0 3368 y(T)g(est)32 b(Description:)40 b
+Fh(This)e(test)h(transmits)e(and)h(receiv)n(es)f(pac)n(k)n(ets)g(un)n
 (til)h(the)h(n)n(um)n(b)r(er)f(of)g(seconds)f(sp)r(eci\034ed)h(ha)n(v)n
-(e)208 586 y(elapsed.)k(Eac)n(h)29 b(time)h(the)g(hardw)n(are)d(receiv)
-n(es)h(a)h(pac)n(k)n(et,)g(it)h(compares)e(it)i(to)g(the)g(transmitted)
-f(pac)n(k)n(et)g(in)g(order)208 685 y(to)e(detect)h(data)f(corruption,)
-f(then)i(sends)g(the)g(next)f(pac)n(k)n(et.)208 785 y(Note:)35
-b(Remem)n(b)r(er)25 b(to)h(attac)n(h)e(a)h(lo)r(opbac)n(k)f(connector)g
-(unless)i(sp)r(ecifying)f(in)n(ternal)f(or)h(transceiv)n(er)e(lo)r
-(opbac)n(k.)35 b(In)208 884 y(p)r(o)n(w)n(er-up)26 b(mo)r(de,)j(the)f
-(lo)r(opbac)n(k)f(p)r(osition)h(will)g(b)r(e)h(set)f(to)g(transceiv)n
-(er,)e(to)i(a)n(v)n(oid)f(requiring)g(the)h(user)g(to)g(attac)n(h)208
-984 y(the)g(connector)e(ev)n(ery)h(time)h(the)h(b)r(oard)e(b)r(o)r(ots)
-g(up.)38 b(A)n(dditionally)-7 b(,)28 b(this)g(prev)n(en)n(ts)f(the)h
-(test)g(from)g(\035o)r(o)r(ding)f(a)g(liv)n(e)208 1084
-y(net)n(w)n(ork)f(with)i(test)g(pac)n(k)n(ets.)0 1250
-y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0
-1416 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 1515
+(e)208 3467 y(elapsed.)k(Eac)n(h)29 b(time)h(the)g(hardw)n(are)d
+(receiv)n(es)h(a)h(pac)n(k)n(et,)g(it)h(compares)e(it)i(to)g(the)g
+(transmitted)f(pac)n(k)n(et)g(in)g(order)208 3567 y(to)e(detect)h(data)
+f(corruption,)f(then)i(sends)g(the)g(next)f(pac)n(k)n(et.)208
+3667 y(Note:)35 b(Remem)n(b)r(er)25 b(to)h(attac)n(h)e(a)h(lo)r(opbac)n
+(k)f(connector)g(unless)i(sp)r(ecifying)f(in)n(ternal)f(or)h(transceiv)
+n(er)e(lo)r(opbac)n(k.)35 b(In)208 3766 y(p)r(o)n(w)n(er-up)26
+b(mo)r(de,)j(the)f(lo)r(opbac)n(k)f(p)r(osition)h(will)g(b)r(e)h(set)f
+(to)g(transceiv)n(er,)e(to)i(a)n(v)n(oid)f(requiring)g(the)h(user)g(to)
+g(attac)n(h)208 3866 y(the)g(connector)e(ev)n(ery)h(time)h(the)h(b)r
+(oard)e(b)r(o)r(ots)g(up.)38 b(A)n(dditionally)-7 b(,)28
+b(this)g(prev)n(en)n(ts)f(the)h(test)g(from)g(\035o)r(o)r(ding)f(a)g
+(liv)n(e)208 3965 y(net)n(w)n(ork)f(with)i(test)g(pac)n(k)n(ets.)0
+4129 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0
+4293 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 4393
 y(Debug)23 b(lev)n(el:)34 b(Setting)24 b(this)g(to)f(1)g(or)f(higher)h
 (will)g(displa)n(y)g(the)g(pac)n(k)n(et)g(rate)f(\(this)i(will)g(ha)n
-(v)n(e)e(little)i(corresp)r(ondence)208 1615 y(with)f(the)g(Sp)r(eed)h
+(v)n(e)e(little)i(corresp)r(ondence)208 4493 y(with)f(the)g(Sp)r(eed)h
 (option,)g(since)e(the)i(pro)r(cessor)d(tak)n(es)h(time)h(to)g(set)g
 (up)g(the)h(transmit)e(pac)n(k)n(ets)g(and)h(compare)f(them)208
-1715 y(to)27 b(the)h(receiv)n(ed)e(pac)n(k)n(ets\).)36
+4592 y(to)27 b(the)h(receiv)n(ed)e(pac)n(k)n(ets\).)36
 b(V)-7 b(alues)27 b(higher)g(than)h(1)f(will)h(displa)n(y)f(additional)
-g(debugging)f(information.)208 1814 y(Source/Dest)i(Ethernet)h(A/B:)g
+g(debugging)f(information.)208 4692 y(Source/Dest)i(Ethernet)h(A/B:)g
 (Only)g(useful)g(if)h(the)g(FEC)f(ethernet)h(p)r(ort)f(is)g(connected)f
-(to)h(a)g(h)n(ub)g(or)g(switc)n(h,)g(or)208 1914 y(an)d(ethernet)h(pac)
+(to)h(a)g(h)n(ub)g(or)g(switc)n(h,)g(or)208 4791 y(an)d(ethernet)h(pac)
 n(k)n(et)e(capture)h(device.)37 b(This)26 b(allo)n(ws)g(the)h(op)r
 (erator)e(to)h(uniquely)h(set)g(the)g(ethernet)g(addresses)e(for)208
-2013 y(the)j(test)f(equipmen)n(t.)208 2113 y(T)-7 b(x)27
+4891 y(the)j(test)f(equipmen)n(t.)208 4991 y(T)-7 b(x)27
 b(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(the)h(transmit)g
-(bu\033ers)f(will)h(b)r(e)g(placed.)208 2213 y(Rx)f(Base)g(A)n(ddress:)
+(bu\033ers)f(will)h(b)r(e)g(placed.)208 5090 y(Rx)f(Base)g(A)n(ddress:)
 36 b(Determines)27 b(where)g(the)h(receiv)n(e)f(bu\033ers)g(will)h(b)r
-(e)g(placed.)208 2312 y(P)n(ac)n(k)n(et)e(Length:)37
+(e)g(placed.)208 5190 y(P)n(ac)n(k)n(et)e(Length:)37
 b(Determines)27 b(the)h(size)g(of)f(eac)n(h)g(transmitted)h(pac)n(k)n
-(et)e(\(except)i(for)f(the)h(c)n(hec)n(ksum\).)208 2412
-y(Lo)r(opbac)n(k:)35 b(Determines)27 b(the)h(lo)r(opbac)n(k)e(p)r
-(osition.)36 b('0')27 b(sets)g(the)h(lo)r(opbac)n(k)e(within)i(the)g
-(FEC)g(\(FEC)g(full)g(duplex,)208 2512 y(FEC)e(in)n(ternal)f(lo)r
-(opbac)n(k\),)g(and)g(turns)g(on)h(promiscuous)e(mo)r(de)h
-(\(destination)h(ethernet)g(address)e(w)n(on't)h(matter\).)208
-2611 y('1')i(sets)h(lo)r(opbac)n(k)e(within)j(the)f(PHY)h(\(FEC)g(full)
-g(duplex,)f(PHY)h(in)n(ternal)e(lo)r(opbac)n(k\).)37
-b('2')27 b(sets)h(full)h(duplex)f(with)208 2711 y(all)f(lo)r(opbac)n(k)
-f(options)h(turned)h(o\033.)208 2810 y(Sp)r(eed:)37 b(Determines)28
-b(whether)f(to)g(use)h(10)e(Mb)i(or)f(100)f(Mb)i(transfer)f(rates.)208
-2910 y(T)-7 b(est)27 b(Time:)37 b(Determines)28 b(ho)n(w)f(man)n(y)g
-(seconds)f(the)i(test)g(will)g(run.)0 3076 y Fi(T)-8
-b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 3176 y Fi(Link)d(not)h
-(detected:)46 b Fh(The)33 b(FEC)g(transceiv)n(er)e(has)h(not)g(ac)n
-(hiev)n(ed)g(a)g(link)g(state)h(and)f(the)h(lo)r(opbac)n(k)e(is)i(set)f
-(to)208 3275 y(external.)j(Usually)27 b(this)h(indicates)f(that)g(the)h
-(lo)r(opbac)n(k)e(connector)g(is)h(not)g(connected,)g(or)g(isn't)g
-(making)g(con)n(tact)208 3375 y(prop)r(erly)-7 b(.)208
-3475 y Fi(Ethernet)24 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h(T)-8
-b(ransmit)24 b(ev)m(en)m(t)h(not)f(detected:)33 b Fh(The)21
-b(F)-7 b(ast)21 b(Ethernet)h(Con)n(troller)208 3574 y(nev)n(er)k(set)i
-(the)g(TXF)g(bit)g(in)g(the)g(ev)n(en)n(t)f(register,)f(i.e.)37
+(et)e(\(except)i(for)f(the)h(c)n(hec)n(ksum\).)p eop
+%%Page: 27 28
+27 27 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(27)208 333 y(Lo)r(opbac)n(k:)35
+b(Determines)27 b(the)h(lo)r(opbac)n(k)e(p)r(osition.)36
+b('0')27 b(sets)g(the)h(lo)r(opbac)n(k)e(within)i(the)g(FEC)g(\(FEC)g
+(full)g(duplex,)208 432 y(FEC)e(in)n(ternal)f(lo)r(opbac)n(k\),)g(and)g
+(turns)g(on)h(promiscuous)e(mo)r(de)h(\(destination)h(ethernet)g
+(address)e(w)n(on't)h(matter\).)208 532 y('1')i(sets)h(lo)r(opbac)n(k)e
+(within)j(the)f(PHY)h(\(FEC)g(full)g(duplex,)f(PHY)h(in)n(ternal)e(lo)r
+(opbac)n(k\).)37 b('2')27 b(sets)h(full)h(duplex)f(with)208
+632 y(all)f(lo)r(opbac)n(k)f(options)h(turned)h(o\033.)208
+731 y(Sp)r(eed:)37 b(Determines)28 b(whether)f(to)g(use)h(10)e(Mb)i(or)
+f(100)f(Mb)i(transfer)f(rates.)208 831 y(T)-7 b(est)27
+b(Time:)37 b(Determines)28 b(ho)n(w)f(man)n(y)g(seconds)f(the)i(test)g
+(will)g(run.)0 997 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
+b Fh(-)208 1096 y Fi(Link)d(not)h(detected:)46 b Fh(The)33
+b(FEC)g(transceiv)n(er)e(has)h(not)g(ac)n(hiev)n(ed)g(a)g(link)g(state)
+h(and)f(the)h(lo)r(opbac)n(k)e(is)i(set)f(to)208 1196
+y(external.)j(Usually)27 b(this)h(indicates)f(that)g(the)h(lo)r(opbac)n
+(k)e(connector)g(is)h(not)g(connected,)g(or)g(isn't)g(making)g(con)n
+(tact)208 1296 y(prop)r(erly)-7 b(.)208 1395 y Fi(Ethernet)24
+b(pac)m(k)m(et)i(not)e(transmitted)f(-)h(T)-8 b(ransmit)24
+b(ev)m(en)m(t)h(not)f(detected:)33 b Fh(The)21 b(F)-7
+b(ast)21 b(Ethernet)h(Con)n(troller)208 1495 y(nev)n(er)k(set)i(the)g
+(TXF)g(bit)g(in)g(the)g(ev)n(en)n(t)f(register,)f(i.e.)37
 b(the)28 b(pac)n(k)n(et)e(w)n(as)h(nev)n(er)f(transmitted.)208
-3674 y Fi(Ethernet)41 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h
+1595 y Fi(Ethernet)41 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h
 (Bu\033er)g(not)g(released:)52 b Fh(The)35 b(ev)n(en)n(t)h(register)e
-(indicates)h(that)h(a)208 3774 y(pac)n(k)n(et)i(w)n(as)h(transmitted,)k
+(indicates)h(that)h(a)208 1694 y(pac)n(k)n(et)i(w)n(as)h(transmitted,)k
 (but)d(the)g(F)-7 b(ast)40 b(Ethernet)g(Con)n(troller)e(didn't)i(clear)
-f(the)h(ready)f(bit)h(in)g(the)g(bu\033er)208 3873 y(descriptor.)58
+f(the)h(ready)f(bit)h(in)g(the)g(bu\033er)208 1794 y(descriptor.)58
 b(It's)36 b(p)r(ossible)f(the)h(ev)n(en)n(t)f(bit)g(is)h(stuc)n(k)f
 (on,)i(or)d(the)i(bu\033er)g(descriptor)e(memory)g(is)h(fault)n(y)h(or)
-e(not)208 3973 y(accessible)26 b(to)h(the)h(con)n(troller)e(\(the)i
+e(not)208 1893 y(accessible)26 b(to)h(the)h(con)n(troller)e(\(the)i
 (descriptors)e(liv)n(e)h(in)h(the)g(MPC)g(860)f(dual)g(p)r(ort)g
-(RAM\).)208 4072 y Fi(Ethernet)36 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)
+(RAM\).)208 1993 y Fi(Ethernet)36 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)
 46 b Fh(The)32 b(F)-7 b(ast)32 b(Ethernet)h(Con)n(troller)d
 (transmitted)i(a)g(pac)n(k)n(et,)g(but)h(it)f(didn't)208
-4172 y(receiv)n(e)21 b(an)n(ything.)35 b(If)23 b(external)g(lo)r(opbac)
+2093 y(receiv)n(e)21 b(an)n(ything.)35 b(If)23 b(external)g(lo)r(opbac)
 n(k)e(is)i(selected)g(and)g(link)g(is)g(detected,)h(it's)g(lik)n(ely)e
-(the)h(p)r(ort)g(w)n(as)f(connected)208 4272 y(to)27
+(the)h(p)r(ort)g(w)n(as)f(connected)208 2192 y(to)27
 b(another)g(p)r(ort)g(or)g(ethernet)g(switc)n(h)h(instead)f(of)h(a)f
-(lo)r(opbac)n(k)f(cable.)208 4371 y Fi(P)m(ac)m(k)m(et)37
+(lo)r(opbac)n(k)f(cable.)208 2292 y Fi(P)m(ac)m(k)m(et)37
 b(data)f(error:)42 b Fh(The)30 b(ethernet)g(p)r(ort)g(receiv)n(ed)f(a)h
 (pac)n(k)n(et)f(that)h(didn't)h(matc)n(h)f(the)h(transmitted)f(pac)n(k)
-n(et.)208 4471 y(This)d(can)g(happ)r(en)h(if)g(the)g(transmit)f(and)h
-(receiv)n(e)e(bu\033ers)i(o)n(v)n(erlap.)0 4737 y Fi(T)-8
-b(est:)42 b(Bandwidth)32 b(T)-8 b(est)0 4890 y(T)g(est)32
+n(et.)208 2392 y(This)d(can)g(happ)r(en)h(if)g(the)g(transmit)f(and)h
+(receiv)n(e)e(bu\033ers)i(o)n(v)n(erlap.)0 2657 y Fi(T)-8
+b(est:)42 b(Bandwidth)32 b(T)-8 b(est)0 2810 y(T)g(est)32
 b(Description:)40 b Fh(This)32 b(test)h(transmits)e(ethernet)h(pac)n(k)
 n(ets)f(as)h(quic)n(kly)f(as)g(p)r(ossible,)i(to)f(gauge)f(whether)h
-(the)g(full)208 4989 y(100)22 b(Mb)j(transmit)f(capabilit)n(y)g(of)g
+(the)g(full)208 2910 y(100)22 b(Mb)j(transmit)f(capabilit)n(y)g(of)g
 (the)g(FEC)h(is)g(a)n(v)-5 b(ailable.)34 b(A)25 b(few)f(of)h(the)f
 (options)g(c)n(hange)f(their)h(meaning)g(for)g(this)208
-5089 y(test.)37 b(Also,)26 b(it)i(is)f(recommended)g(that)g(a)g(lo)r
+3010 y(test.)37 b(Also,)26 b(it)i(is)f(recommended)g(that)g(a)g(lo)r
 (opbac)n(k)e(connector)h(b)r(e)i(attac)n(hed)e(instead)h(of)g
-(connecting)g(to)g(another)208 5189 y(device,)g(esp)r(ecially)g(if)h
+(connecting)g(to)g(another)208 3109 y(device,)g(esp)r(ecially)g(if)h
 (it)g(isn't)g(a)f(100Mb)f(ethernet)i(p)r(ort)f(and/or)f(on)i(a)f(liv)n
-(e)g(net)n(w)n(ork!)p eop
-%%Page: 24 25
-24 24 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(24)0 333 y Fi(T)-8 b(est)32
-b(Mo)s(des:)39 b Fh(Custom)28 b(test.)0 494 y Fi(T)-8
-b(est)32 b(Options:)40 b Fh(-)208 594 y(Source/Dest)28
-b(Ethernet)h(A/B:)g(Only)g(useful)g(if)h(the)g(FEC)f(ethernet)h(p)r
-(ort)f(is)g(connected)f(to)h(a)g(h)n(ub)g(or)g(switc)n(h,)g(or)208
-693 y(an)d(ethernet)h(pac)n(k)n(et)e(capture)h(device.)37
-b(This)26 b(allo)n(ws)g(the)h(op)r(erator)e(to)h(uniquely)h(set)g(the)g
-(ethernet)g(addresses)e(for)208 793 y(the)j(test)f(equipmen)n(t.)208
-893 y(P)n(ac)n(k)n(et)d(length:)36 b(Set)26 b(this)g(to)f(1500)f(for)h
-(b)r(est)h(e\036ciency;)g(the)g(pac)n(k)n(et)f(o)n(v)n(erhead)e(is)i
-(more)g(noticeable)g(with)h(smaller)208 992 y(pac)n(k)n(ets)f(\(Note)i
-(that)g(the)g(default)h(64-b)n(yte)d(pac)n(k)n(et)h(size)g(do)r(esn't)h
-(seem)g(to)f(w)n(ork)g(at)g(all,)h(curren)n(tly)-7 b(.)36
-b(Set)27 b(this)g(to)f(a)208 1092 y(larger)f(v)-5 b(alue\).)208
-1191 y(Lo)r(opbac)n(k:)45 b(Set)33 b(this)g(to)g(4)f(for)h(this)g(test)
-g(only)-7 b(.)52 b(In)33 b(this)g(mo)r(de,)h(the)f(lo)r(opbac)n(k)f(is)
-g(disabled,)i(and)f(promiscuous)208 1291 y(mo)r(de)27
+(e)g(net)n(w)n(ork!)0 3275 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
+b Fh(Custom)28 b(test.)0 3441 y Fi(T)-8 b(est)32 b(Options:)40
+b Fh(-)208 3541 y(Source/Dest)28 b(Ethernet)h(A/B:)g(Only)g(useful)g
+(if)h(the)g(FEC)f(ethernet)h(p)r(ort)f(is)g(connected)f(to)h(a)g(h)n
+(ub)g(or)g(switc)n(h,)g(or)208 3641 y(an)d(ethernet)h(pac)n(k)n(et)e
+(capture)h(device.)37 b(This)26 b(allo)n(ws)g(the)h(op)r(erator)e(to)h
+(uniquely)h(set)g(the)g(ethernet)g(addresses)e(for)208
+3740 y(the)j(test)f(equipmen)n(t.)208 3840 y(P)n(ac)n(k)n(et)d(length:)
+36 b(Set)26 b(this)g(to)f(1500)f(for)h(b)r(est)h(e\036ciency;)g(the)g
+(pac)n(k)n(et)f(o)n(v)n(erhead)e(is)i(more)g(noticeable)g(with)h
+(smaller)208 3940 y(pac)n(k)n(ets)f(\(Note)i(that)g(the)g(default)h
+(64-b)n(yte)d(pac)n(k)n(et)h(size)g(do)r(esn't)h(seem)g(to)f(w)n(ork)g
+(at)g(all,)h(curren)n(tly)-7 b(.)36 b(Set)27 b(this)g(to)f(a)208
+4039 y(larger)f(v)-5 b(alue\).)208 4139 y(Lo)r(opbac)n(k:)45
+b(Set)33 b(this)g(to)g(4)f(for)h(this)g(test)g(only)-7
+b(.)52 b(In)33 b(this)g(mo)r(de,)h(the)f(lo)r(opbac)n(k)f(is)g
+(disabled,)i(and)f(promiscuous)208 4238 y(mo)r(de)27
 b(is)h(o\033)f(so)g(the)h(FEC)g(do)r(esn't)g(ha)n(v)n(e)e(to)i(receiv)n
-(e)e(pac)n(k)n(ets)g(while)i(it)g(transmits.)208 1391
+(e)e(pac)n(k)n(ets)g(while)i(it)g(transmits.)208 4338
 y(T)-7 b(est)30 b(time:)44 b(Select)31 b(ho)n(w)f(man)n(y)g(seconds)g
 (to)g(run)h(the)g(test.)47 b(The)30 b(longer)g(the)h(test,)h(the)f
-(closer)e(the)i(a)n(v)n(erage)d(will)208 1490 y(b)r(e)g(to)f(the)h
-(real)f(v)-5 b(alue.)208 1590 y(2nd)25 b(T)-7 b(x)25
+(closer)e(the)i(a)n(v)n(erage)d(will)208 4438 y(b)r(e)g(to)f(the)h
+(real)f(v)-5 b(alue.)208 4537 y(2nd)25 b(T)-7 b(x)25
 b(Base)f(A)n(ddress:)35 b(F)-7 b(or)25 b(this)h(test)f(only)-7
 b(,)26 b(this)f(v)-5 b(alue)25 b(selects)g(the)h(base)f(address)f(for)h
-(the)g(transmit)g(descriptor)208 1690 y(c)n(hain.)48
+(the)g(transmit)g(descriptor)208 4637 y(c)n(hain.)48
 b(If)32 b(set)g(to)g(an)f(SDRAM)i(address,)e(this)h(will)g(allo)n(w)f
 (for)g(man)n(y)g(more)g(descriptors)f(than)i(a)n(v)-5
-b(ailable)30 b(within)208 1789 y(the)d(MPC)h(860T's)d(dual)i(p)r(ort)g
+b(ailable)30 b(within)208 4737 y(the)d(MPC)h(860T's)d(dual)i(p)r(ort)g
 (memory)-7 b(.)36 b(If)27 b(set)g(to)g(0,)g(the)g(default)g(dual)g(p)r
-(ort)g(memory)f(descriptor)g(base)g(address)208 1889
+(ort)g(memory)f(descriptor)g(base)g(address)208 4836
 y(will)h(b)r(e)g(selected,)g(and)f(only)h(one)f(descriptor)f(made)i(a)n
 (v)-5 b(ailable)25 b(\(no)i(c)n(haining\).)36 b(If)27
 b(set)g(to)g(an)n(y)f(other)g(v)-5 b(alue,)27 b(mak)n(e)208
-1988 y(sure)f(that)i(there)g(is)f(enough)g(free)g(memory)g(to)g(con)n
+4936 y(sure)f(that)i(there)g(is)f(enough)g(free)g(memory)g(to)g(con)n
 (tain)g(\(v)-5 b(alue)28 b(in)g(2nd)f(Rx)h(Base)e(A)n(ddress)h(*)g(8\))
-h(b)n(ytes.)208 2088 y(2nd)h(Rx)g(Base)g(A)n(ddress:)39
+h(b)n(ytes.)208 5035 y(2nd)h(Rx)g(Base)g(A)n(ddress:)39
 b(F)-7 b(or)29 b(this)h(test)f(only)-7 b(,)30 b(this)g(v)-5
 b(alue)29 b(selects)g(the)h(n)n(um)n(b)r(er)f(of)g(pac)n(k)n(et)g
-(descriptors)e(to)j(c)n(hain)208 2188 y(together,)21
+(descriptors)e(to)j(c)n(hain)208 5135 y(together,)21
 b(starting)e(at)i(the)g(v)-5 b(alue)21 b(selected)f(for)g(the)h(2nd)g
 (T)-7 b(x)20 b(Base)g(A)n(ddress)g(option.)34 b(If)21
-b(this)g(v)-5 b(alue)20 b(is)h(0,)h(the)f(default)208
-2287 y(dual)f(p)r(ort)h(descriptor)f(base)g(address)g(will)h(b)r(e)g
-(selected,)i(and)d(only)h(one)g(descriptor)e(made)i(a)n(v)-5
-b(ailable)20 b(\(no)h(c)n(haining\).)0 2601 y Fi(T)-8
-b(est:)42 b(Dump)31 b(Ph)m(y)h(Registers)0 2754 y(T)-8
-b(est)32 b(Description:)40 b Fh(This)28 b(test)f(displa)n(ys)g(the)h
-(con)n(ten)n(ts)f(of)g(all)h(transceiv)n(er)d(registers.)0
-2915 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
-b(test.)0 3077 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
-3176 y(None.)0 3338 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
-b Fh(-)208 3437 y(None.)0 3710 y Fe(3.7)130 b(SCC1)44
-b(Ethernet)0 3908 y Fd(3.7.1)112 b(Submen)m(u)38 b(description)0
-4061 y Fh(The)28 b(tests)f(in)h(this)g(men)n(u)g(v)n(erify)e(the)i
+b(this)g(v)-5 b(alue)20 b(is)h(0,)h(the)f(default)p eop
+%%Page: 28 29
+28 28 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(28)208 333 y(dual)20
+b(p)r(ort)h(descriptor)f(base)g(address)g(will)h(b)r(e)g(selected,)i
+(and)d(only)h(one)g(descriptor)e(made)i(a)n(v)-5 b(ailable)20
+b(\(no)h(c)n(haining\).)0 648 y Fi(T)-8 b(est:)42 b(Dump)31
+b(Ph)m(y)h(Registers)0 801 y(T)-8 b(est)32 b(Description:)40
+b Fh(This)28 b(test)f(displa)n(ys)g(the)h(con)n(ten)n(ts)f(of)g(all)h
+(transceiv)n(er)d(registers.)0 967 y Fi(T)-8 b(est)32
+b(Mo)s(des:)39 b Fh(Custom)28 b(test.)0 1133 y Fi(T)-8
+b(est)32 b(Options:)40 b Fh(-)208 1233 y(None.)0 1399
+y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 1499
+y(None.)0 1773 y Fe(3.8)130 b(SCC1)44 b(Ethernet)0 1972
+y Fd(3.8.1)112 b(Submen)m(u)38 b(description)0 2125 y
+Fh(The)28 b(tests)f(in)h(this)g(men)n(u)g(v)n(erify)e(the)i
 (functionalit)n(y)g(of)f(the)h(SCC1)f(ethernet)h(p)r(ort.)0
-4292 y Fd(3.7.2)112 b(Submen)m(u)38 b(options)0 4445
+2357 y Fd(3.8.2)112 b(Submen)m(u)38 b(options)0 2510
 y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29 b(lev)n(el)f(of)i(debugging)e
 (output.)42 b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39
 b(\()p Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)
-r(ose,)f(3)420 4545 y(=)f(massiv)n(e)f(screen)h(scroll\))0
-4706 y(Source)g(Ethernet)h(A:)42 b(The)27 b(top)h(2)f(b)n(ytes)g(of)h
+r(ose,)f(3)420 2610 y(=)f(massiv)n(e)f(screen)h(scroll\))0
+2776 y(Source)g(Ethernet)h(A:)42 b(The)27 b(top)h(2)f(b)n(ytes)g(of)h
 (the)g(6-b)n(yte)e(ethernet)i(source)e(address)h(placed)g(in)h(the)g
-(pac)n(k)n(et)e(header.)0 4867 y(Souce)h(Ethernet)h(B:)42
+(pac)n(k)n(et)e(header.)0 2942 y(Souce)h(Ethernet)h(B:)42
 b(The)27 b(b)r(ottom)h(4)f(b)n(ytes)h(of)f(the)h(6-b)n(yte)f(ethernet)g
 (source)g(address)f(placed)h(in)h(the)g(pac)n(k)n(et)e(header.)0
-5029 y(Dest)i(Ethernet)g(A:)42 b(The)28 b(top)f(2)g(b)n(ytes)h(of)f
+3108 y(Dest)i(Ethernet)g(A:)42 b(The)28 b(top)f(2)g(b)n(ytes)h(of)f
 (the)h(6-b)n(yte)f(ethernet)g(destination)h(address)e(placed)h(in)h
-(the)g(pac)n(k)n(et)e(header.)0 5190 y(Dest)i(Ethernet)g(B:)42
+(the)g(pac)n(k)n(et)e(header.)0 3274 y(Dest)i(Ethernet)g(B:)42
 b(The)22 b(b)r(ottom)g(4)f(b)n(ytes)h(of)g(the)g(6-b)n(yte)f(ethernet)h
-(destination)f(address)g(placed)h(in)g(the)g(pac)n(k)n(et)f(header.)p
-eop
-%%Page: 25 26
-25 25 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(25)0 333 y(T)-7 b(x)28
-b(Base)e(A)n(ddress:)41 b(Selects)30 b(the)g(start)g(lo)r(cation)f(for)
-h(the)g(\034rst)g(ethernet)g(transmit)g(bu\033er.)45
-b(The)30 b(diagnostics)f(actually)420 432 y(emplo)n(y)24
-b(a)h(pair)f(of)h(transmit)g(bu\033ers,)h(the)f(second)g(one)f(1520)g
-(b)n(ytes)g(b)r(ey)n(ond)h(the)h(\034rst.)35 b(A)-9 b(v)n(oid)25
-b(selecting)f(an)420 532 y(address)f(b)r(elo)n(w)i(the)h(\034rst)f
-(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)h(diagnostics)d(co)r(de)i
-(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n(erwritten.)420
-632 y(Lea)n(v)n(e)g(the)i(default)g(v)-5 b(alue)27 b(unc)n(hanged)g
-(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n(ou're)f(doing.)0
-798 y(Rx)i(Base)e(A)n(ddress:)41 b(Selects)34 b(the)g(start)g(lo)r
-(cation)g(for)f(the)i(\034rst)f(ethernet)g(receiv)n(e)f(bu\033er.)57
-b(The)34 b(diagnostics)f(actually)420 897 y(emplo)n(y)28
-b(a)h(pair)f(of)h(receiv)n(e)f(bu\033ers,)h(the)h(second)e(one)h(1520)e
-(b)n(ytes)i(b)r(ey)n(ond)g(the)g(\034rst.)41 b(A)-9 b(v)n(oid)29
-b(selecting)f(an)420 997 y(address)23 b(b)r(elo)n(w)i(the)h(\034rst)f
-(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)h(diagnostics)d(co)r(de)i
-(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n(erwritten.)420
-1096 y(Lea)n(v)n(e)g(the)i(default)g(v)-5 b(alue)27 b(unc)n(hanged)g
-(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n(ou're)f(doing.)0
-1262 y(P)n(ac)n(k)n(et)h(Length:)41 b(Selects)25 b(the)g(total)g(n)n
-(um)n(b)r(er)f(of)h(b)n(ytes)g(in)g(the)g(transmit)g(pac)n(k)n(et.)35
-b(This)25 b(n)n(um)n(b)r(er)g(is)f(sligh)n(tly)h(misleading)420
-1362 y(since)30 b(the)h(MA)n(C)f(will)h(app)r(end)f(a)g(4-b)n(yte)g(c)n
-(hec)n(ksum)f(during)h(transmission.)44 b(Otherwise,)30
-b(this)h(n)n(um)n(b)r(er)f(of)420 1462 y(b)n(ytes)i(will)h(b)r(e)h
-(split)f(b)r(et)n(w)n(een)g(the)g(standard)f(ethernet)h(header)g(and)f
-(the)i(pac)n(k)n(et)e(data.)52 b(The)33 b(maxim)n(um)420
-1561 y(n)n(um)n(b)r(er)27 b(of)g(b)n(ytes)h(is)f(1500,)f(and)h(the)h
-(minim)n(um)g(is)g Fi(64)f Fh(\(default\).)0 1727 y(Lo)r(opbac)n(k:)46
-b(Selects)27 b(the)h(lo)r(opbac)n(k)e(p)r(osition)h(to)g(b)r(e)h(used)f
-(for)g(this)h(test.)37 b(Three)27 b(lo)r(opbac)n(k)f(p)r(oin)n(ts)h
-(are)g(a)n(v)-5 b(ailable:)35 b(\(0)27 b(=)420 1827 y(in)n(ternal,)g(1)
-g(=)g(transceiv)n(er,)f Fi(2)31 b(=)h(external)g(\(lo)s(opbac)m(k)g
-(connector)h(required\))p Fh(\).)0 1993 y(Sp)r(eed:)183
-b(The)27 b(SCC1)g(Ethernet)i(transceiv)n(er)c(only)i(supp)r(orts)g(the)
-h(10)f(Mb)h(transfer)e(rate.)0 2159 y(T)-7 b(est)28 b(Time:)41
-b(Sp)r(eci\034es)20 b(the)g(n)n(um)n(b)r(er)f(of)h(seconds)f(to)g
-(transmit)h(pac)n(k)n(ets)e(in)i(the)g(exerciser)e(test.)34
-b(The)20 b(default)g(is)g Fi(5)f Fh(seconds.)0 2325 y(2nd)27
+(destination)f(address)g(placed)h(in)g(the)g(pac)n(k)n(et)f(header.)0
+3440 y(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Selects)30
+b(the)g(start)g(lo)r(cation)f(for)h(the)g(\034rst)g(ethernet)g
+(transmit)g(bu\033er.)45 b(The)30 b(diagnostics)f(actually)420
+3540 y(emplo)n(y)24 b(a)h(pair)f(of)h(transmit)g(bu\033ers,)h(the)f
+(second)g(one)f(1520)g(b)n(ytes)g(b)r(ey)n(ond)h(the)h(\034rst.)35
+b(A)-9 b(v)n(oid)25 b(selecting)f(an)420 3640 y(address)f(b)r(elo)n(w)i
+(the)h(\034rst)f(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)h
+(diagnostics)d(co)r(de)i(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n
+(erwritten.)420 3739 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
+b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
+(ou're)f(doing.)0 3905 y(Rx)i(Base)e(A)n(ddress:)41 b(Selects)34
+b(the)g(start)g(lo)r(cation)g(for)f(the)i(\034rst)f(ethernet)g(receiv)n
+(e)f(bu\033er.)57 b(The)34 b(diagnostics)f(actually)420
+4005 y(emplo)n(y)28 b(a)h(pair)f(of)h(receiv)n(e)f(bu\033ers,)h(the)h
+(second)e(one)h(1520)e(b)n(ytes)i(b)r(ey)n(ond)g(the)g(\034rst.)41
+b(A)-9 b(v)n(oid)29 b(selecting)f(an)420 4104 y(address)23
+b(b)r(elo)n(w)i(the)h(\034rst)f(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g
+(the)h(diagnostics)d(co)r(de)i(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n
+(erwritten.)420 4204 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
+b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
+(ou're)f(doing.)0 4370 y(P)n(ac)n(k)n(et)h(Length:)41
+b(Selects)25 b(the)g(total)g(n)n(um)n(b)r(er)f(of)h(b)n(ytes)g(in)g
+(the)g(transmit)g(pac)n(k)n(et.)35 b(This)25 b(n)n(um)n(b)r(er)g(is)f
+(sligh)n(tly)h(misleading)420 4470 y(since)30 b(the)h(MA)n(C)f(will)h
+(app)r(end)f(a)g(4-b)n(yte)g(c)n(hec)n(ksum)f(during)h(transmission.)44
+b(Otherwise,)30 b(this)h(n)n(um)n(b)r(er)f(of)420 4569
+y(b)n(ytes)i(will)h(b)r(e)h(split)f(b)r(et)n(w)n(een)g(the)g(standard)f
+(ethernet)h(header)g(and)f(the)i(pac)n(k)n(et)e(data.)52
+b(The)33 b(maxim)n(um)420 4669 y(n)n(um)n(b)r(er)27 b(of)g(b)n(ytes)h
+(is)f(1500,)f(and)h(the)h(minim)n(um)g(is)g Fi(64)f Fh(\(default\).)0
+4835 y(Lo)r(opbac)n(k:)46 b(Selects)27 b(the)h(lo)r(opbac)n(k)e(p)r
+(osition)h(to)g(b)r(e)h(used)f(for)g(this)h(test.)37
+b(Three)27 b(lo)r(opbac)n(k)f(p)r(oin)n(ts)h(are)g(a)n(v)-5
+b(ailable:)35 b(\(0)27 b(=)420 4935 y(in)n(ternal,)g(1)g(=)g(transceiv)
+n(er,)f Fi(2)31 b(=)h(external)g(\(lo)s(opbac)m(k)g(connector)h
+(required\))p Fh(\).)0 5101 y(Sp)r(eed:)183 b(The)27
+b(SCC1)g(Ethernet)i(transceiv)n(er)c(only)i(supp)r(orts)g(the)h(10)f
+(Mb)h(transfer)e(rate.)p eop
+%%Page: 29 30
+29 29 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(29)0 333 y(T)-7 b(est)28
+b(Time:)41 b(Sp)r(eci\034es)20 b(the)g(n)n(um)n(b)r(er)f(of)h(seconds)f
+(to)g(transmit)h(pac)n(k)n(ets)e(in)i(the)g(exerciser)e(test.)34
+b(The)20 b(default)g(is)g Fi(5)f Fh(seconds.)0 499 y(2nd)27
 b(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Not)28 b(used)f(in)h(this)g
-(men)n(u)0 2491 y(2nd_Rx_Base_A)n(ddress:)38 b(Not)28
-b(used)f(in)h(this)g(men)n(u)0 2724 y Fd(3.7.3)112 b(T)-9
-b(est)37 b(descriptions)0 2877 y Fi(T)-8 b(est:)42 b(Op)s(eration)31
-b(T)-8 b(est)0 3030 y(T)g(est)32 b(Description:)40 b
+(men)n(u)0 665 y(2nd_Rx_Base_A)n(ddress:)38 b(Not)28
+b(used)f(in)h(this)g(men)n(u)0 897 y Fd(3.8.3)112 b(T)-9
+b(est)37 b(descriptions)0 1050 y Fi(T)-8 b(est:)42 b(Op)s(eration)31
+b(T)-8 b(est)0 1204 y(T)g(est)32 b(Description:)40 b
 Fh(This)20 b(test)h(transmits)e(a)h(single)g(pac)n(k)n(et)f(using)h
 (the)g(options)g(sp)r(eci\034ed,)i(then)e(queries)g(the)g(hardw)n(are)
-208 3130 y(to)27 b(determine)h(whether)f(the)h(pac)n(k)n(et)e(w)n(as)h
-(receiv)n(ed.)208 3229 y(Note:)36 b(Remem)n(b)r(er)28
+208 1303 y(to)27 b(determine)h(whether)f(the)h(pac)n(k)n(et)e(w)n(as)h
+(receiv)n(ed.)208 1403 y(Note:)36 b(Remem)n(b)r(er)28
 b(to)f(attac)n(h)g(a)g(lo)r(opbac)n(k)f(connector)h(unless)g(sp)r
 (ecifying)h(in)n(ternal)f(or)f(transceiv)n(er)g(lo)r(opbac)n(k.)0
-3395 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
-b(and)g(burn-in)h(mo)r(des.)0 3561 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 3661 y(Source/Dest)25 b(Ethernet)j(A/B:)f
+1569 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)0 1735 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 1835 y(Source/Dest)25 b(Ethernet)j(A/B:)f
 (Only)f(useful)i(if)f(the)g(SCC1)g(ethernet)g(p)r(ort)g(is)g(connected)
-f(to)h(a)g(h)n(ub)g(or)f(switc)n(h,)h(or)208 3761 y(an)f(ethernet)h
+f(to)h(a)g(h)n(ub)g(or)f(switc)n(h,)h(or)208 1934 y(an)f(ethernet)h
 (pac)n(k)n(et)e(capture)h(device.)37 b(This)26 b(allo)n(ws)g(the)h(op)r
 (erator)e(to)h(uniquely)h(set)g(the)g(ethernet)g(addresses)e(for)208
-3860 y(the)j(test)f(equipmen)n(t.)208 3960 y(T)-7 b(x)27
+2034 y(the)j(test)f(equipmen)n(t.)208 2133 y(T)-7 b(x)27
 b(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(in)h(memory)f(the)h
-(transmit)f(bu\033ers)h(will)f(b)r(e)h(placed.)208 4060
+(transmit)f(bu\033ers)h(will)f(b)r(e)h(placed.)208 2233
 y(Rx)f(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(in)h(memory)f
 (the)h(receiv)n(e)e(bu\033ers)i(will)f(b)r(e)h(placed.)208
-4159 y(P)n(ac)n(k)n(et)e(length:)37 b(Determines)28 b(the)g(size)f(of)g
+2333 y(P)n(ac)n(k)n(et)e(length:)37 b(Determines)28 b(the)g(size)f(of)g
 (eac)n(h)g(transmitted)h(ethernet)f(pac)n(k)n(et)g(\(except)h(for)f
-(the)h(c)n(hec)n(ksum\).)208 4259 y(Lo)r(opbac)n(k:)36
+(the)h(c)n(hec)n(ksum\).)208 2432 y(Lo)r(opbac)n(k:)36
 b(Determines)29 b(the)g(lo)r(opbac)n(k)e(p)r(osition.)39
 b('0')28 b(sets)g(lo)r(opbac)n(k)f(and)h(full)h(duplex)g(at)f(the)h
-(SCC)g(lev)n(el)f(with)208 4358 y(promiscuous)21 b(mo)r(de)h(on)h
+(SCC)g(lev)n(el)f(with)208 2532 y(promiscuous)21 b(mo)r(de)h(on)h
 (\(i.e.)35 b(destination)23 b(ethernet)f(address)g(do)r(esn't)g
 (matter\),)i('2')e(sets)g(full)i(duplex)f(at)f(the)h(SCC)208
-4458 y(and)k(PHY)i(lev)n(els)d(and)i(disables)f(lo)r(opbac)n(k.)0
-4624 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-4724 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(transmitted)e(-)i
+2632 y(and)k(PHY)i(lev)n(els)d(and)i(disables)f(lo)r(opbac)n(k.)0
+2798 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+2897 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(transmitted)e(-)i
 (Bu\033er)f(not)h(released:)k Fh(The)29 b(SCC1)f(Ethernet)h(Con)n
-(troller)d(didn't)208 4823 y(clear)g(the)j(ready)d(bit)j(in)f(the)g
+(troller)d(didn't)208 2997 y(clear)g(the)j(ready)d(bit)j(in)f(the)g
 (bu\033er)g(descriptor.)37 b(P)n(ossibly)27 b(the)h(lo)r(opbac)n(k)f
 (setting)g(is)h(external)f(and)h(no)g(lo)r(opbac)n(k)208
-4923 y(connector)22 b(is)i(installed,)h(or)d(the)j(bu\033er)f
+3096 y(connector)22 b(is)i(installed,)h(or)d(the)j(bu\033er)f
 (descriptor)e(memory)h(ma)n(y)g(b)r(e)i(fault)n(y)e(or)g(not)h
-(accessible)f(to)h(the)g(con)n(troller)208 5023 y(\(the)k(descriptors)e
+(accessible)f(to)h(the)g(con)n(troller)208 3196 y(\(the)k(descriptors)e
 (liv)n(e)h(in)h(the)g(MPC)g(860)e(dual)i(p)r(ort)f(RAM\).)208
-5122 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)38
+3296 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)38
 b Fh(The)28 b(SCC1)g(Ethernet)i(Con)n(troller)c(transmitted)j(a)f(pac)n
-(k)n(et,)f(but)i(it)g(didn't)p eop
-%%Page: 26 27
-26 26 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(26)208 333 y(receiv)n(e)36
+(k)n(et,)f(but)i(it)g(didn't)208 3395 y(receiv)n(e)36
 b(an)n(ything.)67 b(It's)38 b(p)r(ossible)f(the)h(SCC1)g(p)r(ort)f(is)h
 (connected)g(to)f(another)g(p)r(ort)h(or)f(switc)n(h)g(instead)h(of)f
-(a)208 432 y(lo)r(opbac)n(k)26 b(cable.)0 698 y Fi(T)-8
-b(est:)42 b(Exerciser)32 b(T)-8 b(est)0 851 y(T)g(est)32
+(a)208 3495 y(lo)r(opbac)n(k)26 b(cable.)0 3761 y Fi(T)-8
+b(est:)42 b(Exerciser)32 b(T)-8 b(est)0 3914 y(T)g(est)32
 b(Description:)40 b Fh(This)e(test)h(transmits)e(and)h(receiv)n(es)f
 (pac)n(k)n(ets)g(un)n(til)h(the)h(n)n(um)n(b)r(er)f(of)g(seconds)f(sp)r
-(eci\034ed)h(ha)n(v)n(e)208 951 y(elapsed.)k(Eac)n(h)29
+(eci\034ed)h(ha)n(v)n(e)208 4013 y(elapsed.)k(Eac)n(h)29
 b(time)h(the)g(hardw)n(are)d(receiv)n(es)h(a)h(pac)n(k)n(et,)g(it)h
 (compares)e(it)i(to)g(the)g(transmitted)f(pac)n(k)n(et)g(in)g(order)208
-1050 y(to)e(detect)h(data)f(corruption,)f(then)i(sends)g(the)g(next)f
-(pac)n(k)n(et.)208 1150 y(Note:)36 b(Remem)n(b)r(er)28
+4113 y(to)e(detect)h(data)f(corruption,)f(then)i(sends)g(the)g(next)f
+(pac)n(k)n(et.)208 4213 y(Note:)36 b(Remem)n(b)r(er)28
 b(to)f(attac)n(h)g(a)g(lo)r(opbac)n(k)f(connector)h(unless)g(sp)r
 (ecifying)h(in)n(ternal)f(or)f(transceiv)n(er)g(lo)r(opbac)n(k.)0
-1316 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
-b(and)g(burn-in)h(mo)r(des.)0 1482 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 1582 y(Debug)23 b(lev)n(el:)34
+4379 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)0 4545 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 4644 y(Debug)23 b(lev)n(el:)34
 b(Setting)24 b(this)g(to)f(1)g(or)f(higher)h(will)g(displa)n(y)g(the)g
 (pac)n(k)n(et)g(rate)f(\(this)i(will)g(ha)n(v)n(e)e(little)i(corresp)r
-(ondence)208 1681 y(with)f(the)g(Sp)r(eed)h(option,)g(since)e(the)i
+(ondence)208 4744 y(with)f(the)g(Sp)r(eed)h(option,)g(since)e(the)i
 (pro)r(cessor)d(tak)n(es)h(time)h(to)g(set)g(up)g(the)h(transmit)e(pac)
-n(k)n(ets)g(and)h(compare)f(them)208 1781 y(to)27 b(the)h(receiv)n(ed)e
+n(k)n(ets)g(and)h(compare)f(them)208 4844 y(to)27 b(the)h(receiv)n(ed)e
 (pac)n(k)n(ets\).)36 b(V)-7 b(alues)27 b(higher)g(than)h(1)f(will)h
 (displa)n(y)f(additional)g(debugging)f(information.)208
-1881 y(Source/Dest)f(Ethernet)j(A/B:)f(Only)f(useful)i(if)f(the)g(SCC1)
+4943 y(Source/Dest)f(Ethernet)j(A/B:)f(Only)f(useful)i(if)f(the)g(SCC1)
 g(ethernet)g(p)r(ort)g(is)g(connected)f(to)h(a)g(h)n(ub)g(or)f(switc)n
-(h,)h(or)208 1980 y(an)f(ethernet)h(pac)n(k)n(et)e(capture)h(device.)37
+(h,)h(or)208 5043 y(an)f(ethernet)h(pac)n(k)n(et)e(capture)h(device.)37
 b(This)26 b(allo)n(ws)g(the)h(op)r(erator)e(to)h(uniquely)h(set)g(the)g
-(ethernet)g(addresses)e(for)208 2080 y(the)j(test)f(equipmen)n(t.)208
-2179 y(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)27
-b(where)g(the)h(transmit)g(bu\033ers)f(will)h(b)r(e)g(placed.)208
-2279 y(Rx)f(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(the)h
-(receiv)n(e)f(bu\033ers)g(will)h(b)r(e)g(placed.)208
-2379 y(P)n(ac)n(k)n(et)e(Length:)37 b(Determines)27 b(the)h(size)g(of)f
-(eac)n(h)g(transmitted)h(pac)n(k)n(et)e(\(except)i(for)f(the)h(c)n(hec)
-n(ksum\).)208 2478 y(Lo)r(opbac)n(k:)36 b(Determines)29
-b(the)g(lo)r(opbac)n(k)e(p)r(osition.)39 b('0')28 b(sets)g(lo)r(opbac)n
-(k)f(and)h(full)h(duplex)g(at)f(the)h(SCC)g(lev)n(el)f(with)208
-2578 y(promiscuous)21 b(mo)r(de)h(on)h(\(i.e.)35 b(destination)23
-b(ethernet)f(address)g(do)r(esn't)g(matter\),)i('2')e(sets)g(full)i
-(duplex)f(at)f(the)h(SCC)208 2678 y(and)k(PHY)i(lev)n(els)d(and)i
-(disables)f(lo)r(opbac)n(k.)208 2777 y(T)-7 b(est)27
-b(Time:)37 b(Determines)28 b(ho)n(w)f(man)n(y)g(seconds)f(the)i(test)g
-(will)g(run.)0 2943 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
-b Fh(-)208 3043 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(transmitted)e
-(-)i(Bu\033er)f(not)h(released:)k Fh(The)29 b(SCC1)f(Ethernet)h(Con)n
-(troller)d(didn't)208 3142 y(clear)g(the)j(ready)d(bit)j(in)f(the)g
-(bu\033er)g(descriptor.)37 b(P)n(ossibly)27 b(the)h(lo)r(opbac)n(k)f
-(setting)g(is)h(external)f(and)h(no)g(lo)r(opbac)n(k)208
-3242 y(connector)22 b(is)i(installed,)h(or)d(the)j(bu\033er)f
-(descriptor)e(memory)h(ma)n(y)g(b)r(e)i(fault)n(y)e(or)g(not)h
-(accessible)f(to)h(the)g(con)n(troller)208 3342 y(\(the)k(descriptors)e
-(liv)n(e)h(in)h(the)g(MPC)g(860)e(dual)i(p)r(ort)f(RAM\).)208
-3441 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(receiv)m(ed:)38
-b Fh(The)28 b(SCC1)g(Ethernet)i(Con)n(troller)c(transmitted)j(a)f(pac)n
-(k)n(et,)f(but)i(it)g(didn't)208 3541 y(receiv)n(e)36
+(ethernet)g(addresses)e(for)208 5143 y(the)j(test)f(equipmen)n(t.)p
+eop
+%%Page: 30 31
+30 30 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(30)208 333 y(T)-7 b(x)27
+b(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(the)h(transmit)g
+(bu\033ers)f(will)h(b)r(e)g(placed.)208 432 y(Rx)f(Base)g(A)n(ddress:)
+36 b(Determines)27 b(where)g(the)h(receiv)n(e)f(bu\033ers)g(will)h(b)r
+(e)g(placed.)208 532 y(P)n(ac)n(k)n(et)e(Length:)37 b(Determines)27
+b(the)h(size)g(of)f(eac)n(h)g(transmitted)h(pac)n(k)n(et)e(\(except)i
+(for)f(the)h(c)n(hec)n(ksum\).)208 632 y(Lo)r(opbac)n(k:)36
+b(Determines)29 b(the)g(lo)r(opbac)n(k)e(p)r(osition.)39
+b('0')28 b(sets)g(lo)r(opbac)n(k)f(and)h(full)h(duplex)g(at)f(the)h
+(SCC)g(lev)n(el)f(with)208 731 y(promiscuous)21 b(mo)r(de)h(on)h
+(\(i.e.)35 b(destination)23 b(ethernet)f(address)g(do)r(esn't)g
+(matter\),)i('2')e(sets)g(full)i(duplex)f(at)f(the)h(SCC)208
+831 y(and)k(PHY)i(lev)n(els)d(and)i(disables)f(lo)r(opbac)n(k.)208
+930 y(T)-7 b(est)27 b(Time:)37 b(Determines)28 b(ho)n(w)f(man)n(y)g
+(seconds)f(the)i(test)g(will)g(run.)0 1096 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 1195 y Fi(Ethernet)32
+b(pac)m(k)m(et)j(not)e(transmitted)e(-)i(Bu\033er)f(not)h(released:)k
+Fh(The)29 b(SCC1)f(Ethernet)h(Con)n(troller)d(didn't)208
+1295 y(clear)g(the)j(ready)d(bit)j(in)f(the)g(bu\033er)g(descriptor.)37
+b(P)n(ossibly)27 b(the)h(lo)r(opbac)n(k)f(setting)g(is)h(external)f
+(and)h(no)g(lo)r(opbac)n(k)208 1394 y(connector)22 b(is)i(installed,)h
+(or)d(the)j(bu\033er)f(descriptor)e(memory)h(ma)n(y)g(b)r(e)i(fault)n
+(y)e(or)g(not)h(accessible)f(to)h(the)g(con)n(troller)208
+1494 y(\(the)k(descriptors)e(liv)n(e)h(in)h(the)g(MPC)g(860)e(dual)i(p)
+r(ort)f(RAM\).)208 1594 y Fi(Ethernet)32 b(pac)m(k)m(et)j(not)e(receiv)
+m(ed:)38 b Fh(The)28 b(SCC1)g(Ethernet)i(Con)n(troller)c(transmitted)j
+(a)f(pac)n(k)n(et,)f(but)i(it)g(didn't)208 1693 y(receiv)n(e)36
 b(an)n(ything.)67 b(It's)38 b(p)r(ossible)f(the)h(SCC1)g(p)r(ort)f(is)h
 (connected)g(to)f(another)g(p)r(ort)h(or)f(switc)n(h)g(instead)h(of)f
-(a)208 3641 y(lo)r(opbac)n(k)26 b(cable.)208 3740 y Fi(P)m(ac)m(k)m(et)
+(a)208 1793 y(lo)r(opbac)n(k)26 b(cable.)208 1893 y Fi(P)m(ac)m(k)m(et)
 37 b(data)f(error:)42 b Fh(The)30 b(ethernet)g(p)r(ort)g(receiv)n(ed)f
 (a)h(pac)n(k)n(et)f(that)h(didn't)h(matc)n(h)f(the)h(transmitted)f(pac)
-n(k)n(et.)208 3840 y(This)d(can)g(happ)r(en)h(if)g(the)g(transmit)f
-(and)h(receiv)n(e)e(bu\033ers)i(o)n(v)n(erlap.)0 4114
-y Fe(3.8)130 b(Ethernet)45 b(Crosso)l(v)l(er)0 4313 y
-Fd(3.8.1)112 b(Submen)m(u)38 b(description)0 4466 y Fh(The)32
+n(k)n(et.)208 1992 y(This)d(can)g(happ)r(en)h(if)g(the)g(transmit)f
+(and)h(receiv)n(e)e(bu\033ers)i(o)n(v)n(erlap.)0 2266
+y Fe(3.9)130 b(Ethernet)45 b(Crosso)l(v)l(er)0 2465 y
+Fd(3.9.1)112 b(Submen)m(u)38 b(description)0 2618 y Fh(The)32
 b(test)h(in)f(this)g(men)n(u)g(v)n(eri\034es)f(the)i(abilit)n(y)f(of)g
 (eac)n(h)f(ethernet)h(p)r(ort)g(to)g(correctly)f(receiv)n(e)f(from,)j
-(and)f(transmit)g(to,)0 4566 y(the)c(other)f(p)r(ort.)0
-4798 y Fd(3.8.2)112 b(Submen)m(u)38 b(options)0 4951
+(and)f(transmit)g(to,)0 2718 y(the)c(other)f(p)r(ort.)0
+2950 y Fd(3.9.2)112 b(Submen)m(u)38 b(options)0 3103
 y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29 b(lev)n(el)f(of)i(debugging)e
 (output.)42 b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39
 b(\()p Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)
-r(ose,)f(3)420 5051 y(=)f(massiv)n(e)f(screen)h(scroll\))p
-eop
-%%Page: 27 28
-27 27 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(27)0 333 y(Source)27
-b(Ethernet)h(A:)42 b(The)25 b(top)g(2)g(b)n(ytes)g(of)g(the)g(6-b)n
-(yte)g(ethernet)g(source)f(address)g(placed)g(in)i(the)f(pac)n(k)n(et)g
-(header)f(\(used)420 432 y(for)j(the)h(FEC\).)0 598 y(Souce)f(Ethernet)
-h(B:)42 b(The)33 b(b)r(ottom)g(4)g(b)n(ytes)f(of)h(the)h(6-b)n(yte)e
-(ethernet)h(source)f(address)g(placed)g(in)i(the)f(pac)n(k)n(et)f
-(header)420 698 y(\(used)27 b(for)g(the)h(FEC\).)0 864
-y(Dest)g(Ethernet)g(A:)42 b(The)34 b(top)f(2)h(b)n(ytes)f(of)h(the)g
-(6-b)n(yte)e(ethernet)i(destination)g(address)e(placed)h(in)h(the)g
-(pac)n(k)n(et)f(header)420 964 y(\(used)27 b(for)g(the)h(SCC\).)0
-1130 y(Dest)g(Ethernet)g(B:)42 b(The)23 b(b)r(ottom)h(4)f(b)n(ytes)g
+r(ose,)f(3)420 3203 y(=)f(massiv)n(e)f(screen)h(scroll\))0
+3368 y(Source)g(Ethernet)h(A:)42 b(The)25 b(top)g(2)g(b)n(ytes)g(of)g
+(the)g(6-b)n(yte)g(ethernet)g(source)f(address)g(placed)g(in)i(the)f
+(pac)n(k)n(et)g(header)f(\(used)420 3467 y(for)j(the)h(FEC\).)0
+3633 y(Souce)f(Ethernet)h(B:)42 b(The)33 b(b)r(ottom)g(4)g(b)n(ytes)f
+(of)h(the)h(6-b)n(yte)e(ethernet)h(source)f(address)g(placed)g(in)i
+(the)f(pac)n(k)n(et)f(header)420 3732 y(\(used)27 b(for)g(the)h(FEC\).)
+0 3897 y(Dest)g(Ethernet)g(A:)42 b(The)34 b(top)f(2)h(b)n(ytes)f(of)h
+(the)g(6-b)n(yte)e(ethernet)i(destination)g(address)e(placed)h(in)h
+(the)g(pac)n(k)n(et)f(header)420 3997 y(\(used)27 b(for)g(the)h(SCC\).)
+0 4162 y(Dest)g(Ethernet)g(B:)42 b(The)23 b(b)r(ottom)h(4)f(b)n(ytes)g
 (of)h(the)g(6-b)n(yte)e(ethernet)i(destination)f(address)f(placed)i(in)
-g(the)f(pac)n(k)n(et)g(header)420 1229 y(\(used)k(for)g(the)h(SCC\).)0
-1395 y(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Selects)d(the)h(start)f
+g(the)f(pac)n(k)n(et)g(header)420 4262 y(\(used)k(for)g(the)h(SCC\).)0
+4427 y(T)-7 b(x)28 b(Base)e(A)n(ddress:)41 b(Selects)d(the)h(start)f
 (lo)r(cation)g(for)g(the)h(\034rst)f(FEC)h(ethernet)g(transmit)f
-(bu\033er.)70 b(The)39 b(diagnostics)420 1495 y(actually)32
+(bu\033er.)70 b(The)39 b(diagnostics)420 4527 y(actually)32
 b(emplo)n(y)h(a)g(pair)f(of)i(transmit)f(bu\033ers,)i(the)e(second)g
 (one)g(1520)e(b)n(ytes)i(b)r(ey)n(ond)g(the)h(\034rst.)54
-b(A)-9 b(v)n(oid)420 1595 y(selecting)25 b(an)h(address)f(b)r(elo)n(w)h
+b(A)-9 b(v)n(oid)420 4626 y(selecting)25 b(an)h(address)f(b)r(elo)n(w)h
 (the)g(\034rst)g(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)g
 (diagnostics)f(co)r(de)h(segmen)n(t)f(ma)n(y)h(b)r(e)420
-1694 y(o)n(v)n(erwritten.)35 b(Lea)n(v)n(e)26 b(the)i(default)g(v)-5
+4726 y(o)n(v)n(erwritten.)35 b(Lea)n(v)n(e)26 b(the)i(default)g(v)-5
 b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
-(ou're)f(doing.)0 1860 y(Rx)i(Base)e(A)n(ddress:)41 b(Selects)19
+(ou're)f(doing.)0 4891 y(Rx)i(Base)e(A)n(ddress:)41 b(Selects)19
 b(the)g(start)g(lo)r(cation)f(for)g(the)i(\034rst)e(FEC)i(ethernet)f
 (receiv)n(e)f(bu\033er.)34 b(The)19 b(diagnostics)f(actually)420
-1960 y(emplo)n(y)28 b(a)h(pair)f(of)h(receiv)n(e)f(bu\033ers,)h(the)h
+4991 y(emplo)n(y)28 b(a)h(pair)f(of)h(receiv)n(e)f(bu\033ers,)h(the)h
 (second)e(one)h(1520)e(b)n(ytes)i(b)r(ey)n(ond)g(the)g(\034rst.)41
-b(A)-9 b(v)n(oid)29 b(selecting)f(an)420 2060 y(address)23
+b(A)-9 b(v)n(oid)29 b(selecting)f(an)420 5090 y(address)23
 b(b)r(elo)n(w)i(the)h(\034rst)f(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g
 (the)h(diagnostics)d(co)r(de)i(segmen)n(t)g(ma)n(y)f(b)r(e)i(o)n(v)n
-(erwritten.)420 2159 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
+(erwritten.)420 5190 y(Lea)n(v)n(e)g(the)i(default)g(v)-5
 b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
-(ou're)f(doing.)0 2325 y(P)n(ac)n(k)n(et)h(Length:)41
-b(Selects)25 b(the)g(total)g(n)n(um)n(b)r(er)f(of)h(b)n(ytes)g(in)g
-(the)g(transmit)g(pac)n(k)n(et.)35 b(This)25 b(n)n(um)n(b)r(er)g(is)f
-(sligh)n(tly)h(misleading)420 2425 y(since)30 b(the)h(MA)n(C)f(will)h
-(app)r(end)f(a)g(4-b)n(yte)g(c)n(hec)n(ksum)f(during)h(transmission.)44
-b(Otherwise,)30 b(this)h(n)n(um)n(b)r(er)f(of)420 2524
-y(b)n(ytes)i(will)h(b)r(e)h(split)f(b)r(et)n(w)n(een)g(the)g(standard)f
-(ethernet)h(header)g(and)f(the)i(pac)n(k)n(et)e(data.)52
-b(The)33 b(maxim)n(um)420 2624 y(n)n(um)n(b)r(er)27 b(of)g(b)n(ytes)h
-(is)f(1500,)f(and)h(the)h(minim)n(um)g(is)g Fi(64)f Fh(\(default\).)0
-2790 y(Lo)r(opbac)n(k:)46 b(Not)33 b(used.)53 b(A)33
-b(crosso)n(v)n(er)d(cable)i(m)n(ust)i(connect)e(the)i(t)n(w)n(o)e
-(ethernet)h(p)r(orts)g(\(alternativ)n(ely)-7 b(,)33 b(connect)g(b)r
-(oth)420 2890 y(p)r(orts)24 b(to)h(the)h(same)f(ethernet)g(switc)n(h)g
-(or)f(h)n(ub,)i(making)f(sure)f(the)i(switc)n(h)f(or)f(h)n(ub)h(is)h
-(not)f(connected)g(to)g(an)n(y)420 2989 y(other)i(devices\).)0
-3155 y(Sp)r(eed:)183 b(The)20 b(SCC1)g(Ethernet)h(transceiv)n(er)e
-(only)h(supp)r(orts)g(the)h(10)e(Mb)i(transfer)f(rate,)h(therefore)e(b)
-r(oth)i(transceiv)n(ers)420 3255 y(will)37 b(op)r(erate)f(at)i(this)f
-(rate.)65 b(F)-7 b(or)37 b(debugging)f(purp)r(oses,)j(this)e(option)g
-(can)g(b)r(e)h(c)n(hanged,)g(but)g(it)g(is)f(not)420
-3355 y(recommended.)0 3521 y(T)-7 b(est)28 b(Time:)41
-b(Sp)r(eci\034es)28 b(the)g(n)n(um)n(b)r(er)f(of)h(seconds)e(to)i
-(transmit)f(pac)n(k)n(ets.)36 b(The)27 b(default)h(is)g
-Fi(5)f Fh(seconds.)0 3687 y(2nd)g(T)-7 b(x)28 b(Base)e(A)n(ddress:)41
-b(Selects)24 b(the)g(start)f(lo)r(cation)g(for)g(the)h(\034rst)f(SCC1)g
-(ethernet)h(transmit)f(bu\033er.)36 b(The)24 b(diagnostics)420
-3786 y(actually)32 b(emplo)n(y)h(a)g(pair)f(of)i(transmit)f(bu\033ers,)
-i(the)e(second)g(one)g(1520)e(b)n(ytes)i(b)r(ey)n(ond)g(the)h(\034rst.)
-54 b(A)-9 b(v)n(oid)420 3886 y(selecting)25 b(an)h(address)f(b)r(elo)n
+(ou're)f(doing.)p eop
+%%Page: 31 32
+31 31 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(31)0 333 y(P)n(ac)n(k)n(et)27
+b(Length:)41 b(Selects)25 b(the)g(total)g(n)n(um)n(b)r(er)f(of)h(b)n
+(ytes)g(in)g(the)g(transmit)g(pac)n(k)n(et.)35 b(This)25
+b(n)n(um)n(b)r(er)g(is)f(sligh)n(tly)h(misleading)420
+432 y(since)30 b(the)h(MA)n(C)f(will)h(app)r(end)f(a)g(4-b)n(yte)g(c)n
+(hec)n(ksum)f(during)h(transmission.)44 b(Otherwise,)30
+b(this)h(n)n(um)n(b)r(er)f(of)420 532 y(b)n(ytes)i(will)h(b)r(e)h
+(split)f(b)r(et)n(w)n(een)g(the)g(standard)f(ethernet)h(header)g(and)f
+(the)i(pac)n(k)n(et)e(data.)52 b(The)33 b(maxim)n(um)420
+632 y(n)n(um)n(b)r(er)27 b(of)g(b)n(ytes)h(is)f(1500,)f(and)h(the)h
+(minim)n(um)g(is)g Fi(64)f Fh(\(default\).)0 798 y(Lo)r(opbac)n(k:)46
+b(Not)33 b(used.)53 b(A)33 b(crosso)n(v)n(er)d(cable)i(m)n(ust)i
+(connect)e(the)i(t)n(w)n(o)e(ethernet)h(p)r(orts)g(\(alternativ)n(ely)
+-7 b(,)33 b(connect)g(b)r(oth)420 897 y(p)r(orts)24 b(to)h(the)h(same)f
+(ethernet)g(switc)n(h)g(or)f(h)n(ub,)i(making)f(sure)f(the)i(switc)n(h)
+f(or)f(h)n(ub)h(is)h(not)f(connected)g(to)g(an)n(y)420
+997 y(other)i(devices\).)0 1163 y(Sp)r(eed:)183 b(The)20
+b(SCC1)g(Ethernet)h(transceiv)n(er)e(only)h(supp)r(orts)g(the)h(10)e
+(Mb)i(transfer)f(rate,)h(therefore)e(b)r(oth)i(transceiv)n(ers)420
+1262 y(will)37 b(op)r(erate)f(at)i(this)f(rate.)65 b(F)-7
+b(or)37 b(debugging)f(purp)r(oses,)j(this)e(option)g(can)g(b)r(e)h(c)n
+(hanged,)g(but)g(it)g(is)f(not)420 1362 y(recommended.)0
+1528 y(T)-7 b(est)28 b(Time:)41 b(Sp)r(eci\034es)28 b(the)g(n)n(um)n(b)
+r(er)f(of)h(seconds)e(to)i(transmit)f(pac)n(k)n(ets.)36
+b(The)27 b(default)h(is)g Fi(5)f Fh(seconds.)0 1694 y(2nd)g(T)-7
+b(x)28 b(Base)e(A)n(ddress:)41 b(Selects)24 b(the)g(start)f(lo)r
+(cation)g(for)g(the)h(\034rst)f(SCC1)g(ethernet)h(transmit)f(bu\033er.)
+36 b(The)24 b(diagnostics)420 1794 y(actually)32 b(emplo)n(y)h(a)g
+(pair)f(of)i(transmit)f(bu\033ers,)i(the)e(second)g(one)g(1520)e(b)n
+(ytes)i(b)r(ey)n(ond)g(the)h(\034rst.)54 b(A)-9 b(v)n(oid)420
+1893 y(selecting)25 b(an)h(address)f(b)r(elo)n(w)h(the)g(\034rst)g
+(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)g(diagnostics)f(co)r(de)h
+(segmen)n(t)f(ma)n(y)h(b)r(e)420 1993 y(o)n(v)n(erwritten.)35
+b(Lea)n(v)n(e)26 b(the)i(default)g(v)-5 b(alue)27 b(unc)n(hanged)g
+(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n(ou're)f(doing.)0
+2159 y(2nd_Rx_Base_A)n(ddress:)38 b(Selects)19 b(the)g(start)f(lo)r
+(cation)g(for)h(the)g(\034rst)g(SCC1)f(ethernet)h(receiv)n(e)f
+(bu\033er.)34 b(The)19 b(diagnostics)420 2259 y(actually)36
+b(emplo)n(y)g(a)h(pair)g(of)g(receiv)n(e)e(bu\033ers,)40
+b(the)d(second)g(one)f(1520)g(b)n(ytes)g(b)r(ey)n(ond)h(the)h(\034rst.)
+65 b(A)-9 b(v)n(oid)420 2358 y(selecting)25 b(an)h(address)f(b)r(elo)n
 (w)h(the)g(\034rst)g(megab)n(yte)f(or)g(t)n(w)n(o,)h(since)g(the)g
 (diagnostics)f(co)r(de)h(segmen)n(t)f(ma)n(y)h(b)r(e)420
-3986 y(o)n(v)n(erwritten.)35 b(Lea)n(v)n(e)26 b(the)i(default)g(v)-5
+2458 y(o)n(v)n(erwritten.)35 b(Lea)n(v)n(e)26 b(the)i(default)g(v)-5
 b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g(kno)n(w)g(what)g(y)n
-(ou're)f(doing.)0 4152 y(2nd_Rx_Base_A)n(ddress:)38 b(Selects)19
-b(the)g(start)f(lo)r(cation)g(for)h(the)g(\034rst)g(SCC1)f(ethernet)h
-(receiv)n(e)f(bu\033er.)34 b(The)19 b(diagnostics)420
-4251 y(actually)36 b(emplo)n(y)g(a)h(pair)g(of)g(receiv)n(e)e
-(bu\033ers,)40 b(the)d(second)g(one)f(1520)g(b)n(ytes)g(b)r(ey)n(ond)h
-(the)h(\034rst.)65 b(A)-9 b(v)n(oid)420 4351 y(selecting)25
-b(an)h(address)f(b)r(elo)n(w)h(the)g(\034rst)g(megab)n(yte)f(or)g(t)n
-(w)n(o,)h(since)g(the)g(diagnostics)f(co)r(de)h(segmen)n(t)f(ma)n(y)h
-(b)r(e)420 4451 y(o)n(v)n(erwritten.)35 b(Lea)n(v)n(e)26
-b(the)i(default)g(v)-5 b(alue)27 b(unc)n(hanged)g(unless)g(y)n(ou)g
-(kno)n(w)g(what)g(y)n(ou're)f(doing.)0 4683 y Fd(3.8.3)112
-b(T)-9 b(est)37 b(description)0 4836 y Fi(T)-8 b(est:)42
-b(Crosso)m(v)m(er)32 b(T)-8 b(est)0 4989 y(T)g(est)32
-b(Description:)40 b Fh(This)19 b(test)g(transmits)f(and)h(receiv)n(es)e
-(pac)n(k)n(ets)g(b)r(et)n(w)n(een)i(the)g(t)n(w)n(o)f(ethernet)h(p)r
-(orts)f(un)n(til)h(the)g(n)n(um)n(b)r(er)208 5089 y(of)j(seconds)f(sp)r
-(eci\034ed)i(ha)n(v)n(e)e(elapsed.)34 b(Eac)n(h)22 b(time)h(an)f
-(ethernet)h(p)r(ort)f(receiv)n(es)f(a)g(pac)n(k)n(et,)i(the)g(pro)r
-(cessor)d(compares)208 5189 y(it)30 b(to)f(the)h(transmitted)g(pac)n(k)
-n(et)f(in)h(order)e(to)i(detect)g(data)f(corruption,)g(then)h(sends)g
-(the)g(next)g(pac)n(k)n(et)e(from)i(this)p eop
-%%Page: 28 29
-28 28 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(28)208 333 y(p)r(ort.)36
-b(In)28 b(other)f(w)n(ords,)f(eac)n(h)h(p)r(ort)g(alternates)g(b)r(et)n
-(w)n(een)g(transmitting)g(and)h(receiving)e(a)h(pac)n(k)n(et.)208
-432 y(Note:)34 b(Remem)n(b)r(er)21 b(to)h(attac)n(h)f(a)h(crosso)n(v)n
-(er)c(cable)j(b)r(et)n(w)n(een)h(the)g(t)n(w)n(o)f(p)r(orts,)i(or)e
-(connect)g(b)r(oth)i(p)r(orts)e(to)h(an)f(un)n(used)208
-532 y(ethernet)27 b(switc)n(h)h(or)e(h)n(ub.)37 b(This)28
-b(test)g(will)f(not)h(execute)f(in)h(either)g(burn-in)f(or)g(p)r(o)n(w)
-n(er-up)f(mo)r(de.)0 698 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(Basic)27 b(test)h(only)-7 b(.)0 864 y Fi(T)f(est)32
-b(Options:)40 b Fh(-)208 964 y(Debug)23 b(lev)n(el:)34
-b(Setting)24 b(this)g(to)f(1)g(or)f(higher)h(will)g(displa)n(y)g(the)g
-(pac)n(k)n(et)g(rate)f(\(this)i(will)g(ha)n(v)n(e)e(little)i(corresp)r
-(ondence)208 1063 y(with)f(the)g(Sp)r(eed)h(option,)g(since)e(the)i
-(pro)r(cessor)d(tak)n(es)h(time)h(to)g(set)g(up)g(the)h(transmit)e(pac)
-n(k)n(ets)g(and)h(compare)f(them)208 1163 y(to)27 b(the)h(receiv)n(ed)e
-(pac)n(k)n(ets\).)36 b(V)-7 b(alues)27 b(higher)g(than)h(1)f(will)h
-(displa)n(y)f(additional)g(debugging)f(information.)208
-1262 y(Source)g(Ethernet)i(A/B:)g(Selects)f(the)h(ethernet)g(address)e
-(assigned)g(to)i(the)g(FEC)g(MA)n(C.)208 1362 y(Dest)g(Ethernet)g(A/B:)
-f(Selects)h(the)f(ethernet)h(address)e(assigned)h(to)g(the)h(SCC1)f(MA)
-n(C.)208 1462 y(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)27
+(ou're)f(doing.)0 2690 y Fd(3.9.3)112 b(T)-9 b(est)37
+b(description)0 2844 y Fi(T)-8 b(est:)42 b(Crosso)m(v)m(er)32
+b(T)-8 b(est)0 2997 y(T)g(est)32 b(Description:)40 b
+Fh(This)19 b(test)g(transmits)f(and)h(receiv)n(es)e(pac)n(k)n(ets)g(b)r
+(et)n(w)n(een)i(the)g(t)n(w)n(o)f(ethernet)h(p)r(orts)f(un)n(til)h(the)
+g(n)n(um)n(b)r(er)208 3096 y(of)j(seconds)f(sp)r(eci\034ed)i(ha)n(v)n
+(e)e(elapsed.)34 b(Eac)n(h)22 b(time)h(an)f(ethernet)h(p)r(ort)f
+(receiv)n(es)f(a)g(pac)n(k)n(et,)i(the)g(pro)r(cessor)d(compares)208
+3196 y(it)30 b(to)f(the)h(transmitted)g(pac)n(k)n(et)f(in)h(order)e(to)
+i(detect)g(data)f(corruption,)g(then)h(sends)g(the)g(next)g(pac)n(k)n
+(et)e(from)i(this)208 3296 y(p)r(ort.)36 b(In)28 b(other)f(w)n(ords,)f
+(eac)n(h)h(p)r(ort)g(alternates)g(b)r(et)n(w)n(een)g(transmitting)g
+(and)h(receiving)e(a)h(pac)n(k)n(et.)208 3395 y(Note:)34
+b(Remem)n(b)r(er)21 b(to)h(attac)n(h)f(a)h(crosso)n(v)n(er)c(cable)j(b)
+r(et)n(w)n(een)h(the)g(t)n(w)n(o)f(p)r(orts,)i(or)e(connect)g(b)r(oth)i
+(p)r(orts)e(to)h(an)f(un)n(used)208 3495 y(ethernet)27
+b(switc)n(h)h(or)e(h)n(ub.)37 b(This)28 b(test)g(will)f(not)h(execute)f
+(in)h(either)g(burn-in)f(or)g(p)r(o)n(w)n(er-up)f(mo)r(de.)0
+3661 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(test)h(only)-7 b(.)0 3827 y Fi(T)f(est)32 b(Options:)40
+b Fh(-)208 3927 y(Debug)23 b(lev)n(el:)34 b(Setting)24
+b(this)g(to)f(1)g(or)f(higher)h(will)g(displa)n(y)g(the)g(pac)n(k)n(et)
+g(rate)f(\(this)i(will)g(ha)n(v)n(e)e(little)i(corresp)r(ondence)208
+4026 y(with)f(the)g(Sp)r(eed)h(option,)g(since)e(the)i(pro)r(cessor)d
+(tak)n(es)h(time)h(to)g(set)g(up)g(the)h(transmit)e(pac)n(k)n(ets)g
+(and)h(compare)f(them)208 4126 y(to)27 b(the)h(receiv)n(ed)e(pac)n(k)n
+(ets\).)36 b(V)-7 b(alues)27 b(higher)g(than)h(1)f(will)h(displa)n(y)f
+(additional)g(debugging)f(information.)208 4226 y(Source)g(Ethernet)i
+(A/B:)g(Selects)f(the)h(ethernet)g(address)e(assigned)g(to)i(the)g(FEC)
+g(MA)n(C.)208 4325 y(Dest)g(Ethernet)g(A/B:)f(Selects)h(the)f(ethernet)
+h(address)e(assigned)h(to)g(the)h(SCC1)f(MA)n(C.)208
+4425 y(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)27
 b(where)g(the)h(FEC)g(transmit)g(bu\033ers)f(will)h(b)r(e)g(placed.)208
-1561 y(Rx)f(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(the)h(FEC)h
+4524 y(Rx)f(Base)g(A)n(ddress:)36 b(Determines)27 b(where)g(the)h(FEC)h
 (receiv)n(e)d(bu\033ers)h(will)h(b)r(e)g(placed.)208
-1661 y(P)n(ac)n(k)n(et)e(Length:)37 b(Determines)27 b(the)h(size)g(of)f
+4624 y(P)n(ac)n(k)n(et)e(Length:)37 b(Determines)27 b(the)h(size)g(of)f
 (eac)n(h)g(transmitted)h(pac)n(k)n(et)e(\(except)i(for)f(the)h(c)n(hec)
-n(ksum\).)208 1761 y(T)-7 b(est)27 b(Time:)37 b(Determines)28
+n(ksum\).)208 4724 y(T)-7 b(est)27 b(Time:)37 b(Determines)28
 b(ho)n(w)f(man)n(y)g(seconds)f(the)i(test)g(will)g(run.)208
-1860 y(2nd)f(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)28
+4823 y(2nd)f(T)-7 b(x)27 b(Base)g(A)n(ddress:)36 b(Determines)28
 b(where)f(the)h(SCC1)f(transmit)g(bu\033ers)h(will)f(b)r(e)h(placed.)
-208 1960 y(2nd)f(Rx)h(Base)e(A)n(ddress:)36 b(Determines)28
+208 4923 y(2nd)f(Rx)h(Base)e(A)n(ddress:)36 b(Determines)28
 b(where)f(the)h(SCC1)f(receiv)n(e)f(bu\033ers)i(will)f(b)r(e)h(placed.)
-0 2126 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-2226 y Fi(Link)34 b(not)g(detected:)41 b Fh(The)29 b(FEC)i(transceiv)n
+0 5089 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+5189 y Fi(Link)34 b(not)g(detected:)41 b Fh(The)29 b(FEC)i(transceiv)n
 (er)c(has)i(not)h(ac)n(hiev)n(ed)e(a)i(link)f(state.)43
-b(Usually)30 b(this)f(indicates)h(that)208 2325 y(there)g(is)g(a)g
-(connection)g(failure)h(b)r(et)n(w)n(een)f(the)h(FEC)g(and)g(SCC1)f(p)r
-(orts,)h(or)e(b)r(et)n(w)n(een)i(the)g(FEC)g(and)f(the)h(h)n(ub)g(or)
-208 2425 y(switc)n(h)c(it)h(is)f(connected)h(to.)208
-2524 y Fi(Ethernet)c(pac)m(k)m(et)i(not)e(transmitted)f(-)h(T)-8
+b(Usually)30 b(this)f(indicates)h(that)p eop
+%%Page: 32 33
+32 32 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(32)208 333 y(there)30
+b(is)g(a)g(connection)g(failure)h(b)r(et)n(w)n(een)f(the)h(FEC)g(and)g
+(SCC1)f(p)r(orts,)h(or)e(b)r(et)n(w)n(een)i(the)g(FEC)g(and)f(the)h(h)n
+(ub)g(or)208 432 y(switc)n(h)c(it)h(is)f(connected)h(to.)208
+532 y Fi(Ethernet)c(pac)m(k)m(et)i(not)e(transmitted)f(-)h(T)-8
 b(ransmit)24 b(ev)m(en)m(t)h(not)f(detected:)33 b Fh(The)21
-b(F)-7 b(ast)21 b(Ethernet)h(Con)n(troller)208 2624 y(nev)n(er)k(set)i
+b(F)-7 b(ast)21 b(Ethernet)h(Con)n(troller)208 632 y(nev)n(er)k(set)i
 (the)g(TXF)g(bit)g(in)g(the)g(ev)n(en)n(t)f(register,)f(i.e.)37
 b(the)28 b(pac)n(k)n(et)e(w)n(as)h(nev)n(er)f(transmitted.)208
-2724 y Fi(Ethernet)41 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h
-(Bu\033er)g(not)g(released:)52 b Fh(The)35 b(ev)n(en)n(t)h(register)e
-(indicates)h(that)h(a)208 2823 y(pac)n(k)n(et)26 b(w)n(as)g
-(transmitted,)i(but)g(the)g(ethernet)f(con)n(troller)f(didn't)i(clear)e
-(the)i(ready)e(bit)i(in)g(the)g(bu\033er)f(descriptor.)208
-2923 y(It's)d(p)r(ossible)g(the)h(FEC's)f(ev)n(en)n(t)g(bit)h(is)f
-(stuc)n(k)g(on,)h(or)e(the)i(bu\033er)g(descriptor)e(memory)g(is)h
-(fault)n(y)h(or)e(not)h(accessible)208 3023 y(to)j(one)g(of)h(the)g
-(con)n(trollers)d(\(the)j(descriptors)e(liv)n(e)h(in)h(the)g(MPC)g(860)
-f(dual)g(p)r(ort)g(RAM\).)208 3122 y Fi(Ethernet)37 b(pac)m(k)m(et)i
-(not)f(receiv)m(ed:)46 b Fh(One)33 b(ethernet)f(con)n(troller)f
-(transmitted)i(a)f(pac)n(k)n(et,)h(but)g(the)g(other)f(con-)208
-3222 y(troller)f(didn't)h(receiv)n(e)f(an)n(ything.)50
-b(It's)32 b(lik)n(ely)g(the)g(t)n(w)n(o)g(p)r(orts)f(are)g(not)i(comm)n
-(unicating)e(prop)r(erly)-7 b(.)49 b(Chec)n(k)32 b(the)208
-3321 y(crosso)n(v)n(er)24 b(cable)j(or)f(the)i(h)n(ub)g(or)f(switc)n(h)
-g(used)h(for)f(this)h(test.)208 3421 y Fi(P)m(ac)m(k)m(et)j(data)e
-(error:)36 b Fh(The)25 b(ethernet)g(p)r(ort)g(receiv)n(ed)e(a)i(pac)n
-(k)n(et,)f(but)i(it)f(didn't)h(matc)n(h)f(the)g(transmitted)g(pac)n(k)n
-(et.)208 3521 y(This)i(can)g(happ)r(en)h(if)g(an)n(y)f(of)g(the)h
-(transmit)g(and/or)e(receiv)n(e)g(bu\033ers)h(o)n(v)n(erlap.)0
-3795 y Fe(3.9)130 b(Green)45 b(Bo)l(x)f(DPRAM)0 3994
-y Fd(3.9.1)112 b(Submen)m(u)38 b(description)0 4147 y
-Fh(The)28 b(tests)f(in)h(this)g(men)n(u)g(c)n(hec)n(k)e(whether)i(the)g
-(daugh)n(terb)r(oard's)d(DPRAM)k(w)n(orks)d(prop)r(erly)-7
-b(.)0 4379 y Fd(3.9.2)112 b(Submen)m(u)38 b(options)0
-4532 y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29 b(lev)n(el)f(of)i
-(debugging)e(output.)42 b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39
-b(\()p Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)
-r(ose,)f(3)420 4632 y(=)f(massiv)n(e)f(screen)h(scroll\))0
-4798 y(DPRAM)i(base)e(address:)40 b(Selects)e(the)g(start)f(address)f
-(for)h(the)h(DPRAM)h(test.)67 b(Note)38 b(that)g(although)f(the)h
-(range)e(of)420 4898 y(addresses)31 b(in)i(the)h(DPRAM)g(can)f(b)r(e)g
-(sp)r(eci\034ed)g(at)g(an)n(y)f(lo)r(cation)g(b)r(et)n(w)n(een)h(the)h
-(DPRAM)g(start)e(address)420 4997 y(and)25 b(one)h(megab)n(yte)f(ab)r
+731 y Fi(Ethernet)41 b(pac)m(k)m(et)i(not)e(transmitted)f(-)h(Bu\033er)
+g(not)g(released:)52 b Fh(The)35 b(ev)n(en)n(t)h(register)e(indicates)h
+(that)h(a)208 831 y(pac)n(k)n(et)26 b(w)n(as)g(transmitted,)i(but)g
+(the)g(ethernet)f(con)n(troller)f(didn't)i(clear)e(the)i(ready)e(bit)i
+(in)g(the)g(bu\033er)f(descriptor.)208 930 y(It's)d(p)r(ossible)g(the)h
+(FEC's)f(ev)n(en)n(t)g(bit)h(is)f(stuc)n(k)g(on,)h(or)e(the)i(bu\033er)
+g(descriptor)e(memory)g(is)h(fault)n(y)h(or)e(not)h(accessible)208
+1030 y(to)j(one)g(of)h(the)g(con)n(trollers)d(\(the)j(descriptors)e
+(liv)n(e)h(in)h(the)g(MPC)g(860)f(dual)g(p)r(ort)g(RAM\).)208
+1130 y Fi(Ethernet)37 b(pac)m(k)m(et)i(not)f(receiv)m(ed:)46
+b Fh(One)33 b(ethernet)f(con)n(troller)f(transmitted)i(a)f(pac)n(k)n
+(et,)h(but)g(the)g(other)f(con-)208 1229 y(troller)f(didn't)h(receiv)n
+(e)f(an)n(ything.)50 b(It's)32 b(lik)n(ely)g(the)g(t)n(w)n(o)g(p)r
+(orts)f(are)g(not)i(comm)n(unicating)e(prop)r(erly)-7
+b(.)49 b(Chec)n(k)32 b(the)208 1329 y(crosso)n(v)n(er)24
+b(cable)j(or)f(the)i(h)n(ub)g(or)f(switc)n(h)g(used)h(for)f(this)h
+(test.)208 1429 y Fi(P)m(ac)m(k)m(et)j(data)e(error:)36
+b Fh(The)25 b(ethernet)g(p)r(ort)g(receiv)n(ed)e(a)i(pac)n(k)n(et,)f
+(but)i(it)f(didn't)h(matc)n(h)f(the)g(transmitted)g(pac)n(k)n(et.)208
+1528 y(This)i(can)g(happ)r(en)h(if)g(an)n(y)f(of)g(the)h(transmit)g
+(and/or)e(receiv)n(e)g(bu\033ers)h(o)n(v)n(erlap.)0 1799
+y Fe(3.10)130 b(Green)44 b(Bo)l(x)h(DPRAM)0 1998 y Fd(3.10.1)112
+b(Submen)m(u)38 b(description)0 2151 y Fh(The)28 b(tests)f(in)h(this)g
+(men)n(u)g(c)n(hec)n(k)e(whether)i(the)g(daugh)n(terb)r(oard's)d(DPRAM)
+k(w)n(orks)d(prop)r(erly)-7 b(.)0 2380 y Fd(3.10.2)112
+b(Submen)m(u)38 b(options)0 2533 y Fh(Debug)28 b(lev)n(el:)41
+b(Selects)29 b(lev)n(el)f(of)i(debugging)e(output.)42
+b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39 b(\()p
+Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)r(ose,)
+f(3)420 2632 y(=)f(massiv)n(e)f(screen)h(scroll\))0 2790
+y(DPRAM)i(base)e(address:)40 b(Selects)e(the)g(start)f(address)f(for)h
+(the)h(DPRAM)h(test.)67 b(Note)38 b(that)g(although)f(the)h(range)e(of)
+420 2890 y(addresses)31 b(in)i(the)h(DPRAM)g(can)f(b)r(e)g(sp)r
+(eci\034ed)g(at)g(an)n(y)f(lo)r(cation)g(b)r(et)n(w)n(een)h(the)h
+(DPRAM)g(start)e(address)420 2990 y(and)25 b(one)h(megab)n(yte)f(ab)r
 (o)n(v)n(e)g(the)h(DPRAM)i(start)d(address,)g(the)i(co)r(de)e(in)n
-(ternally)h(p)r(erforms)f(bank)h(selection)420 5097 y(to)j(access)f
+(ternally)h(p)r(erforms)f(bank)h(selection)420 3089 y(to)j(access)f
 (the)i(addresses)e(sp)r(eci\034ed.)43 b(That)30 b(is)f(wh)n(y)g(the)h
-(address)f(0xa0080000)c(is)k(v)-5 b(alid)30 b(for)f(the)h(DPRAM)p
-eop
-%%Page: 29 30
-29 29 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(29)420 333 y(test,)23
-b(ev)n(en)e(though)g(that)h(is)g(really)f(the)h(register)e(base)h
-(address)f(for)h(the)h(XILINX.)h(This)f(option)f(also)f(doubles)420
-432 y(as)27 b(the)g(source)g(bu\033er)h(address)e(for)h(the)h(DMA)g
-(test.)0 598 y(DPRAM)h(end)f(address:)40 b(Selects)20
-b(the)h(end)f(address)f(for)h(the)h(DPRAM)g(test.)35
+(address)f(0xa0080000)c(is)k(v)-5 b(alid)30 b(for)f(the)h(DPRAM)420
+3189 y(test,)23 b(ev)n(en)e(though)g(that)h(is)g(really)f(the)h
+(register)e(base)h(address)f(for)h(the)h(XILINX.)h(This)f(option)f
+(also)f(doubles)420 3288 y(as)27 b(the)g(source)g(bu\033er)h(address)e
+(for)h(the)h(DMA)g(test.)0 3446 y(DPRAM)h(end)f(address:)40
+b(Selects)20 b(the)h(end)f(address)f(for)h(the)h(DPRAM)g(test.)35
 b(See)20 b(the)h(note)f(for)g(\020DPRAM)h(base)f(address\021,)420
-698 y(whic)n(h)34 b(describ)r(es)f(ho)n(w)g(the)i(co)r(de)e(pretends)h
+3546 y(whic)n(h)34 b(describ)r(es)f(ho)n(w)g(the)i(co)r(de)e(pretends)h
 (to)g(use)g(a)g(one)f(megab)n(yte)g(address)g(range)f(ev)n(en)i(though)
-g(the)420 798 y(DPRAM)29 b(is)e(sub)r(divided)h(in)n(to)f(64k)g(banks.)
-0 964 y(DPRAM)i(test)f(size:)41 b(This)24 b(option)g(has)f(no)h
-(e\033ect)h(for)e(these)i(tests;)g(the)f(DPRAM)i(is)e(only)g(longw)n
-(ord-addressable.)31 b(This)420 1063 y(option)c(exists)g(only)g(to)h(k)
+g(the)420 3645 y(DPRAM)29 b(is)e(sub)r(divided)h(in)n(to)f(64k)g
+(banks.)0 3803 y(DPRAM)i(test)f(size:)41 b(This)24 b(option)g(has)f(no)
+h(e\033ect)h(for)e(these)i(tests;)g(the)f(DPRAM)i(is)e(only)g(longw)n
+(ord-addressable.)31 b(This)420 3903 y(option)c(exists)g(only)g(to)h(k)
 n(eep)f(the)h(option)f(men)n(u)h(similar)e(to)i(other)f(memory)f(test)i
-(option)f(men)n(us.)0 1229 y(Random)g(data:)41 b(Flags)20
+(option)f(men)n(us.)0 4061 y(Random)g(data:)41 b(Flags)20
 b(whic)n(h)g(data)g(t)n(yp)r(e)g(should)h(b)r(e)f(used)h(in)f(the)h
 (Memory)f(P)n(atterns)g(test.)34 b(T)-7 b(w)n(o)20 b(options)g(are)f(a)
-n(v)-5 b(ailable:)420 1329 y(\(0)27 b(=)g(\034xed)h(data)f(\(see)g(T)-7
+n(v)-5 b(ailable:)420 4160 y(\(0)27 b(=)g(\034xed)h(data)f(\(see)g(T)-7
 b(est)28 b(data)f(option\),)h Fi(other)j(=)h(pseudo-random)e(data)p
-Fh(\).)0 1495 y(T)-7 b(est)28 b(data:)52 b(If)26 b(the)g(Random)g(data)
+Fh(\).)0 4318 y(T)-7 b(est)28 b(data:)52 b(If)26 b(the)g(Random)g(data)
 f(option)h(is)g(set)f(to)h(\034xed)g(data,)g(this)g(is)g(the)g(v)-5
 b(alue)26 b(to)g(place)f(in)n(to)h(eac)n(h)f(address)g(in)h(the)420
-1595 y(Memory)h(P)n(atterns)h(test.)40 b(This)28 b(option)g(is)h(also)e
+4418 y(Memory)h(P)n(atterns)h(test.)40 b(This)28 b(option)g(is)h(also)e
 (used)h(as)g(the)h(searc)n(h)e(pattern)h(for)g(the)h(Find)f(P)n(attern)
-h(test,)420 1694 y(and)e(as)g(the)h(w)n(ait)f(state)g(v)-5
+h(test,)420 4517 y(and)e(as)g(the)h(w)n(ait)f(state)g(v)-5
 b(alue)28 b(for)f(the)h(Set)g(CS5)f(W)-7 b(ait)28 b(States)f(test.)0
-1860 y(DMA)h(bu\033er)g(address:)40 b(Selects)28 b(the)g(destination)f
-(address)f(for)h(the)h(DMA)h(transfer.)0 2026 y(DMA)f(size:)42
+4675 y(DMA)h(bu\033er)g(address:)40 b(Selects)28 b(the)g(destination)f
+(address)f(for)h(the)h(DMA)h(transfer.)0 4833 y(DMA)f(size:)42
 b(Selects)d(the)g(n)n(um)n(b)r(er)g(of)g(b)n(ytes)g(to)g(transfer)f
 (from)g(the)i(source)e(to)h(the)g(destination)g(bu\033er.)72
-b(The)39 b(test)420 2126 y(automatically)26 b(limits)i(this)g(v)-5
+b(The)39 b(test)420 4933 y(automatically)26 b(limits)i(this)g(v)-5
 b(alue)27 b(to)h(the)g(selected)f(bank's)g Fi(64k)h Fh(b)r(oundary)e
-(\(source)h(or)g(destination\).)0 2292 y(DMA)h(in)n(terrupt)g(test:)41
+(\(source)h(or)g(destination\).)0 5090 y(DMA)h(in)n(terrupt)g(test:)41
 b(If)28 b(this)g(option)g(is)f(set,)h(the)g(DMA)h(engine)e(will)h(b)r
 (e)g(allo)n(w)n(ed)e(to)i(in)n(terrupt)f(the)h(CPU)h(during)e(the)420
-2392 y(DMA)h(test.)0 2558 y(Enable)g(icac)n(he:)40 b(If)g(this)f
-(option)f(is)h(set,)j(enable)c(the)h(instruction)g(cac)n(he)f(b)r
-(efore)g(running)h(the)g(test,)j(and)c(disable)h(it)420
-2657 y(afterw)n(ards)25 b(\(default\).)39 b(If)28 b(not)f(set,)h(don't)
-g(c)n(hange)f(the)h(instruction)f(cac)n(he)g(state.)37
-b(This)27 b(option)h(is)f(ignored)420 2757 y(if)h(instruction)f(cac)n
-(he)g(supp)r(ort)g(has)g(b)r(een)h(globally)e(disabled)i(when)f(the)h
-(diagnostics)e(w)n(ere)h(compiled.)0 2923 y(Dump)h(mem)g(start:)41
-b(Indicates)28 b(where)f(the)i(Displa)n(y)e(Memory)g(custom)h(test)g(b)
-r(egins)g(its)g(memory)f(dump.)39 b(If)28 b(this)g(v)-5
-b(alue)420 3023 y(is)23 b(greater)f(than)i(Dump)h(mem)f(end,)g(the)g(t)
-n(w)n(o)f(v)-5 b(alues)24 b(will)g(b)r(e)g(sw)n(app)r(ed)f(when)h(the)g
-(test)g(is)g(run.)35 b(If)24 b(the)g(v)-5 b(alue)420
-3122 y(is)29 b(not)g(longw)n(ord-aligned,)e(the)j(address)e(will)h(b)r
-(e)h Fa(de)l(cr)l(emente)l(d)38 b Fh(to)29 b(the)h(nearest)f(longw)n
-(ord)e(address)h(when)420 3222 y(the)g(test)f(is)h(run.)0
-3388 y(Dump)g(mem)g(end:)42 b(Indicates)29 b(where)g(the)h(Displa)n(y)f
-(Memory)g(custom)g(test)h(ends)f(its)h(memory)f(dump.)43
-b(If)30 b(this)g(v)-5 b(alue)29 b(is)420 3487 y(less)f(than)g(Dump)h
-(mem)g(start,)f(the)h(t)n(w)n(o)e(v)-5 b(alues)28 b(will)h(b)r(e)f(sw)n
-(app)r(ed)g(when)h(the)g(test)f(is)g(run.)39 b(If)29
-b(the)g(v)-5 b(alue)28 b(is)420 3587 y(not)i(longw)n(ord-aligned,)f
-(the)h(address)g(will)h(b)r(e)g Fa(incr)l(emente)l(d)39
-b Fh(to)30 b(the)h(nearest)f(aligned)g(address)f(when)i(the)420
-3687 y(test)c(is)h(run.)0 3853 y(Dump)g(mem)g(size:)41
+5190 y(DMA)h(test.)p eop
+%%Page: 33 34
+33 33 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(33)0 333 y(Enable)28
+b(icac)n(he:)40 b(If)g(this)f(option)f(is)h(set,)j(enable)c(the)h
+(instruction)g(cac)n(he)f(b)r(efore)g(running)h(the)g(test,)j(and)c
+(disable)h(it)420 432 y(afterw)n(ards)25 b(\(default\).)39
+b(If)28 b(not)f(set,)h(don't)g(c)n(hange)f(the)h(instruction)f(cac)n
+(he)g(state.)37 b(This)27 b(option)h(is)f(ignored)420
+532 y(if)h(instruction)f(cac)n(he)g(supp)r(ort)g(has)g(b)r(een)h
+(globally)e(disabled)i(when)f(the)h(diagnostics)e(w)n(ere)h(compiled.)0
+694 y(Dump)h(mem)g(start:)41 b(Indicates)28 b(where)f(the)i(Displa)n(y)
+e(Memory)g(custom)h(test)g(b)r(egins)g(its)g(memory)f(dump.)39
+b(If)28 b(this)g(v)-5 b(alue)420 793 y(is)23 b(greater)f(than)i(Dump)h
+(mem)f(end,)g(the)g(t)n(w)n(o)f(v)-5 b(alues)24 b(will)g(b)r(e)g(sw)n
+(app)r(ed)f(when)h(the)g(test)g(is)g(run.)35 b(If)24
+b(the)g(v)-5 b(alue)420 893 y(is)29 b(not)g(longw)n(ord-aligned,)e(the)
+j(address)e(will)h(b)r(e)h Fa(de)l(cr)l(emente)l(d)38
+b Fh(to)29 b(the)h(nearest)f(longw)n(ord)e(address)h(when)420
+992 y(the)g(test)f(is)h(run.)0 1154 y(Dump)g(mem)g(end:)42
+b(Indicates)29 b(where)g(the)h(Displa)n(y)f(Memory)g(custom)g(test)h
+(ends)f(its)h(memory)f(dump.)43 b(If)30 b(this)g(v)-5
+b(alue)29 b(is)420 1254 y(less)f(than)g(Dump)h(mem)g(start,)f(the)h(t)n
+(w)n(o)e(v)-5 b(alues)28 b(will)h(b)r(e)f(sw)n(app)r(ed)g(when)h(the)g
+(test)f(is)g(run.)39 b(If)29 b(the)g(v)-5 b(alue)28 b(is)420
+1353 y(not)i(longw)n(ord-aligned,)f(the)h(address)g(will)h(b)r(e)g
+Fa(incr)l(emente)l(d)39 b Fh(to)30 b(the)h(nearest)f(aligned)g(address)
+f(when)i(the)420 1453 y(test)c(is)h(run.)0 1615 y(Dump)g(mem)g(size:)41
 b(Indicates)25 b(the)f(memory)g(size)g(in)h(b)n(ytes)f(to)g(use)g(when)
 h(dumping)g(memory)e(via)h(the)h(Displa)n(y)f(Memory)420
-3952 y(custom)j(test.)37 b(The)28 b(only)f(supp)r(orted)g(size)g(is:)37
-b Fi(4)32 b(=)g(longw)m(ord)p Fh(.)0 4185 y Fd(3.9.3)112
-b(T)-9 b(est)37 b(descriptions)0 4338 y Fi(T)-8 b(est:)42
-b(Bank)32 b(Aliasing)0 4491 y(T)-8 b(est)32 b(Description:)40
+1714 y(custom)j(test.)37 b(The)28 b(only)f(supp)r(orted)g(size)g(is:)37
+b Fi(4)32 b(=)g(longw)m(ord)p Fh(.)0 1945 y Fd(3.10.3)112
+b(T)-9 b(est)37 b(descriptions)0 2098 y Fi(T)-8 b(est:)42
+b(Bank)32 b(Aliasing)0 2251 y(T)-8 b(est)32 b(Description:)40
 b Fh(This)34 b(test)g(ensures)e(that)i(writes)f(to)h(eac)n(h)f(DPRAM)i
 (bank)e(do)g(not)h(alias)f(to)g(an)n(y)g(of)h(the)g(other)208
-4591 y(banks.)0 4757 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(All)28 b(test)g(mo)r(des.)0 4923 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 5023 y(None)27 b(applicable.)p
-eop
-%%Page: 30 31
-30 30 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(30)0 333 y Fi(T)-8 b(est)32
-b(F)-8 b(ailures:)40 b Fh(-)208 432 y Fi(F)-8 b(ailed)31
-b(to)i(write)f(bank:)39 b Fh(The)28 b(diagnostics)f(wrote)g(the)i
-(\034rst)f(address)f(in)h(the)h(bank)f(displa)n(y)n(ed,)f(but)i(read)e
-(bac)n(k)208 532 y(a)g(di\033eren)n(t)g(v)-5 b(alue.)208
-632 y Fi(Bank)43 b(A)h(con\035icts)f(with)g(bank)g(B:)37
-b Fh(The)h(diagnostics)e(wrote)h(to)g(the)h(\034rst)f(address)f(in)i
-(one)f(bank,)i(whic)n(h)208 731 y(c)n(hanged)26 b(the)i(con)n(ten)n(ts)
-f(of)g(a)h(di\033eren)n(t)f(bank.)0 979 y Fi(T)-8 b(est:)42
-b(Own)31 b(A)m(ddress)0 1132 y(T)-8 b(est)32 b(Description:)40
-b Fh(This)20 b(test)g(writes)g(eac)n(h)f(DPRAM)j(address)d(v)-5
-b(alue)19 b(to)h(ev)n(ery)f(DPRAM)j(address)c(\(i.e.)35
-b(eac)n(h)19 b(address)208 1232 y(con)n(tains)26 b(its)h(\020o)n(wn)f
-(address\021)33 b(as)26 b(data\).)37 b(Ev)n(ery)26 b(address)g(is)h
-(tested)h(t)n(wice:)36 b(once)27 b(immediately)g(after)g(writing)g(the)
-208 1331 y(v)-5 b(alue,)29 b(and)g(again)f(after)h(all)g(addresses)e
-(are)h(written)i(in)f(order)f(to)h(detect)h(memory)e(aliasing)g
-(problems.)41 b(See)29 b(the)208 1431 y(note)34 b(ab)r(o)n(v)n(e)f(in)i
-(3.9.2)e(under)h(\020DPRAM)h(base)f(address\021)40 b(for)34
-b(an)g(explanation)f(ab)r(out)i(ho)n(w)e(these)i(tests)f(handle)208
-1531 y(addresses.)0 1684 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(All)28 b(test)g(mo)r(des.)0 1838 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 1937 y(Memory)26 b(base)h(address:)36
-b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
-2037 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
-(for)h(the)h(test.)208 2137 y(Enable)f(icac)n(he:)36
-b(Selects)28 b(whether)f(to)h(enable)f(the)h(instruction)f(cac)n(he)g
-(during)g(the)h(test.)0 2290 y Fi(T)-8 b(est)32 b(F)-8
-b(ailures:)40 b Fh(-)208 2390 y Fi(While)30 b(writing:)35
-b Fh(Indicates)28 b(that)f(the)h(v)-5 b(alue)28 b(w)n(as)e(not)i
-(written)g(correctly)e(to)h(the)h(indicated)g(address.)208
-2489 y Fi(While)i(reading:)36 b Fh(Indicates)27 b(that)h(the)g(v)-5
-b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h(w)n(as)f(written.)0
-2737 y Fi(T)-8 b(est:)42 b(Memory)30 b(P)m(atterns)0
-2890 y(T)-8 b(est)32 b(Description:)40 b Fh(This)f(test)h(writes)e
-(either)h(a)g(pseudo-random)e(or)i(\034xed)g(data)f(v)-5
-b(alue)39 b(\(see)g(the)h(Random)f(data)208 2990 y(option\))28
-b(to)g(eac)n(h)g(address.)38 b(Ev)n(ery)28 b(address)f(is)i(tested)f(t)
-n(wice:)39 b(once)28 b(immediately)h(after)f(writing)g(the)h(v)-5
-b(alue,)28 b(and)208 3090 y(again)j(after)i(all)f(addresses)f(are)h
-(written)h(in)g(order)e(to)i(detect)g(aliasing)f(problems.)51
-b(See)33 b(the)g(note)g(ab)r(o)n(v)n(e)e(under)208 3189
-y(\020DPRAM)d(base)f(address\021)33 b(in)28 b(3.9.2)e(for)h(an)g
-(explanation)g(ab)r(out)g(ho)n(w)g(these)h(tests)g(handle)f(addresses.)
-0 3343 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
-b(and)g(burn-in)h(mo)r(des.)0 3496 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 3596 y(Memory)26 b(base)h(address:)36
+2351 y(banks.)0 2513 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
+b Fh(All)28 b(test)g(mo)r(des.)0 2674 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 2774 y(None)27 b(applicable.)0
+2936 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+3035 y Fi(F)-8 b(ailed)31 b(to)i(write)f(bank:)39 b Fh(The)28
+b(diagnostics)f(wrote)g(the)i(\034rst)f(address)f(in)h(the)h(bank)f
+(displa)n(y)n(ed,)f(but)i(read)e(bac)n(k)208 3135 y(a)g(di\033eren)n(t)
+g(v)-5 b(alue.)208 3234 y Fi(Bank)43 b(A)h(con\035icts)f(with)g(bank)g
+(B:)37 b Fh(The)h(diagnostics)e(wrote)h(to)g(the)h(\034rst)f(address)f
+(in)i(one)f(bank,)i(whic)n(h)208 3334 y(c)n(hanged)26
+b(the)i(con)n(ten)n(ts)f(of)g(a)h(di\033eren)n(t)f(bank.)0
+3593 y Fi(T)-8 b(est:)42 b(Own)31 b(A)m(ddress)0 3747
+y(T)-8 b(est)32 b(Description:)40 b Fh(This)20 b(test)g(writes)g(eac)n
+(h)f(DPRAM)j(address)d(v)-5 b(alue)19 b(to)h(ev)n(ery)f(DPRAM)j
+(address)c(\(i.e.)35 b(eac)n(h)19 b(address)208 3846
+y(con)n(tains)26 b(its)h(\020o)n(wn)f(address\021)33
+b(as)26 b(data\).)37 b(Ev)n(ery)26 b(address)g(is)h(tested)h(t)n(wice:)
+36 b(once)27 b(immediately)g(after)g(writing)g(the)208
+3946 y(v)-5 b(alue,)29 b(and)g(again)f(after)h(all)g(addresses)e(are)h
+(written)i(in)f(order)f(to)h(detect)h(memory)e(aliasing)g(problems.)41
+b(See)29 b(the)208 4046 y(note)i(ab)r(o)n(v)n(e)f(in)i(3.10.2)e(under)i
+(\020DPRAM)g(base)f(address\021)37 b(for)31 b(an)h(explanation)e(ab)r
+(out)i(ho)n(w)f(these)h(tests)f(handle)208 4145 y(addresses.)0
+4307 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0
+4469 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 4568
+y(Memory)26 b(base)h(address:)36 b(Selects)27 b(the)h(start)f(address)f
+(for)h(the)h(test.)208 4668 y(Memory)e(end)i(address:)36
+b(Selects)27 b(the)h(end)g(address)e(for)h(the)h(test.)208
+4767 y(Enable)f(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
+(the)h(instruction)f(cac)n(he)g(during)g(the)h(test.)0
+4929 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+5029 y Fi(While)30 b(writing:)35 b Fh(Indicates)28 b(that)f(the)h(v)-5
+b(alue)28 b(w)n(as)e(not)i(written)g(correctly)e(to)h(the)h(indicated)g
+(address.)208 5128 y Fi(While)i(reading:)36 b Fh(Indicates)27
+b(that)h(the)g(v)-5 b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h
+(w)n(as)f(written.)p eop
+%%Page: 34 35
+34 34 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(34)0 333 y Fi(T)-8 b(est:)42
+b(Memory)30 b(P)m(atterns)0 486 y(T)-8 b(est)32 b(Description:)40
+b Fh(This)f(test)h(writes)e(either)h(a)g(pseudo-random)e(or)i(\034xed)g
+(data)f(v)-5 b(alue)39 b(\(see)g(the)h(Random)f(data)208
+586 y(option\))28 b(to)g(eac)n(h)g(address.)38 b(Ev)n(ery)28
+b(address)f(is)i(tested)f(t)n(wice:)39 b(once)28 b(immediately)h(after)
+f(writing)g(the)h(v)-5 b(alue,)28 b(and)208 685 y(again)j(after)i(all)f
+(addresses)f(are)h(written)h(in)g(order)e(to)i(detect)g(aliasing)f
+(problems.)51 b(See)33 b(the)g(note)g(ab)r(o)n(v)n(e)e(under)208
+785 y(\020DPRAM)d(base)f(address\021)33 b(in)28 b(3.10.2)e(for)h(an)g
+(explanation)g(ab)r(out)g(ho)n(w)g(these)g(tests)h(handle)g(addresses.)
+0 951 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)0 1117 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 1216 y(Memory)26 b(base)h(address:)36
 b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
-3696 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
-(for)h(the)h(test.)208 3795 y(Random)f(data:)36 b(Selects)28
+1316 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
+(for)h(the)h(test.)208 1416 y(Random)f(data:)36 b(Selects)28
 b(whether)f(the)h(test)g(should)f(write)g(pseudo-random)f(or)h(\034xed)
-g(data.)208 3895 y(T)-7 b(est)27 b(data:)36 b(Selects)28
+g(data.)208 1515 y(T)-7 b(est)27 b(data:)36 b(Selects)28
 b(the)g(v)-5 b(alue)27 b(to)h(write)f(to)h(eac)n(h)e(lo)r(cation)h
 (\(if)i(Random)e(data)g(has)g(b)r(een)h(set)f(appropriately\).)208
-3995 y(Enable)g(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
+1615 y(Enable)g(icac)n(he:)36 b(Selects)28 b(whether)f(to)h(enable)f
 (the)h(instruction)f(cac)n(he)g(during)g(the)h(test.)0
-4148 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-4248 y Fi(While)30 b(writing:)35 b Fh(Indicates)28 b(that)f(the)h(v)-5
+1781 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+1881 y Fi(While)30 b(writing:)35 b Fh(Indicates)28 b(that)f(the)h(v)-5
 b(alue)28 b(w)n(as)e(not)i(written)g(correctly)e(to)h(the)h(indicated)g
-(address.)208 4347 y Fi(While)i(reading:)36 b Fh(Indicates)27
+(address.)208 1980 y Fi(While)i(reading:)36 b Fh(Indicates)27
 b(that)h(the)g(v)-5 b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h
-(w)n(as)f(written.)0 4538 y Fi(T)-8 b(est:)41 b(Mo)m(ving)31
-b(In)m(v)m(ersions)0 4692 y(T)-8 b(est)32 b(Description:)40
+(w)n(as)f(written.)0 2196 y Fi(T)-8 b(est:)41 b(Mo)m(ving)31
+b(In)m(v)m(ersions)0 2362 y(T)-8 b(est)32 b(Description:)40
 b Fh(This)35 b(test)g(\034rst)g(clears)e(the)j(memory)e(area,)h(then)g
 (starting)f(at)h(the)g(\034rst)g(address)f(ensures)g(the)208
-4791 y(address)23 b(con)n(tains)g(zero)r(es,)h(then)h(sets)f(ev)n(ery)f
+2462 y(address)23 b(con)n(tains)g(zero)r(es,)h(then)h(sets)f(ev)n(ery)f
 (bit)i(in)g(the)g(address.)35 b(Once)24 b(the)g(last)g(address)g(has)g
-(b)r(een)g(written,)i(the)208 4891 y(test)e(starts)e(again)h(at)h(the)g
+(b)r(een)g(written,)i(the)208 2561 y(test)e(starts)e(again)h(at)h(the)g
 (last)f(address,)g(but)i(this)f(time)g(mak)n(es)e(sure)i(ev)n(ery)e
 (bit)i(is)g(set,)g(then)h(clears)d(all)h(bits)h(b)r(efore)208
-4991 y(mo)n(ving)30 b(to)h(the)h(previous)e(address.)47
+2661 y(mo)n(ving)30 b(to)h(the)h(previous)e(address.)47
 b(The)32 b(goal)e(of)h(this)h(test)g(is)f(to)h(ensure)e(that)i(setting)
-f(or)g(clearing)f(bits)i(in)f(an)208 5090 y(address)22
+f(or)g(clearing)f(bits)i(in)f(an)208 2761 y(address)22
 b(w)n(on't)i(ha)n(v)n(e)e(an)n(y)h(e\033ect)i(on)e(adjacen)n(t)h
 (addresses.)34 b(See)23 b(the)i(note)e(ab)r(o)n(v)n(e)g(under)h
-(\020DPRAM)h(base)e(address\021)208 5190 y(in)k(3.9.2)g(for)g(an)g
-(explanation)g(ab)r(out)g(ho)n(w)g(these)h(tests)f(handle)h(addresses.)
-p eop
-%%Page: 31 32
-31 31 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(31)0 333 y Fi(T)-8 b(est)32
-b(Mo)s(des:)39 b Fh(Basic)27 b(and)g(burn-in)h(mo)r(des.)0
-499 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 598 y(Memory)26
-b(base)h(address:)36 b(Selects)27 b(the)h(start)f(address)f(for)h(the)h
-(test.)208 698 y(Memory)e(end)i(address:)36 b(Selects)27
-b(the)h(end)g(address)e(for)h(the)h(test.)208 798 y(Enable)f(icac)n
-(he:)36 b(Selects)28 b(whether)f(to)h(enable)f(the)h(instruction)f(cac)
-n(he)g(during)g(the)h(test.)0 964 y Fi(T)-8 b(est)32
-b(F)-8 b(ailures:)40 b Fh(-)208 1063 y Fi(While)30 b(writing:)35
+(\020DPRAM)h(base)e(address\021)208 2860 y(in)k(3.10.2)f(for)h(an)g
+(explanation)g(ab)r(out)h(ho)n(w)e(these)i(tests)g(handle)f(addresses.)
+0 3026 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)0 3192 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 3292 y(Memory)26 b(base)h(address:)36
+b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
+3392 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
+(for)h(the)h(test.)208 3491 y(Enable)f(icac)n(he:)36
+b(Selects)28 b(whether)f(to)h(enable)f(the)h(instruction)f(cac)n(he)g
+(during)g(the)h(test.)0 3657 y Fi(T)-8 b(est)32 b(F)-8
+b(ailures:)40 b Fh(-)208 3757 y Fi(While)30 b(writing:)35
 b Fh(Indicates)28 b(that)f(the)h(v)-5 b(alue)28 b(w)n(as)e(not)i
 (written)g(correctly)e(to)h(the)h(indicated)g(address.)208
-1163 y Fi(While)i(reading:)36 b Fh(Indicates)27 b(that)h(the)g(v)-5
+3857 y Fi(While)i(reading:)36 b Fh(Indicates)27 b(that)h(the)g(v)-5
 b(alue)27 b(c)n(hanged)g(someho)n(w)f(after)h(it)h(w)n(as)f(written.)0
-1428 y Fi(T)-8 b(est:)42 b(DMA)32 b(T)-8 b(est)0 1582
+4122 y Fi(T)-8 b(est:)42 b(DMA)32 b(T)-8 b(est)0 4275
 y(T)g(est)32 b(Description:)40 b Fh(This)33 b(test)g(p)r(erforms)e(a)i
 (DMA)g(transfer)f(from)g(a)g(DPRAM)i(bank)f(\(on)f(the)h(daugh)n(terb)r
-(oard\))e(to)208 1681 y(the)i(SDRAM)g(on)f(the)h(main)g(b)r(oard,)g
+(oard\))e(to)208 4375 y(the)i(SDRAM)g(on)f(the)h(main)g(b)r(oard,)g
 (then)g(compares)e(the)i(source)e(bu\033er)i(to)f(the)h(destination)g
-(bu\033er)f(to)h(v)n(erify)208 1781 y(that)25 b(the)h(DMA)g(engine)f
+(bu\033er)f(to)h(v)n(erify)208 4475 y(that)25 b(the)h(DMA)g(engine)f
 (transferred)f(the)h(data)g(correctly)-7 b(.)35 b(Note)25
 b(that)g(only)g(a)g(single)g(bank)g(can)g(b)r(e)g(the)h(source)e(of)208
-1881 y(a)30 b(DMA)h(transfer,)f(since)g(the)h(DMA)g(engine)f(cannot)g
+4574 y(a)30 b(DMA)h(transfer,)f(since)g(the)h(DMA)g(engine)f(cannot)g
 (select)g(another)g(bank)g(within)h(a)f(bu\033er)h(transfer.)44
-b(F)-7 b(or)30 b(the)208 1980 y(same)c(reason,)g(data)h(cannot)g(b)r(e)
+b(F)-7 b(or)30 b(the)208 4674 y(same)c(reason,)g(data)h(cannot)g(b)r(e)
 h(DMA'd)g(from)f(one)g(DPRAM)i(bank)e(to)g(another)f(directly)-7
-b(.)37 b(The)27 b(options)g(can)g(b)r(e)208 2080 y(altered)22
+b(.)37 b(The)27 b(options)g(can)g(b)r(e)208 4774 y(altered)22
 b(to)h(DMA)h(data)f(from)g(SDRAM)h(to)f(DPRAM)i(\(the)f(opp)r(osite)f
 (direction\),)h(if)g(desired.)34 b(See)24 b(the)f(note)g(ab)r(o)n(v)n
-(e)208 2179 y(under)k(\020DPRAM)i(base)e(address\021)32
-b(in)c(3.9.2)e(for)i(an)f(explanation)f(ab)r(out)i(ho)n(w)f(these)g
-(tests)h(handle)f(addresses.)0 2345 y Fi(T)-8 b(est)32
-b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0 2512
-y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 2611 y(Memory)26
-b(base)h(address:)36 b(Selects)27 b(the)h(source)e(bu\033er)i(address.)
-208 2711 y(DMA)g(bu\033er)g(address:)35 b(Selects)28
-b(the)g(destination)f(bu\033er)h(address.)208 2810 y(DMA)g(size:)36
-b(Sets)28 b(the)g(DMA)h(transfer)d(size)h(in)h(b)n(ytes.)208
-2910 y(DMA)g(in)n(terrupt)f(test:)37 b(If)28 b(set,)g(the)g(DMA)g
-(engine)g(in)n(terrupts)e(the)i(CPU)h(when)f(the)f(transfer)g(is)g
-(complete.)208 3010 y(Enable)i(icac)n(he:)38 b(Selects)29
-b(whether)f(to)h(enable)f(the)i(instruction)e(cac)n(he)g(while)h
-(comparing)e(the)i(source)f(and)g(desti-)208 3109 y(nation)f
-(bu\033ers.)0 3275 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
-b Fh(-)208 3375 y Fi(DMA)k(transfer)h(incomplete:)55
-b Fh(The)39 b(DMA)g(bu\033er)f(descriptor)g(w)n(as)f(nev)n(er)g(up)r
-(dated)i(b)n(y)f(the)h(CPM.)g(This)208 3475 y(usually)27
-b(indicates)g(that)h(one)f(\(or)g(b)r(oth\))h(of)g(the)g(source)e(or)h
-(destination)g(addresses)f(is)h(in)n(v)-5 b(alid.)208
-3574 y Fi(Memory)36 b(mismatc)m(h:)44 b Fh(The)32 b(DMA)i(transfer)e
-(completed,)i(but)f(the)g(source)e(and)i(destination)f(bu\033ers)h(do)f
-(not)208 3674 y(matc)n(h.)k(This)27 b(can)f(happ)r(en)h(if)h(the)f
-(destination)g(bu\033er)g(is)g(not)g(in)g(a)f(writeable)h(memory)f
-(device,)h(or)f(if)h(the)g(source)208 3773 y(bu\033er)g(is)h(not)f(in)h
-(a)f(device)h(at)f(all.)0 4039 y Fi(T)-8 b(est:)42 b(Righ)m(t)31
-b(P)m(ort)i(T)-8 b(est)0 4192 y(T)g(est)32 b(Description:)40
-b Fh(This)d(test)g(p)r(erforms)f(\020o)n(wn)g(address\021)42
-b(writes)37 b(to)f(the)i(DPRAM)g(via)e(the)h(FPGA's)h(righ)n(t)e(p)r
-(ort)208 4292 y(in)n(terface,)j(then)f(reads)f(them)h(bac)n(k)f(t)n
-(wice)g(-)g(once)h(through)e(the)i(righ)n(t)f(p)r(ort,)j(immediately)e
-(after)f(writing)g(an)208 4392 y(address;)22 b(and)f(again)e(through)i
-(the)g(left)h(p)r(ort)f(\(the)h(pro)r(cessor)d(in)n(terface\),)j
-(immediately)f(after)g(writing)f(an)h(address.)208 4491
-y(The)j(address)e(range)h(for)h(this)g(test)g(is)g(ev)n(en)g(more)f(un)
-n(usual)h(than)g(for)f(the)i(other)e(\(left)i(p)r(ort\))f(tests.)36
-b(The)24 b(righ)n(t)f(p)r(ort)208 4591 y(address)k(base)g(is)i
-(actually)f(at)g(0xC0000)e(ab)r(o)n(v)n(e)h(the)i(DPRAM)g(base)f
-(address,)g(but)h(the)g(test)f(in)n(ternally)g(con)n(v)n(erts)208
-4690 y(the)i(DPRAM)i(base)e(address)g(giv)n(en)f(in)i(the)g(options)f
-(from)g(a)g(left)h(p)r(ort)g(address)e(to)h(a)g(righ)n(t)g(p)r(ort)h
-(address.)44 b(The)208 4790 y(righ)n(t)37 b(p)r(ort)h(address)e(range)h
-(is)h(split)g(in)n(to)g(4)g(sections,)i(but)f(the)f(test)g
-(automatically)f(selects)h(eac)n(h)f(section)h(as)208
-4890 y(needed.)f(This)27 b(fact)h(b)r(ecomes)f(imp)r(ortan)n(t)g(in)h
-(the)g(\020Displa)n(y)f(RP)h(Memory\021)33 b(test)28
-b(describ)r(ed)f(b)r(elo)n(w.)0 5056 y Fi(T)-8 b(est)32
+(e)208 4873 y(under)k(\020DPRAM)i(base)e(address\021)32
+b(in)c(3.10.2)e(for)h(an)g(explanation)g(ab)r(out)g(ho)n(w)g(these)h
+(tests)f(handle)h(addresses.)0 5039 y Fi(T)-8 b(est)32
 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)p eop
-%%Page: 32 33
-32 32 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(32)0 333 y Fi(T)-8 b(est)32
+%%Page: 35 36
+35 35 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(35)0 333 y Fi(T)-8 b(est)32
 b(Options:)40 b Fh(-)208 432 y(Memory)26 b(base)h(address:)36
-b(Selects)27 b(the)h(start)f(address)f(for)h(the)h(test.)208
-532 y(Memory)e(end)i(address:)36 b(Selects)27 b(the)h(end)g(address)e
-(for)h(the)h(test.)0 698 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
-b Fh(-)208 798 y Fi(A)m(t)32 b(righ)m(t)g(p)s(ort)g(address:)k
-Fh(The)27 b(v)-5 b(alue)28 b(read)e(bac)n(k)h(via)g(the)h(righ)n(t)f(p)
-r(ort)g(did)h(not)g(matc)n(h)f(the)h(v)-5 b(alue)27 b(written.)208
-897 y Fi(A)m(t)k(left)g(p)s(ort)g(address:)36 b Fh(The)27
-b(v)-5 b(alue)27 b(read)f(bac)n(k)g(via)g(the)i(left)f(p)r(ort)g(did)g
-(not)g(matc)n(h)g(the)g(v)-5 b(alue)27 b(written)g(via)g(the)208
-997 y(righ)n(t)f(p)r(ort.)0 1262 y Fi(T)-8 b(est:)42
-b(Displa)m(y)32 b(LP)g(Memory)0 1416 y(T)-8 b(est)32
-b(Description:)40 b Fh(This)27 b(test)g(dumps)g(data)g(b)r(et)n(w)n
-(een)f(the)i(giv)n(en)e(addresses.)35 b(Only)26 b(one)h(bank)f(select)h
-(is)g(p)r(erformed,)208 1515 y(at)f(the)h(v)n(ery)e(start)h(of)h(the)g
-(test,)g(so)e(do)i(not)f(sp)r(ecify)h(an)f(address)f(range)h(that)g
-(spans)g(m)n(ultiple)h(banks.)36 b(Eac)n(h)26 b(bank)208
-1615 y(is)h(64k,)g(so)f(the)i(bank)g(address)e(ranges)g(are)g(as)h
-(follo)n(ws:)208 1715 y(bank)g(0:)36 b(0xA0000000)24
-b(-)j(0xA0010000)208 1814 y(bank)g(1:)36 b(0xA0010000)24
-b(-)j(0xA0020000)208 1914 y(...)208 2013 y(bank)g(15:)36
-b(0xA00F0000)24 b(-)j(0xA00FFFFF)208 2113 y(See)32 b(the)h(note)f(ab)r
-(o)n(v)n(e)g(under)g(\020DPRAM)i(base)d(address\021)38
-b(in)33 b(3.9.2)e(for)h(an)h(explanation)e(ab)r(out)i(ho)n(w)f(these)g
-(tests)208 2213 y(handle)27 b(addresses.)0 2379 y Fi(T)-8
-b(est)32 b(Mo)s(des:)39 b Fh(Custom)28 b(test.)0 2545
-y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 2644 y(Dump)28
-b(mem)g(start:)36 b(The)28 b(\034rst)f(address)f(to)i(displa)n(y)-7
-b(.)208 2744 y(Dump)28 b(mem)g(end:)37 b(The)28 b(last)f(address)f(to)i
-(displa)n(y)-7 b(.)0 2910 y Fi(T)f(est)32 b(F)-8 b(ailures:)40
-b Fh(-)208 3010 y(None.)0 3275 y Fi(T)-8 b(est:)42 b(Displa)m(y)32
-b(RP)f(Memory)0 3428 y(T)-8 b(est)32 b(Description:)40
+b(Selects)27 b(the)h(source)e(bu\033er)i(address.)208
+532 y(DMA)g(bu\033er)g(address:)35 b(Selects)28 b(the)g(destination)f
+(bu\033er)h(address.)208 632 y(DMA)g(size:)36 b(Sets)28
+b(the)g(DMA)h(transfer)d(size)h(in)h(b)n(ytes.)208 731
+y(DMA)g(in)n(terrupt)f(test:)37 b(If)28 b(set,)g(the)g(DMA)g(engine)g
+(in)n(terrupts)e(the)i(CPU)h(when)f(the)f(transfer)g(is)g(complete.)208
+831 y(Enable)i(icac)n(he:)38 b(Selects)29 b(whether)f(to)h(enable)f
+(the)i(instruction)e(cac)n(he)g(while)h(comparing)e(the)i(source)f(and)
+g(desti-)208 930 y(nation)f(bu\033ers.)0 1096 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 1196 y Fi(DMA)k(transfer)h
+(incomplete:)55 b Fh(The)39 b(DMA)g(bu\033er)f(descriptor)g(w)n(as)f
+(nev)n(er)g(up)r(dated)i(b)n(y)f(the)h(CPM.)g(This)208
+1296 y(usually)27 b(indicates)g(that)h(one)f(\(or)g(b)r(oth\))h(of)g
+(the)g(source)e(or)h(destination)g(addresses)f(is)h(in)n(v)-5
+b(alid.)208 1395 y Fi(Memory)36 b(mismatc)m(h:)44 b Fh(The)32
+b(DMA)i(transfer)e(completed,)i(but)f(the)g(source)e(and)i(destination)
+f(bu\033ers)h(do)f(not)208 1495 y(matc)n(h.)k(This)27
+b(can)f(happ)r(en)h(if)h(the)f(destination)g(bu\033er)g(is)g(not)g(in)g
+(a)f(writeable)h(memory)f(device,)h(or)f(if)h(the)g(source)208
+1595 y(bu\033er)g(is)h(not)f(in)h(a)f(device)h(at)f(all.)0
+1860 y Fi(T)-8 b(est:)42 b(Righ)m(t)31 b(P)m(ort)i(T)-8
+b(est)0 2013 y(T)g(est)32 b(Description:)40 b Fh(This)d(test)g(p)r
+(erforms)f(\020o)n(wn)g(address\021)42 b(writes)37 b(to)f(the)i(DPRAM)g
+(via)e(the)h(FPGA's)h(righ)n(t)e(p)r(ort)208 2113 y(in)n(terface,)j
+(then)f(reads)f(them)h(bac)n(k)f(t)n(wice)g(-)g(once)h(through)e(the)i
+(righ)n(t)f(p)r(ort,)j(immediately)e(after)f(writing)g(an)208
+2213 y(address;)22 b(and)f(again)e(through)i(the)g(left)h(p)r(ort)f
+(\(the)h(pro)r(cessor)d(in)n(terface\),)j(immediately)f(after)g
+(writing)f(an)h(address.)208 2312 y(The)j(address)e(range)h(for)h(this)
+g(test)g(is)g(ev)n(en)g(more)f(un)n(usual)h(than)g(for)f(the)i(other)e
+(\(left)i(p)r(ort\))f(tests.)36 b(The)24 b(righ)n(t)f(p)r(ort)208
+2412 y(address)k(base)g(is)i(actually)f(at)g(0xC0000)e(ab)r(o)n(v)n(e)h
+(the)i(DPRAM)g(base)f(address,)g(but)h(the)g(test)f(in)n(ternally)g
+(con)n(v)n(erts)208 2512 y(the)i(DPRAM)i(base)e(address)g(giv)n(en)f
+(in)i(the)g(options)f(from)g(a)g(left)h(p)r(ort)g(address)e(to)h(a)g
+(righ)n(t)g(p)r(ort)h(address.)44 b(The)208 2611 y(righ)n(t)37
+b(p)r(ort)h(address)e(range)h(is)h(split)g(in)n(to)g(4)g(sections,)i
+(but)f(the)f(test)g(automatically)f(selects)h(eac)n(h)f(section)h(as)
+208 2711 y(needed.)f(This)27 b(fact)h(b)r(ecomes)f(imp)r(ortan)n(t)g
+(in)h(the)g(\020Displa)n(y)f(RP)h(Memory\021)33 b(test)28
+b(describ)r(ed)f(b)r(elo)n(w.)0 2877 y Fi(T)-8 b(est)32
+b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0 3043
+y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 3142 y(Memory)26
+b(base)h(address:)36 b(Selects)27 b(the)h(start)f(address)f(for)h(the)h
+(test.)208 3242 y(Memory)e(end)i(address:)36 b(Selects)27
+b(the)h(end)g(address)e(for)h(the)h(test.)0 3408 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 3508 y Fi(A)m(t)32
+b(righ)m(t)g(p)s(ort)g(address:)k Fh(The)27 b(v)-5 b(alue)28
+b(read)e(bac)n(k)h(via)g(the)h(righ)n(t)f(p)r(ort)g(did)h(not)g(matc)n
+(h)f(the)h(v)-5 b(alue)27 b(written.)208 3607 y Fi(A)m(t)k(left)g(p)s
+(ort)g(address:)36 b Fh(The)27 b(v)-5 b(alue)27 b(read)f(bac)n(k)g(via)
+g(the)i(left)f(p)r(ort)g(did)g(not)g(matc)n(h)g(the)g(v)-5
+b(alue)27 b(written)g(via)g(the)208 3707 y(righ)n(t)f(p)r(ort.)0
+3973 y Fi(T)-8 b(est:)42 b(Displa)m(y)32 b(LP)g(Memory)0
+4126 y(T)-8 b(est)32 b(Description:)40 b Fh(This)27 b(test)g(dumps)g
+(data)g(b)r(et)n(w)n(een)f(the)i(giv)n(en)e(addresses.)35
+b(Only)26 b(one)h(bank)f(select)h(is)g(p)r(erformed,)208
+4225 y(at)f(the)h(v)n(ery)e(start)h(of)h(the)g(test,)g(so)e(do)i(not)f
+(sp)r(ecify)h(an)f(address)f(range)h(that)g(spans)g(m)n(ultiple)h
+(banks.)36 b(Eac)n(h)26 b(bank)208 4325 y(is)h(64k,)g(so)f(the)i(bank)g
+(address)e(ranges)g(are)g(as)h(follo)n(ws:)208 4425 y(bank)g(0:)36
+b(0xA0000000)24 b(-)j(0xA0010000)208 4524 y(bank)g(1:)36
+b(0xA0010000)24 b(-)j(0xA0020000)208 4624 y(...)208 4724
+y(bank)g(15:)36 b(0xA00F0000)24 b(-)j(0xA00FFFFF)208
+4823 y(See)i(the)i(note)f(ab)r(o)n(v)n(e)e(under)i(\020DPRAM)h(base)e
+(address\021)36 b(in)30 b(3.10.2)e(for)h(an)h(explanation)f(ab)r(out)h
+(ho)n(w)f(these)h(tests)208 4923 y(handle)d(addresses.)0
+5089 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test.)p eop
+%%Page: 36 37
+36 36 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(36)0 333 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 432 y(Dump)28 b(mem)g(start:)36
+b(The)28 b(\034rst)f(address)f(to)i(displa)n(y)-7 b(.)208
+532 y(Dump)28 b(mem)g(end:)37 b(The)28 b(last)f(address)f(to)i(displa)n
+(y)-7 b(.)0 691 y Fi(T)f(est)32 b(F)-8 b(ailures:)40
+b Fh(-)208 791 y(None.)0 1047 y Fi(T)-8 b(est:)42 b(Displa)m(y)32
+b(RP)f(Memory)0 1200 y(T)-8 b(est)32 b(Description:)40
 b Fh(This)23 b(test)h(dumps)g(data)e(b)r(et)n(w)n(een)i(the)f(giv)n(en)
 g(addresses.)33 b(Only)23 b(one)g(region)f(select)h(is)h(p)r(erformed,)
-208 3528 y(at)34 b(the)h(v)n(ery)e(start)h(of)h(the)g(test,)i(so)d(do)g
+208 1300 y(at)34 b(the)h(v)n(ery)e(start)h(of)h(the)g(test,)i(so)d(do)g
 (not)g(sp)r(ecify)h(an)g(address)e(range)g(that)i(spans)f(m)n(ultiple)h
-(regions.)56 b(Eac)n(h)208 3628 y(region)26 b(is)h(256k,)f(so)h(the)h
+(regions.)56 b(Eac)n(h)208 1399 y(region)26 b(is)h(256k,)f(so)h(the)h
 (region)e(address)h(ranges)f(are)g(as)h(follo)n(ws:)208
-3727 y(region)f(0:)36 b(0xA0000000)24 b(-)j(0xA0040000)208
-3827 y(region)f(1:)36 b(0xA0040000)24 b(-)j(0xA0080000)208
-3927 y(region)f(2:)36 b(0xA0080000)24 b(-)j(0xA00C0000)208
-4026 y(region)f(3:)36 b(0xA00C0000)24 b(-)k(0xA00FFFFF)208
-4126 y(See)k(the)h(note)f(ab)r(o)n(v)n(e)g(under)g(\020DPRAM)i(base)d
-(address\021)38 b(in)33 b(3.9.2)e(for)h(an)h(explanation)e(ab)r(out)i
-(ho)n(w)f(these)g(tests)208 4225 y(handle)27 b(addresses.)0
-4392 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
-b(test.)0 4558 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
-4657 y(Dump)28 b(mem)g(start:)36 b(The)28 b(\034rst)f(address)f(to)i
-(displa)n(y)-7 b(.)208 4757 y(Dump)28 b(mem)g(end:)37
+1499 y(region)f(0:)36 b(0xA0000000)24 b(-)j(0xA0040000)208
+1599 y(region)f(1:)36 b(0xA0040000)24 b(-)j(0xA0080000)208
+1698 y(region)f(2:)36 b(0xA0080000)24 b(-)j(0xA00C0000)208
+1798 y(region)f(3:)36 b(0xA00C0000)24 b(-)k(0xA00FFFFF)208
+1898 y(See)h(the)i(note)f(ab)r(o)n(v)n(e)e(under)i(\020DPRAM)h(base)e
+(address\021)36 b(in)30 b(3.10.2)e(for)h(an)h(explanation)f(ab)r(out)h
+(ho)n(w)f(these)h(tests)208 1997 y(handle)d(addresses.)0
+2157 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test.)0 2316 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
+2416 y(Dump)28 b(mem)g(start:)36 b(The)28 b(\034rst)f(address)f(to)i
+(displa)n(y)-7 b(.)208 2515 y(Dump)28 b(mem)g(end:)37
 b(The)28 b(last)f(address)f(to)i(displa)n(y)-7 b(.)0
-4923 y Fi(T)f(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-5023 y(None.)p eop
-%%Page: 33 34
-33 33 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(33)0 333 y Fi(T)-8 b(est:)42
-b(Find)31 b(P)m(attern)0 486 y(T)-8 b(est)32 b(Description:)40
-b Fh(This)27 b(test)h(searc)n(hes)d(ev)n(ery)h(address)g(in)h(the)h
-(DPRAM,)h(displa)n(ying)d(eac)n(h)g(address)g(that)i(matc)n(hes)208
-586 y(the)g(v)-5 b(alue)27 b(stored)g(in)g(the)h(T)-7
-b(est)28 b(data)f(option.)0 751 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(Custom)28 b(test.)0 917 y Fi(T)-8 b(est)32 b(Options:)40
-b Fh(-)208 1016 y(T)-7 b(est)27 b(data:)36 b(Selects)28
-b(the)g(data)f(pattern)g(to)h(searc)n(h)e(for)h(in)h(the)g(DPRAM.)0
-1182 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-1282 y(None.)0 1547 y Fi(T)-8 b(est:)42 b(Set)32 b(CS5)f(W)-8
-b(ait)32 b(States)0 1700 y(T)-8 b(est)32 b(Description:)40
-b Fh(This)c(test)h(sets)f(the)h(n)n(um)n(b)r(er)f(of)h(w)n(ait)f
-(states)g(for)f(c)n(hip)i(select)f(5)g(to)g(the)h(v)-5
-b(alue)36 b(stored)g(in)h(the)208 1800 y(T)-7 b(est)27
-b(data)g(option.)0 1965 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(Custom)28 b(test.)0 2131 y Fi(T)-8 b(est)32 b(Options:)40
-b Fh(-)208 2230 y(T)-7 b(est)27 b(data:)36 b(Selects)28
-b(the)g(w)n(ait)f(state)g(v)-5 b(alue)28 b(for)f(c)n(hip)g(select)h(5.)
-0 2396 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-2496 y(None.)0 2820 y Fe(3.10)130 b(Green)44 b(Bo)l(x)h(XILINX)0
-3018 y Fd(3.10.1)112 b(Submen)m(u)38 b(description)0
-3171 y Fh(The)25 b(tests)h(in)f(this)h(men)n(u)f(v)n(erify)g(the)h(op)r
-(eration)e(of)h(the)h(XILINX)g(registers)e(and)h(the)g(Green)g(Bo)n(x)g
-(data)g(capture)f(abilit)n(y)-7 b(.)0 3403 y Fd(3.10.2)112
-b(Submen)m(u)38 b(options)0 3557 y Fh(Debug)28 b(lev)n(el:)41
-b(Selects)29 b(lev)n(el)f(of)i(debugging)e(output.)42
-b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39 b(\()p
-Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)r(ose,)
-f(3)420 3656 y(=)f(massiv)n(e)f(screen)h(scroll\))0 3822
-y(Sim)n(ulate)h(XILINX)g(in)n(terrupt:)41 b(This)27 b(option)h(should)f
-(nev)n(er)g(b)r(e)g(set)h(to)g(an)n(ything)e(other)h(than)h
-Fi(0)p Fh(.)0 3988 y(1st)f(bu\033er)h(base)f(address:)40
+2675 y Fi(T)f(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+2774 y(None.)0 3030 y Fi(T)-8 b(est:)42 b(Find)31 b(P)m(attern)0
+3184 y(T)-8 b(est)32 b(Description:)40 b Fh(This)27 b(test)h(searc)n
+(hes)d(ev)n(ery)h(address)g(in)h(the)h(DPRAM,)h(displa)n(ying)d(eac)n
+(h)g(address)g(that)i(matc)n(hes)208 3283 y(the)g(v)-5
+b(alue)27 b(stored)g(in)g(the)h(T)-7 b(est)28 b(data)f(option.)0
+3443 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test.)0 3602 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
+3702 y(T)-7 b(est)27 b(data:)36 b(Selects)28 b(the)g(data)f(pattern)g
+(to)h(searc)n(h)e(for)h(in)h(the)g(DPRAM.)0 3861 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 3961 y(None.)0
+4217 y Fi(T)-8 b(est:)42 b(Set)32 b(CS5)f(W)-8 b(ait)32
+b(States)0 4370 y(T)-8 b(est)32 b(Description:)40 b Fh(This)c(test)h
+(sets)f(the)h(n)n(um)n(b)r(er)f(of)h(w)n(ait)f(states)g(for)f(c)n(hip)i
+(select)f(5)g(to)g(the)h(v)-5 b(alue)36 b(stored)g(in)h(the)208
+4469 y(T)-7 b(est)27 b(data)g(option.)0 4629 y Fi(T)-8
+b(est)32 b(Mo)s(des:)39 b Fh(Custom)28 b(test.)0 4788
+y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 4888 y(T)-7
+b(est)27 b(data:)36 b(Selects)28 b(the)g(w)n(ait)f(state)g(v)-5
+b(alue)28 b(for)f(c)n(hip)g(select)h(5.)0 5047 y Fi(T)-8
+b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 5147 y(None.)p
+eop
+%%Page: 37 38
+37 37 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(37)0 333 y Fe(3.11)130
+b(Green)44 b(Bo)l(x)h(XILINX)0 531 y Fd(3.11.1)112 b(Submen)m(u)38
+b(description)0 684 y Fh(The)25 b(tests)h(in)f(this)h(men)n(u)f(v)n
+(erify)g(the)h(op)r(eration)e(of)h(the)h(XILINX)g(registers)e(and)h
+(the)g(Green)g(Bo)n(x)g(data)g(capture)f(abilit)n(y)-7
+b(.)0 917 y Fd(3.11.2)112 b(Submen)m(u)38 b(options)0
+1070 y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29 b(lev)n(el)f(of)i
+(debugging)e(output.)42 b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39
+b(\()p Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)
+r(ose,)f(3)420 1170 y(=)f(massiv)n(e)f(screen)h(scroll\))0
+1336 y(Sim)n(ulate)h(XILINX)g(in)n(terrupt:)41 b(This)27
+b(option)h(should)f(nev)n(er)g(b)r(e)g(set)h(to)g(an)n(ything)e(other)h
+(than)h Fi(0)p Fh(.)0 1502 y(1st)f(bu\033er)h(base)f(address:)40
 b(Selects)c(the)g(SDRAM)g(lo)r(cation)f(at)h(whic)n(h)f(to)h(start)f
-(cop)n(ying)f(data)h(out)h(of)g(the)g(DPRAM)420 4087
+(cop)n(ying)f(data)h(out)h(of)g(the)g(DPRAM)420 1601
 y(after)27 b(it)h(has)f(b)r(een)h(written)g(to)f(b)n(y)g(the)h(XILINX.)
-0 4253 y(Bu\033er)f(size:)42 b(Selects)32 b(the)g(n)n(um)n(b)r(er)g(of)
+0 1767 y(Bu\033er)f(size:)42 b(Selects)32 b(the)g(n)n(um)n(b)r(er)g(of)
 g(b)n(ytes)g(the)g(XILINX)h(should)f(write)g(to)g(a)g(DPRAM)h(bank)f(b)
-r(efore)g(switc)n(hing)f(to)420 4352 y(another)26 b(bank.)0
-4585 y Fd(3.10.3)112 b(T)-9 b(est)37 b(Descriptions)0
-4738 y Fi(T)-8 b(est:)42 b(Registers)0 4891 y(T)-8 b(est)32
+r(efore)g(switc)n(hing)f(to)420 1867 y(another)26 b(bank.)0
+2099 y Fd(3.11.3)112 b(T)-9 b(est)37 b(Descriptions)0
+2253 y Fi(T)-8 b(est:)42 b(Registers)0 2406 y(T)-8 b(est)32
 b(Description:)40 b Fh(This)19 b(test)f(writes)g(and)h(reads)e(bac)n(k)
 h(the)g(registers)f(within)i(the)g(XILINX)g(FPGA.)h(It)f(\034rsts)f(p)r
-(erforms)208 4991 y(\020w)n(alking)29 b(ones\021)36 b(testing,)c(in)f
+(erforms)208 2505 y(\020w)n(alking)29 b(ones\021)36 b(testing,)c(in)f
 (whic)n(h)g(eac)n(h)f(writable)g(bit)h(is)g(set)f(then)i(cleared)d(to)i
 (mak)n(e)f(sure)g(it)h(w)n(orks)e(prop)r(erly)-7 b(.)208
-5090 y(Then)22 b(it)h(p)r(erforms)f(\020in)n(terference\021)28
+2605 y(Then)22 b(it)h(p)r(erforms)f(\020in)n(terference\021)28
 b(testing,)23 b(in)g(whic)n(h)f(eac)n(h)g(register)f(is)h(assigned)f(a)
 h(di\033eren)n(t)h(v)-5 b(alue,)23 b(then)g(v)n(eri\034ed)208
-5190 y(after)i(all)g(registers)f(ha)n(v)n(e)g(b)r(een)i(written)f(to)h
+2705 y(after)i(all)g(registers)f(ha)n(v)n(e)g(b)r(een)i(written)f(to)h
 (mak)n(e)e(sure)h(eac)n(h)g(register)f(do)r(es)h(not)h(in\035uence)f
-(the)h(v)-5 b(alue)26 b(of)f(another.)p eop
-%%Page: 34 35
-34 34 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(34)0 333 y Fi(T)-8 b(est)32
-b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0 499 y
-Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 598 y(Debug)27
-b(lev)n(el:)37 b(W)-7 b(orks)26 b(as)h(describ)r(ed)g(in)h(T)-7
-b(est)28 b(Options,)f(ab)r(o)n(v)n(e.)0 764 y Fi(T)-8
-b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 864 y Fi(During)31
-b(w)m(alking)h(ones)f(test:)36 b Fh(The)27 b(test)h(failed)g(to)f(set)h
-(or)f(clear)f(a)h(bit)h(in)g(the)g(named)g(XILINX)g(register.)208
-964 y Fi(During)23 b(in)m(terference)h(test)f(setup:)33
-b Fh(The)20 b(test)h(failed)f(to)h(set)f(an)g(initial)h(v)-5
+(the)h(v)-5 b(alue)26 b(of)f(another.)0 2871 y Fi(T)-8
+b(est)32 b(Mo)s(des:)39 b Fh(All)28 b(test)g(mo)r(des.)0
+3037 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 3136
+y(Debug)27 b(lev)n(el:)37 b(W)-7 b(orks)26 b(as)h(describ)r(ed)g(in)h
+(T)-7 b(est)28 b(Options,)f(ab)r(o)n(v)n(e.)0 3302 y
+Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208 3402
+y Fi(During)31 b(w)m(alking)h(ones)f(test:)36 b Fh(The)27
+b(test)h(failed)g(to)f(set)h(or)f(clear)f(a)h(bit)h(in)g(the)g(named)g
+(XILINX)g(register.)208 3502 y Fi(During)23 b(in)m(terference)h(test)f
+(setup:)33 b Fh(The)20 b(test)h(failed)f(to)h(set)f(an)g(initial)h(v)-5
 b(alue)20 b(in)h(the)g(named)f(XILINX)i(register.)208
-1063 y Fi(During)31 b(in)m(terference)h(test:)k Fh(The)28
+3601 y Fi(During)31 b(in)m(terference)h(test:)k Fh(The)28
 b(named)f(register)f(did)i(not)g(con)n(tain)f(the)h(correct)e(v)-5
-b(alue.)0 1329 y Fi(T)d(est:)42 b(In)m(terrupt)33 b(T)-8
-b(est)0 1482 y(T)g(est)32 b(Description:)40 b Fh(This)22
+b(alue.)0 3867 y Fi(T)d(est:)42 b(In)m(terrupt)33 b(T)-8
+b(est)0 4020 y(T)g(est)32 b(Description:)40 b Fh(This)22
 b(test)h(causes)e(the)i(Green)f(Bo)n(x)f(to)h(send)g(a)g(single)g
 (bu\033er,)h(to)f(force)g(an)g(in)n(terrupt)g(to)g(the)g(CPU.)0
-1648 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
-b(and)g(burn-in)h(mo)r(des.)0 1814 y Fi(T)-8 b(est)32
-b(Options:)40 b Fh(-)208 1914 y(Sim)n(ulate)27 b(XILINX)h(in)n
+4186 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Basic)27
+b(and)g(burn-in)h(mo)r(des.)0 4352 y Fi(T)-8 b(est)32
+b(Options:)40 b Fh(-)208 4452 y(Sim)n(ulate)27 b(XILINX)h(in)n
 (terrupt:)37 b(This)27 b(test)h(is)g(guaran)n(teed)d(to)j(fail)g(if)g
-(this)f(option)h(is)f(set!)0 2080 y Fi(T)-8 b(est)32
-b(F)-8 b(ailures:)40 b Fh(-)208 2179 y Fi(No)31 b(lo)s(opbac)m(k)i
+(this)f(option)h(is)f(set!)0 4618 y Fi(T)-8 b(est)32
+b(F)-8 b(ailures:)40 b Fh(-)208 4717 y Fi(No)31 b(lo)s(opbac)m(k)i
 (signal)e(receiv)m(ed:)38 b Fh(The)28 b(lo)r(opbac)n(k)e(test)j(mo)r
 (de)f(isn't)g(running.)38 b(This)28 b(happ)r(ens)g(if)h(no)f(lo)r
-(opbac)n(k)208 2279 y(connector)e(is)h(attac)n(hed)g(to)h(the)g(HDB-10)
-e(RJ-45)h(connector.)208 2379 y Fi(XILINX)32 b(in)m(terrupt)h(not)e
+(opbac)n(k)208 4817 y(connector)e(is)h(attac)n(hed)g(to)h(the)g(HDB-10)
+e(RJ-45)h(connector.)208 4917 y Fi(XILINX)32 b(in)m(terrupt)h(not)e
 (receiv)m(ed:)37 b Fh(The)28 b(XILINX)g(didn't)g(in)n(terrupt)f(the)h
-(CPU.)0 2644 y Fi(T)-8 b(est:)42 b(Receiv)m(e)31 b(T)-8
-b(est)0 2798 y(T)g(est)32 b(Description:)40 b Fh(This)23
-b(test)g(exercises)e(the)i(XILINX)g(receiv)n(e)e(path.)36
+(CPU.)p eop
+%%Page: 38 39
+38 38 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(38)0 333 y Fi(T)-8 b(est:)42
+b(Receiv)m(e)31 b(T)-8 b(est)0 486 y(T)g(est)32 b(Description:)40
+b Fh(This)23 b(test)g(exercises)e(the)i(XILINX)g(receiv)n(e)e(path.)36
 b(If)23 b(a)f(lo)r(opbac)n(k)f(plug)h(has)h(b)r(een)g(inserted)f(in)h
-(the)208 2897 y(HDB-10)30 b(RJ-45)g(connector,)h(the)h(FPGA)h(will)e
+(the)208 586 y(HDB-10)30 b(RJ-45)g(connector,)h(the)h(FPGA)h(will)e
 (transmit)g(a)g(test)h(pattern)f(through)g(it.)49 b(The)31
-b(soft)n(w)n(are)f(manages)208 2997 y(the)22 b(double-bu\033ering)g(un)
-n(til)g(9)g(bu\033ers)g(ha)n(v)n(e)f(b)r(een)i(\034lled,)h(then)e
+b(soft)n(w)n(are)f(manages)208 685 y(the)22 b(double-bu\033ering)g(un)n
+(til)g(9)g(bu\033ers)g(ha)n(v)n(e)f(b)r(een)i(\034lled,)h(then)e
 (disables)g(the)h(receiv)n(e)e(path.)35 b(Finally)-7
-b(,)23 b(it)g(compares)208 3096 y(the)28 b(receiv)n(ed)e(data)h(to)g
-(the)h(kno)n(wn)f(test)h(pattern.)0 3262 y Fi(T)-8 b(est)32
+b(,)23 b(it)g(compares)208 785 y(the)28 b(receiv)n(ed)e(data)h(to)g
+(the)h(kno)n(wn)f(test)h(pattern.)0 946 y Fi(T)-8 b(est)32
 b(Mo)s(des:)39 b Fh(Basic)27 b(and)g(burn-in)h(mo)r(des.)0
-3428 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 3528
+1106 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 1206
 y(1st)29 b(bu\033er)h(base)f(address:)39 b(This)30 b(selects)f(the)h
 (SDRAM)h(base)e(address)g(at)g(whic)n(h)h(to)f(cop)n(y)g(all)g(DPRAM)j
-(data)d(as)208 3628 y(it)f(is)f(receiv)n(ed.)208 3727
+(data)d(as)208 1306 y(it)f(is)f(receiv)n(ed.)208 1405
 y(Bu\033er)22 b(size:)34 b(Selects)22 b(ho)n(w)g(man)n(y)g(b)n(ytes)g
 (the)h(receiv)n(e)e(engine)i(dumps)f(in)n(to)h(eac)n(h)e(DPRAM)j(bank)e
-(b)r(efore)h(switc)n(hing)208 3827 y(to)k(another)g(bank.)0
-3993 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
-4093 y Fi(No)31 b(lo)s(opbac)m(k)i(signal)e(receiv)m(ed:)38
+(b)r(efore)h(switc)n(hing)208 1505 y(to)k(another)g(bank.)0
+1666 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+1765 y Fi(No)31 b(lo)s(opbac)m(k)i(signal)e(receiv)m(ed:)38
 b Fh(The)28 b(lo)r(opbac)n(k)e(test)j(mo)r(de)f(isn't)g(running.)38
 b(This)28 b(happ)r(ens)g(if)h(no)f(lo)r(opbac)n(k)208
-4192 y(connector)e(is)h(attac)n(hed)g(to)h(the)g(HDB-10)e(RJ-45)h
-(connector.)208 4292 y Fi(Receiv)m(ed)37 b(X)h(of)g(9)g(exp)s(ected)g
+1865 y(connector)e(is)h(attac)n(hed)g(to)h(the)g(HDB-10)e(RJ-45)h
+(connector.)208 1965 y Fi(Receiv)m(ed)37 b(X)h(of)g(9)g(exp)s(ected)g
 (bu\033ers:)47 b Fh(The)33 b(receiv)n(e)f(logic)g(receiv)n(ed)g(only)h
-(X)g(bu\033ers)g(instead)g(of)g(the)g(9)g(it)208 4392
+(X)g(bu\033ers)g(instead)g(of)g(the)g(9)g(it)208 2064
 y(in)n(tended)27 b(to)h(collect)f(b)r(efore)g(the)h(test)g(timed)g
-(out.)208 4491 y Fi(Data)40 b(corruption)g(detected:)51
+(out.)208 2164 y Fi(Data)40 b(corruption)g(detected:)51
 b Fh(The)34 b(data)g(read)g(from)g(one)g(of)g(the)h(banks)f(did)h(not)f
-(matc)n(h)g(the)h(kno)n(wn)f(test)208 4591 y(pattern.)p
-eop
-%%Page: 35 36
-35 35 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
-b(TEST)g(DESCRIPTIONS)1788 b Fh(35)0 333 y Fi(T)-8 b(est:)42
-b(Dump)31 b(Registers)0 486 y(T)-8 b(est)32 b(Description:)40
-b Fh(This)28 b(test)f(simply)h(dumps)g(the)g(con)n(ten)n(ts)f(of)g(the)
-h(FPGA)h(registers.)0 652 y Fi(T)-8 b(est)32 b(Mo)s(des:)39
-b Fh(Custom)28 b(test.)0 818 y Fi(T)-8 b(est)32 b(Options:)40
-b Fh(-)208 918 y(None.)0 1084 y Fi(T)-8 b(est)32 b(F)-8
-b(ailures:)40 b Fh(-)208 1183 y(None.)p eop
+(matc)n(h)g(the)h(kno)n(wn)f(test)208 2264 y(pattern.)0
+2522 y Fi(T)-8 b(est:)42 b(Dump)31 b(Registers)0 2675
+y(T)-8 b(est)32 b(Description:)40 b Fh(This)28 b(test)f(simply)h(dumps)
+g(the)g(con)n(ten)n(ts)f(of)g(the)h(FPGA)h(registers.)0
+2836 y Fi(T)-8 b(est)32 b(Mo)s(des:)39 b Fh(Custom)28
+b(test.)0 2997 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208
+3096 y(None.)0 3257 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40
+b Fh(-)208 3357 y(None.)0 3674 y Fe(3.12)130 b(Red)44
+b(Bo)l(x)0 3872 y Fd(3.12.1)112 b(Submen)m(u)38 b(description)0
+4025 y Fh(The)28 b(tests)f(in)h(this)g(men)n(u)g(v)n(erify)e(the)i
+(HDB-10)f(transmission)f(capabilit)n(y)h(of)h(the)f(Red)h(Bo)n(x.)0
+4255 y Fd(3.12.2)112 b(Submen)m(u)38 b(options)0 4409
+y Fh(Debug)28 b(lev)n(el:)41 b(Selects)29 b(lev)n(el)f(of)i(debugging)e
+(output.)42 b(A)-9 b(v)k(ailable)29 b(lev)n(els)f(are:)39
+b(\()p Fi(0)34 b(=)g(none)p Fh(,)29 b(1)g(=)g(terse,)g(2)f(=)h(v)n(erb)
+r(ose,)f(3)420 4508 y(=)f(massiv)n(e)f(screen)h(scroll\))0
+4669 y(1st)g(bu\033er)h(base)f(address:)40 b(Un)n(used)0
+4830 y(Bu\033er)27 b(size:)42 b(Num)n(b)r(er)27 b(of)h(b)n(ytes)f(to)g
+(transmit.)37 b(Limited)28 b(to)g(64kB)0 4991 y(Xmit)g(pattern:)42
+b(Select)25 b(a)g(pattern)g(to)g(transmit.)36 b(A)-9
+b(v)k(ailable)25 b(patterns)g(are:)35 b(\(0=all)24 b(0's,)h(1)g(=)g
+(all)g(1's,)h(2)e(=)h(01010101b,)e(3)420 5090 y(=)28
+b(10101010b,)d Fi(4)33 b(=)g(Pseudo-Random)p Fh(,)26
+b(5)j(=)f(user-de\034ned)g(\(see)g(User)g(pattern)h(option\),)g(6)f(=)g
+(Summa)420 5190 y(test)f(data,)h(7)f(=)g(incremen)n(t)g(b)n(y)h(4)f
+(pattern\))p eop
+%%Page: 39 40
+39 39 bop 0 100 a Fg(CHAPTER)29 b(3.)64 b(DIA)n(GNOSTIC)28
+b(TEST)g(DESCRIPTIONS)1788 b Fh(39)0 333 y(User)27 b(pattern:)41
+b(Set)35 b(the)g(2-b)n(yte)f(pattern)g(to)g(b)r(e)h(transmitted,)i(if)e
+(the)f(Xmit)i(pattern)e(option)g(has)g(b)r(een)h(set)g(to)f(user-)420
+432 y(de\034ned.)0 598 y(T)-7 b(est)28 b(time:)53 b(Un)n(used)0
+831 y Fd(3.12.3)112 b(T)-9 b(est)37 b(descriptions)0
+984 y Fi(T)-8 b(est:)42 b(T)-8 b(ransmit)31 b(T)-8 b(est)0
+1137 y(T)g(est)32 b(Description:)40 b Fh(This)27 b(test)h(transmits)f
+(data)g(via)f(the)i(HDB-10)f(in)n(terface,)f(then)i(examines)f(the)h
+(receiv)n(e)e(bu\033er)h(to)208 1237 y(mak)n(e)f(sure)h(that)h(it)g
+(matc)n(hes)f(the)h(transmit)f(bu\033er.)0 1403 y Fi(T)-8
+b(est)32 b(Mo)s(des:)39 b Fh(Basic)27 b(and)g(burn-in)h(mo)r(des.)0
+1569 y Fi(T)-8 b(est)32 b(Options:)40 b Fh(-)208 1668
+y(Bu\033er)27 b(size:)36 b(Selects)28 b(ho)n(w)f(man)n(y)g(b)n(ytes)g
+(to)g(transmit)h(\(m)n(ust)g(b)r(e)g(divisible)f(b)n(y)h(4\))208
+1768 y(Xmit)g(pattern:)37 b(Selects)27 b(whic)n(h)h(pattern)f(to)g
+(transmit)208 1868 y(User)g(pattern:)36 b(If)28 b(Xmit)h(pattern)e
+(equals)g(5,)g(set)h(this)f(to)h(the)g(desired)f(2-b)n(yte)f(pattern)0
+2034 y Fi(T)-8 b(est)32 b(F)-8 b(ailures:)40 b Fh(-)208
+2133 y Fi(F)-8 b(ailed)39 b(to)h(transmit)f(test)h(bu\033er:)51
+b Fh(The)35 b(Xilinx)g(status)g(register)e(did)j(not)e(indicate)h(a)g
+(transmit)f(in)n(terrupt)208 2233 y(within)28 b(the)g(timeout)g(p)r
+(erio)r(d.)208 2333 y Fi(F)-8 b(ailed)30 b(to)h(receiv)m(e)g(test)g
+(bu\033er:)36 b Fh(The)27 b(Xilinx)g(status)g(register)e(did)j(not)f
+(indicate)g(a)f(receiv)n(e)g(in)n(terrupt)g(within)208
+2432 y(the)i(timeout)f(p)r(erio)r(d.)208 2532 y Fi(Comparison)f
+(failure)i(in)h(xmit)e(w)m(ord:)35 b Fh(The)25 b(t)n(w)n(o)f(bu\033ers)
+h(w)n(ere)f(compared)f(\(disregarding)g(the)i(sync)g(bit\))g(and)208
+2632 y(did)j(not)f(matc)n(h.)p eop
 %%Trailer
 end
 userdict /end-hook known{end-hook}if
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/documents/diag_guide.txt ppc_diag/documents/diag_guide.txt
--- ppc_diag-1.0.2/documents/diag_guide.txt	Fri Feb  7 14:58:40 2003
+++ ppc_diag/documents/diag_guide.txt	Mon May 12 15:25:33 2003
@@ -31,30 +31,38 @@
         3.4.1 Submenu Description
         3.4.2 Submenu Options
         3.4.3 Test Descriptions
-    3.5 Memory
-        3.5.1 Submenu Description
+    3.5 NAND Flash
+        3.5.1 Submenu Descriptions
         3.5.2 Submenu Options
         3.5.3 Test Descriptions
-    3.6 FEC Ethernet
-        3.6.1 Submenu description
-        3.6.2 Submenu options
-        3.6.3 Test descriptions
-    3.7 SCC1 Ethernet
+    3.6 Memory
+        3.6.1 Submenu Description
+        3.6.2 Submenu Options
+        3.6.3 Test Descriptions
+    3.7 FEC Ethernet
         3.7.1 Submenu description
         3.7.2 Submenu options
         3.7.3 Test descriptions
-    3.8 Ethernet Crossover
+    3.8 SCC1 Ethernet
         3.8.1 Submenu description
         3.8.2 Submenu options
-        3.8.3 Test description
-    3.9 Green Box DPRAM
+        3.8.3 Test descriptions
+    3.9 Ethernet Crossover
         3.9.1 Submenu description
         3.9.2 Submenu options
-        3.9.3 Test descriptions
-    3.10 Green Box XILINX
+        3.9.3 Test description
+    3.10 Green Box DPRAM
         3.10.1 Submenu description
         3.10.2 Submenu options
-        3.10.3 Test Descriptions
+        3.10.3 Test descriptions
+    3.11 Green Box XILINX
+        3.11.1 Submenu description
+        3.11.2 Submenu options
+        3.11.3 Test Descriptions
+    3.12 Red Box
+        3.12.1 Submenu description
+        3.12.2 Submenu options
+        3.12.3 Test descriptions
 
 
 
@@ -360,15 +368,15 @@
 The following sections describe the tests currently available.
 The test descriptions follow the format:
 
-3.1 Submenu name
+3.X Submenu name
 
-3.1.1 Description of submenu's purpose (may include figures,
+3.X.1 Description of submenu's purpose (may include figures,
 screen shots, tables, etc.)
 
-3.1.2 Description of options available (possible values,
+3.X.2 Description of options available (possible values,
 with default values in bold)
 
-3.1.3 Test Descriptions
+3.X.3 Test Descriptions
 
 Test Name
 
@@ -840,15 +848,264 @@
 Test Failures: -
   None.
 
-3.5 Memory
+3.5 NAND Flash
 
-3.5.1 Submenu Description
+3.5.1 Submenu Descriptions
+
+The tests in this menu exercise read, write, and erase operations
+on a NAND flash device (specifically the 8- and 16-MB Toshiba
+devices). Note that different makes and models of NAND flash
+recommend different methods for discovering bad blocks;
+check the NAND flash device's data sheet before attempting
+potentially destructive operations. For instance, some devices
+recommend searching for bad blocks by ensuring that all
+bits are '1' before ever performing any write or erase operations.
+
+3.5.2 Submenu Options
+
+Debug level: View diagnostics software debug information.
+Four levels of debugging are available: (0 = none, 1 = terse,
+2 = verbose, 3 = massive screen scroll).
+
+Page size: Set the number of bytes per page. If the device
+ID is recognized, this value will be set automatically.
+
+Pages per block: Set the number of pages per
+block. If the device ID is recognized, this value will be
+set automatically.
+
+Capacity: Set the total number of pages in the device. If
+the device ID is recognized, this value will be set automatically.
+
+NAND device ID: The NAND flash menu initialization
+executes the device ID read command automatically and fills
+in this field. If the initialization code recognizes the
+device ID, the other fields will be initialized as well.
+
+Page number: For the Dump NAND Flash Page
+test, selects which page to view.
+
+Block number: For block-based operations (write and
+erase), selects which block to operate on. The value 0xFFFFFFFF
+indicates all blocks.
+
+Mem copy start: Used only for the Dump NAND Flash Page
+test. The contents of the NAND flash page will be copied
+to the RAM starting at the address specified here before
+being printed.
+
+3.5.3 Test Descriptions
+
+ Test: Reset NAND Flash
+
+Test Description: This test sends the reset command
+  to the NAND flash.
+
+Test Modes: All test modes
+
+Test Options: -
+  Debug level: If set to a value other than '0', displays
+  the code returned by the NAND flash device.
+
+Test Failures: -
+  NAND Flash did not reset!: The NAND device did not return
+  the correct response for the reset command.
+
+ Test: Check For Bad Blocks
+
+Test Description: This test is intended for NAND flash
+  devices that recommend the erase, write 01010101b, erase,
+  write 10101010b, erase sequence for finding bad blocks
+  on the device. Do not use this test for devices that recommend
+  searching for bits that are not '1' when received from
+  the factory for determining bad blocks. See the Verify Erase/New Device
+  test description, below, for these devices. This test
+  will erase all data contained on the flash device. Also,
+  the bad block information will only be printed, not stored
+  on the NAND flash.
+
+Test Modes: Custom test
+
+Test Options: -
+  Page size: Set the number of bytes per page. Usually
+  pre-set by the menu initialization code, if the NAND flash
+  device is recognized.
+  Pages per block: Set the number of pages
+  contained within a flash block. Usually pre-set by the
+  menu initialization code, if the NAND flash device is
+  recognized.
+  Capacity: Set the total number of pages contained by the
+  flash device. Usually pre-set by the menu initialization
+  code, if the NAND flash device is recognized.
+  Block number: Set which block number to test. If
+  set to the value 0xFFFFFFFF, all flash blocks will be
+  tested, from block 0 up to the value Capacity / Pages per block.
+
+Test Failures: -
+  This test doesn't fail, it only prints a list of bad locations
+  on the NAND flash.
+
+ Test: Erase Blocks
+
+Test Description: Erase a given NAND flash block, or
+  all flash blocks.
+
+Test Modes: Custom test
+
+Test Options: - 
+  Page size: Set the number of bytes per page. Usually
+  pre-set by the menu initialization code, if the NAND flash
+  device is recognized.
+  Pages per block: Set the number of pages
+  contained within a flash block. Usually pre-set by the
+  menu initialization code, if the NAND flash device is
+  recognized.
+  Capacity: Set the total number of pages contained by the
+  flash device. Usually pre-set by the menu initialization
+  code, if the NAND flash device is recognized.
+  Block number: Indicate which block to erase. The
+  value 0xFFFFFFFF for this option will erase all blocks.
+
+Test Failures: -
+  Specified block # out of range: Double-check the Block number
+  option. It should be within the range 0 to (Capacity /
+  Pages per block).
+  NAND device reports erase failure in block: The NAND status
+  read indicated that the previous erase command failed.
+  Erase error in page: (Unlikely) The NAND status read did
+  not indicate a failure, but the contents of the block
+  contained one or more '0' bits.
+
+ Test: Write Test Ptn 1
+
+Test Description: Writes the binary pattern 01010101b
+  to each byte in the given block, or all flash blocks.
+  Make sure the blocks selected in the Block number
+  option have been erased.
+
+Test Modes: Custom test
+
+Test Options: -
+  Page size: Set the number of bytes per page. Usually
+  pre-set by the menu initialization code, if the NAND flash
+  device is recognized.
+  Pages per block: Set the number of pages
+  contained within a flash block. Usually pre-set by the
+  menu initialization code, if the NAND flash device is
+  recognized.
+  Capacity: Set the total number of pages contained by the
+  flash device. Usually pre-set by the menu initialization
+  code, if the NAND flash device is recognized.
+  Block number: Indicate which block to write. The
+  value 0xFFFFFFFF indicates all blocks.
+
+Test Failures: -
+  NAND device reports program failure in page: The NAND status
+  read indicated that the previous page write command failed.
+  It's possible the blocks selected for the test pattern
+  weren't erased; try erasing the blocks and run this test
+  again.
+  Program error in page: (Unlikely) The NAND status read
+  did not indicate a failure, but when read back, the contents
+  of one or more bytes was other than 01010101b.
+
+ Test: Write Test Ptn 2
+
+Test Description: Writes the binary pattern 10101010b
+  to each byte in the given block, or all flash blocks.
+  Make sure the blocks selected in the Block number
+  option have been erased.
+
+Test Modes: Custom test
+
+Test Options: -
+  Page size: Set the number of bytes per page. Usually
+  pre-set by the menu initialization code, if the NAND flash
+  device is recognized.
+  Pages per block: Set the number of pages
+  contained within a flash block. Usually pre-set by the
+  menu initialization code, if the NAND flash device is
+  recognized.
+  Capacity: Set the total number of pages contained by the
+  flash device. Usually pre-set by the menu initialization
+  code, if the NAND flash device is recognized.
+  Block number: Indicate which block to write. The
+  value 0xFFFFFFFF indicates all blocks.
+
+Test Failures: -
+  NAND device reports program failure in page: The NAND status
+  read indicated that the previous page write command failed.
+  It's possible the blocks selected for the test pattern
+  weren't erased; try erasing the blocks and run this test
+  again.
+  Program error in page: (Unlikely) The NAND status read
+  did not indicate a failure, but when read back, the contents
+  of one or more bytes was other than 10101010b.
+
+ Test: Get NAND Flash ID
+
+Test Description: Send the Read ID command to the NAND
+  flash, and display the device code read back from the
+  device.
+
+Test Modes: Custom test
+
+Test Options: -
+  None.
+
+Test Failures: -
+  None.
+
+ Test: Dump NAND Flash Page
+
+Test Description: Display the contents of a given NAND
+  flash page.
+
+Test Modes: Custom test
+
+Test Options: -
+  Page size: Set the number of bytes per page. Usually
+  pre-set by the menu initialization code, if the NAND flash
+  device is recognized.
+  Page number: Select which page to display.
+  Mem copy start: Select where in SDRAM to
+  copy the NAND flash page for the memory dump.
+
+Test Failures: -
+  None.
+
+ Test: Verify Erase/New Device
+
+Test Description: Read every byte in the NAND flash
+  and make sure there are no '0' bits. This test is recommended
+  for devices such as the Toshiba TC58V64BFT. When received
+  from the factory, this device should have no '0' bits.
+  Any '0' bits in the flash indicate a bad block.
+
+Test Modes: Custom test
+
+Test Options: -
+  Page size: Set the number of bytes per page. Usually
+  pre-set by the menu initialization code, if the NAND flash
+  device is recognized.
+  Capacity: Set the total number of pages contained by the
+  flash device. Usually pre-set by the menu initialization
+  code, if the NAND flash device is recognized.
+
+Test Failures: -
+  For the purposes of error logging, this test does not fail,
+  it only prints the first error it finds in the flash.
+  Bit error in byte: A '0' bit was found within a flash block.
+
+3.6 Memory
+
+3.6.1 Submenu Description
 
 The tests in this menu perform various tests of the installed
 RAM to find typical memory flaws. Some of these tests were
 inspired by the MemTest86 application for x86 hardware.
 
-3.5.2 Submenu Options
+3.6.2 Submenu Options
 
 Debug Level: View diagnostics software debug information.
 Four levels of debugging are available: (0 = none, 1 = terse,
@@ -931,7 +1188,7 @@
 custom test. Three sizes are supported: (1 = byte, 2 = word,
 4 = longword).
 
-3.5.3 Test Descriptions
+3.6.3 Test Descriptions
 
  Test: Quick Test
 
@@ -1101,14 +1358,14 @@
 Test Failures: -
   None.
 
-3.6 FEC Ethernet
+3.7 FEC Ethernet
 
-3.6.1 Submenu description
+3.7.1 Submenu description
 
 The tests in this submenu verify the functionality of the
 Fast Ethernet port.
 
-3.6.2 Submenu options
+3.7.2 Submenu options
 
 Debug level: Selects level of debugging output. Available
 levels are: (0 = none, 1 = terse, 2 = verbose, 3 = massive
@@ -1169,7 +1426,7 @@
 
 2nd_Rx_Base_Address: Not used in this menu
 
-3.6.3 Test descriptions
+3.7.3 Test descriptions
 
  Test: Operation Test
 
@@ -1355,14 +1612,14 @@
 Test Failures: -
   None.
 
-3.7 SCC1 Ethernet
+3.8 SCC1 Ethernet
 
-3.7.1 Submenu description
+3.8.1 Submenu description
 
 The tests in this menu verify the functionality of the SCC1
 ethernet port.
 
-3.7.2 Submenu options
+3.8.2 Submenu options
 
 Debug level: Selects level of debugging output. Available
 levels are: (0 = none, 1 = terse, 2 = verbose, 3 = massive
@@ -1422,7 +1679,7 @@
 
 2nd_Rx_Base_Address: Not used in this menu
 
-3.7.3 Test descriptions
+3.8.3 Test descriptions
 
  Test: Operation Test
 
@@ -1519,15 +1776,15 @@
   that didn't match the transmitted packet. This can happen
   if the transmit and receive buffers overlap.
 
-3.8 Ethernet Crossover
+3.9 Ethernet Crossover
 
-3.8.1 Submenu description
+3.9.1 Submenu description
 
 The test in this menu verifies the ability of each ethernet
 port to correctly receive from, and transmit to, the other
 port.
 
-3.8.2 Submenu options
+3.9.2 Submenu options
 
 Debug level: Selects level of debugging output. Available
 levels are: (0 = none, 1 = terse, 2 = verbose, 3 = massive
@@ -1601,7 +1858,7 @@
 Leave the default value unchanged unless you know what you're
 doing.
 
-3.8.3 Test description
+3.9.3 Test description
 
  Test: Crossover Test
 
@@ -1668,14 +1925,14 @@
   but it didn't match the transmitted packet. This can happen
   if any of the transmit and/or receive buffers overlap.
 
-3.9 Green Box DPRAM
+3.10 Green Box DPRAM
 
-3.9.1 Submenu description
+3.10.1 Submenu description
 
 The tests in this menu check whether the daughterboard's
 DPRAM works properly.
 
-3.9.2 <green_box_options>Submenu options
+3.10.2 <green_box_options>Submenu options
 
 Debug level: Selects level of debugging output. Available
 levels are: (0 = none, 1 = terse, 2 = verbose, 3 = massive
@@ -1751,7 +2008,7 @@
 to use when dumping memory via the Display Memory
 custom test. The only supported size is: 4 = longword.
 
-3.9.3 Test descriptions
+3.10.3 Test descriptions
 
  Test: Bank Aliasing
 
@@ -2009,14 +2266,14 @@
 Test Failures: -
   None.
 
-3.10 Green Box XILINX
+3.11 Green Box XILINX
 
-3.10.1 Submenu description
+3.11.1 Submenu description
 
 The tests in this menu verify the operation of the XILINX
 registers and the Green Box data capture ability.
 
-3.10.2 Submenu options
+3.11.2 Submenu options
 
 Debug level: Selects level of debugging output. Available
 levels are: (0 = none, 1 = terse, 2 = verbose, 3 = massive
@@ -2033,7 +2290,7 @@
 should write to a DPRAM bank before switching to another
 bank.
 
-3.10.3 Test Descriptions
+3.11.3 Test Descriptions
 
  Test: Registers
 
@@ -2120,3 +2377,58 @@
 
 Test Failures: -
   None.
+
+3.12 Red Box
+
+3.12.1 Submenu description
+
+The tests in this menu verify the HDB-10 transmission capability
+of the Red Box.
+
+3.12.2 Submenu options
+
+Debug level: Selects level of debugging output. Available
+levels are: (0 = none, 1 = terse, 2 = verbose, 3 = massive
+screen scroll)
+
+1st buffer base address: Unused
+
+Buffer size: Number of bytes to transmit. Limited to
+64kB
+
+Xmit pattern: Select a pattern to transmit. Available
+patterns are: (0=all 0's, 1 = all 1's, 2 = 01010101b, 3
+= 10101010b, 4 = Pseudo-Random, 5 = user-defined (see User pattern
+option), 6 = Summa test data, 7 = increment by 4 pattern)
+
+User pattern: Set the 2-byte pattern to be transmitted,
+if the Xmit pattern option has been set to user-defined.
+
+Test time: Unused
+
+3.12.3 Test descriptions
+
+ Test: Transmit Test
+
+Test Description: This test transmits data via the
+  HDB-10 interface, then examines the receive buffer to
+  make sure that it matches the transmit buffer.
+
+Test Modes: Basic and burn-in modes.
+
+Test Options: -
+  Buffer size: Selects how many bytes to transmit
+  (must be divisible by 4)
+  Xmit pattern: Selects which pattern to transmit
+  User pattern: If Xmit pattern
+  equals 5, set this to the desired 2-byte pattern
+
+Test Failures: -
+  Failed to transmit test buffer: The Xilinx status register
+  did not indicate a transmit interrupt within the timeout
+  period.
+  Failed to receive test buffer: The Xilinx status register
+  did not indicate a receive interrupt within the timeout
+  period.
+  Comparison failure in xmit word: The two buffers were compared
+  (disregarding the sync bit) and did not match.
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/entry/.cvsignore ppc_diag/entry/.cvsignore
--- ppc_diag-1.0.2/entry/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/entry/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/entry/.depend ppc_diag/entry/.depend
--- ppc_diag-1.0.2/entry/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/entry/.depend	Mon May 12 14:51:52 2003
@@ -0,0 +1,16 @@
+diag_init.o: diag_init.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/interrupts.h \
+   /home/speedy1/build/ppc_diag/includes/mem_calc.h \
+   /home/speedy1/build/ppc_diag/includes/system_log.h \
+   /home/speedy1/build/ppc_diag/includes/main_menu.h \
+   /home/speedy1/build/ppc_diag/includes/net.h \
+   /home/speedy1/build/ppc_diag/includes/power_up.h \
+   /home/speedy1/build/ppc_diag/includes/speed.h \
+   /home/speedy1/build/ppc_diag/includes/rtc.h \
+   /home/speedy1/build/ppc_diag/includes/led_test.h \
+   /home/speedy1/build/ppc_diag/includes/detect_db.h
+start.o: start.S \
+   /home/speedy1/build/ppc_diag/includes/ppc_asm.tmpl \
+   /home/speedy1/build/ppc_diag/includes/config.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/entry/diag_init.c ppc_diag/entry/diag_init.c
--- ppc_diag-1.0.2/entry/diag_init.c	Fri Feb  7 14:11:43 2003
+++ ppc_diag/entry/diag_init.c	Mon May 12 14:12:45 2003
@@ -42,9 +42,12 @@
 
 int diag_debug_mode = 0;
 int diag_mode = BASIC_TEST;
+ulong cpu_speed = 0;
 
 led_reg_size led_shadow;
 
+extern int green_box_present;
+
 int diag_init()
 {
     int i = 0;
@@ -53,14 +56,19 @@
     ulong argc = reg_table[6];
     char *argv_s1, *argv_s2;
     volatile ulong msr_val;
-    ulong calc_speed = 0;
     int skip_mem_counter = 0;
 
     LEDS_OFF; /* turn all LEDs off */
     init_interrupts();
     init_timebase();  /* start up the timebase register */
-    calc_speed = get_gclk_freq();
-    serial_init( CPU_CLOCK_RATE, BAUD_RATE );
+#ifdef CPU_CLOCK_RATE
+    /* override caculated clock freq if PIT/RTC has no 32.768KHz input */
+    cpu_speed = CPU_CLOCK_RATE;
+    printf("Forcing CPU speed to %ld\n", cpu_speed);
+#else
+    cpu_speed = get_gclk_freq();
+#endif
+    serial_init( cpu_speed, BAUD_RATE );
     serial_puts( "\n\n" );
     
     /* disable interrupts; interrupt base addr at 0x0 */
@@ -70,13 +78,14 @@
 
     /* @@@@@ enable instruction cache (?) */
 
-    printf("Calculated CPU speed: %ld\n", calc_speed);
+    printf("Calculated CPU speed: %ld\n", cpu_speed);
 #if defined(ENABLE_DALLAS_RTC_SUPPORT) && defined(ENABLE_PPC_RTC_SUPPORT)
     /* copy the Dallas RTC time into the ppc RTC */
     copy_dallas_to_ppc_rtc();
 #endif
 #ifdef ENABLE_GREEN_BOX_SUPPORT
-    detect_green_box();
+      detect_green_box();
+      green_box_present = 1; /* force present until the id reg is back in */
 #endif
     if (argc >= 2)
     { /* 2nd argument indicates power-up mode */
@@ -127,9 +136,9 @@
     printf("MSR set to: %08lx\n", msr_val);
     diag_mode = BASIC_TEST;
     if (skip_mem_counter == 1)
-        calculate_memory_size( 0 );
+        calculate_memory_size( 16, 0 );
     else
-        calculate_memory_size( 1 );
+        calculate_memory_size( 16, 1 );
     init_error_log();
     display_main_menu();
     for (counter = 0; counter < 0xffffffff; counter++)
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/eth_tests/.cvsignore ppc_diag/eth_tests/.cvsignore
--- ppc_diag-1.0.2/eth_tests/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/eth_tests/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/eth_tests/.depend ppc_diag/eth_tests/.depend
--- ppc_diag-1.0.2/eth_tests/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/eth_tests/.depend	Mon May 12 14:51:52 2003
@@ -0,0 +1,45 @@
+eth_fec_test.o: eth_fec_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/commproc.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   eth_menu.h \
+   net.h \
+   /home/speedy1/build/ppc_diag/includes/mem_display.h \
+   /home/speedy1/build/ppc_diag/includes/pkt_stat.h \
+   eth_err.h \
+   /home/speedy1/build/ppc_diag/includes/fec.h
+eth_scc1_test.o: eth_scc1_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   eth_menu.h \
+   net.h \
+   /home/speedy1/build/ppc_diag/includes/mem_display.h \
+   eth_err.h \
+   /home/speedy1/build/ppc_diag/includes/scc.h
+eth_menu.o: eth_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   eth_fec_test.h \
+   eth_scc1_test.h \
+   eth_menu.h \
+   eth_err.h \
+   crossover.h
+eth_err.o: eth_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   eth_menu.h \
+   eth_err.h
+crossover.o: crossover.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   eth_menu.h \
+   net.h \
+   /home/speedy1/build/ppc_diag/includes/mem_display.h \
+   /home/speedy1/build/ppc_diag/includes/pkt_stat.h \
+   /home/speedy1/build/ppc_diag/includes/fec.h \
+   /home/speedy1/build/ppc_diag/includes/scc.h \
+   crossover.h \
+   eth_menu.h \
+   eth_err.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/eth_tests/crossover.c ppc_diag/eth_tests/crossover.c
--- ppc_diag-1.0.2/eth_tests/crossover.c	Fri Feb  7 14:31:30 2003
+++ ppc_diag/eth_tests/crossover.c	Fri May  9 17:52:01 2003
@@ -44,6 +44,8 @@
 
 typedef enum { SCCtoFEC, FECtoSCC } test_direction;
 
+extern ulong cpu_speed;
+
 #define DBFN "eth_xover_init()"
 void eth_xover_init(void)
 {
@@ -435,8 +437,10 @@
         getc();
     }
     /* setup ethernet ports */
-    fec_init( BUS_CLOCK_RATE, fec_eth, 3 /* no loopback */, speed, debug );
-    scc_init( BUS_CLOCK_RATE, scc_eth, 3 /* no loopback */, debug );
+    fec_init( cpu_speed * BUS_CLOCK_RATIO, fec_eth, 3 /* no loopback */, speed,
+            debug );
+    scc_init( cpu_speed * BUS_CLOCK_RATIO, scc_eth, 3 /* no loopback */,
+            debug );
     /* check fec link status before running test */
     if (wait_for_fec_link( 20 ) != 0)
     {
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/eth_tests/eth_fec_test.c ppc_diag/eth_tests/eth_fec_test.c
--- ppc_diag-1.0.2/eth_tests/eth_fec_test.c	Fri Feb  7 14:31:30 2003
+++ ppc_diag/eth_tests/eth_fec_test.c	Fri May  9 17:52:01 2003
@@ -45,6 +45,8 @@
 extern uint rxIdx;
 extern uint txIdx;
 
+extern ulong cpu_speed;
+
 #define DBFN "eth_fec_init()"
 void eth_fec_init(void)
 {
@@ -162,7 +164,7 @@
         NetFECTxPackets[i] = (unsigned char *)(xmit_buffer + (i * 1520));
     }
     /* setup fec ethernet port */
-    fec_init( BUS_CLOCK_RATE, src_eth, loopback, speed, debug );
+    fec_init( cpu_speed * BUS_CLOCK_RATIO, src_eth, loopback, speed, debug );
     /* check link status before running test */
     if ((loopback > 0) && !((loopback == 1) && (speed == 0)))
     {
@@ -459,10 +461,11 @@
     }
     /* setup fec ethernet port */
     if ((chainaddr == 0) || (chainlen == 0))
-        fec_init( BUS_CLOCK_RATE, src_eth, loopback, speed, debug );
+        fec_init( cpu_speed * BUS_CLOCK_RATIO, src_eth, loopback, speed,
+                debug );
     else
-        fec_init_chain( BUS_CLOCK_RATE, src_eth, loopback, chainlen,
-                (cbd_t *)chainaddr, speed );
+        fec_init_chain( cpu_speed * BUS_CLOCK_RATIO, src_eth, loopback,
+                chainlen, (cbd_t *)chainaddr, speed );
     /* check link status before running test */
     if (loopback > 0)
     {
@@ -620,7 +623,7 @@
         NetFECTxPackets[i] = (unsigned char *)(xmit_buffer + (i * 1520));
     }
     /* setup fec ethernet port */
-    fec_init( BUS_CLOCK_RATE, src_eth, loopback, speed, debug );
+    fec_init( cpu_speed * BUS_CLOCK_RATIO, src_eth, loopback, speed, debug );
     /* check link status before running test */
     if ((loopback > 0) && !((loopback == 1) && (speed == 0)))
     {
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/eth_tests/eth_scc1_test.c ppc_diag/eth_tests/eth_scc1_test.c
--- ppc_diag-1.0.2/eth_tests/eth_scc1_test.c	Fri Feb  7 14:31:30 2003
+++ ppc_diag/eth_tests/eth_scc1_test.c	Fri May  9 17:52:01 2003
@@ -43,6 +43,8 @@
 extern uint rxIdx;
 extern uint txIdx;
 
+extern ulong cpu_speed;
+
 #define DBFN "eth_scc_init()"
 void eth_scc_init(void)
 {
@@ -161,7 +163,7 @@
         NetSCCTxPackets[i] = (unsigned char *)(xmit_buffer + (i * 1520));
     }
     /* setup scc1 ethernet port */
-    scc_init( BUS_CLOCK_RATE, src_eth, loopback, debug );
+    scc_init( cpu_speed * BUS_CLOCK_RATIO, src_eth, loopback, debug );
     /* can't detect link signal from xcvr! */
     if (debug > 1)
     { /* display SCC registers */
@@ -292,7 +294,7 @@
         NetSCCTxPackets[i] = (unsigned char *)(xmit_buffer + (i * 1520));
     }
     /* setup scc1 ethernet port */
-    scc_init( BUS_CLOCK_RATE, src_eth, loopback, debug );
+    scc_init( cpu_speed * BUS_CLOCK_RATIO, src_eth, loopback, debug );
     /* can't check for link on 10 Mb port! */
     if (debug > 1)
     { /* display scc registers */
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/fec/.cvsignore ppc_diag/fec/.cvsignore
--- ppc_diag-1.0.2/fec/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/fec/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/fec/.depend ppc_diag/fec/.depend
--- ppc_diag-1.0.2/fec/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/fec/.depend	Mon May 12 14:51:52 2003
@@ -0,0 +1,10 @@
+fec.o: fec.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/commproc.h \
+   /home/speedy1/build/ppc_diag/includes/command.h \
+   /home/speedy1/build/ppc_diag/includes/net.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/mem_display.h \
+   /home/speedy1/build/ppc_diag/includes/eth_menu.h \
+   fec.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_dpram/.cvsignore ppc_diag/greenbox_dpram/.cvsignore
--- ppc_diag-1.0.2/greenbox_dpram/.cvsignore	Fri Jan  3 11:07:22 2003
+++ ppc_diag/greenbox_dpram/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_dpram/.depend ppc_diag/greenbox_dpram/.depend
--- ppc_diag-1.0.2/greenbox_dpram/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/greenbox_dpram/.depend	Mon May 12 14:51:53 2003
@@ -0,0 +1,24 @@
+gb_dpram_menu.o: gb_dpram_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   /home/speedy1/build/ppc_diag/includes/gb_xilinx_test.h \
+   gb_dpram_err.h \
+   gb_dpram_test.h \
+   gb_dpram_menu.h
+gb_dpram_err.o: gb_dpram_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   /home/speedy1/build/ppc_diag/includes/dma_test.h \
+   gb_dpram_test.h \
+   gb_dpram_menu.h \
+   gb_dpram_err.h
+gb_dpram_test.o: gb_dpram_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   /home/speedy1/build/ppc_diag/includes/dma_test.h \
+   /home/speedy1/build/ppc_diag/includes/gb_xilinx_test.h \
+   gb_dpram_menu.h \
+   gb_dpram_test.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_dpram/gb_dpram_test.c ppc_diag/greenbox_dpram/gb_dpram_test.c
--- ppc_diag-1.0.2/greenbox_dpram/gb_dpram_test.c	Thu Jan  9 16:27:47 2003
+++ ppc_diag/greenbox_dpram/gb_dpram_test.c	Thu May  1 11:31:26 2003
@@ -33,6 +33,7 @@
 #include "gb_dpram_menu.h"
 #include "gb_dpram_test.h"
 
+#ifdef ENABLE_GREEN_BOX_SUPPORT
 extern int diag_mode;
 extern test_option gb_dpram_options[LastOption];
 
@@ -48,23 +49,11 @@
 {
     unsigned long *xilinx_ctrl = (unsigned long *)XILINX_BASE_ADDR;
 
-    bank_num &= 0xF; /* only 16 banks (for now) */
+    bank_num &= 0x8; /* only 16 banks (for now) */
     if (bank_num & 0x8)
         *xilinx_ctrl |= XIL_CNTRL_LP_ADR_A17;
     else
         *xilinx_ctrl &= ~(XIL_CNTRL_LP_ADR_A17);
-    if (bank_num & 0x4)
-        *xilinx_ctrl |= XIL_CNTRL_LP_ADR_A16;
-    else
-        *xilinx_ctrl &= ~(XIL_CNTRL_LP_ADR_A16);
-    if (bank_num & 0x2)
-        *xilinx_ctrl |= XIL_CNTRL_LP_ADR_A15;
-    else
-        *xilinx_ctrl &= ~(XIL_CNTRL_LP_ADR_A15);
-    if (bank_num & 0x1)
-        *xilinx_ctrl |= XIL_CNTRL_LP_ADR_A14;
-    else
-        *xilinx_ctrl &= ~(XIL_CNTRL_LP_ADR_A14);
 }
 
 int dpram_bank_alias_test( test_option *t_opts, unsigned int *results )
@@ -547,4 +536,6 @@
     t_opts[DPRAMTestSize].init_value = LongWord;
     return 0;
 }
+
+#endif
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_xilinx/.cvsignore ppc_diag/greenbox_xilinx/.cvsignore
--- ppc_diag-1.0.2/greenbox_xilinx/.cvsignore	Fri Jan  3 11:07:22 2003
+++ ppc_diag/greenbox_xilinx/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_xilinx/.depend ppc_diag/greenbox_xilinx/.depend
--- ppc_diag-1.0.2/greenbox_xilinx/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/greenbox_xilinx/.depend	Mon May 12 14:51:53 2003
@@ -0,0 +1,37 @@
+gb_xilinx_menu.o: gb_xilinx_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   gb_xilinx_test.h \
+   gb_xilinx_err.h \
+   gb_xilinx_menu.h
+gb_xilinx_err.o: gb_xilinx_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/reg_err.h \
+   gb_xilinx_menu.h \
+   gb_xilinx_err.h
+gb_xilinx_test.o: gb_xilinx_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/interrupts.h \
+   /home/speedy1/build/ppc_diag/includes/dma_test.h \
+   /home/speedy1/build/ppc_diag/includes/prandm.h \
+   /home/speedy1/build/ppc_diag/includes/timer.h \
+   /home/speedy1/build/ppc_diag/includes/reg_test.h \
+   /home/speedy1/build/ppc_diag/includes/reg_err.h \
+   /home/speedy1/build/ppc_diag/includes/gb_dpram_test.h \
+   gb_xilinx_menu.h \
+   gb_xilinx_err.h \
+   gb_xilinx_intr.h \
+   gb_xilinx_test.h
+gb_xilinx_intr.o: gb_xilinx_intr.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/interrupts.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/dma_test.h \
+   /home/speedy1/build/ppc_diag/includes/timer.h \
+   /home/speedy1/build/ppc_diag/includes/gb_dpram_test.h \
+   gb_xilinx_menu.h \
+   gb_xilinx_test.h \
+   gb_xilinx_intr.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_xilinx/gb_xilinx_intr.c ppc_diag/greenbox_xilinx/gb_xilinx_intr.c
--- ppc_diag-1.0.2/greenbox_xilinx/gb_xilinx_intr.c	Thu Jan  9 16:27:47 2003
+++ ppc_diag/greenbox_xilinx/gb_xilinx_intr.c	Fri May  9 18:32:16 2003
@@ -34,6 +34,8 @@
 #include "gb_xilinx_test.h"
 #include "gb_xilinx_intr.h"
 
+#ifdef ENABLE_GREEN_BOX_SUPPORT
+
 extern int xilinx_recv_bank_number;
 extern int xilinx_xmit_bank_number;
 extern int dma_recv_bank_number;
@@ -52,10 +54,6 @@
 volatile int dma_transfer_counter = 0;
 volatile int xilinx_xmit_stalled = 0;
 volatile int both_buffs_initd = 0;
-/* error counters */
-static volatile int overflow_counter = 0;
-static volatile int collision_counter = 0;
-static volatile int manchester_error_counter = 0;
 
 void simple_recv_intr_handler()
 {
@@ -99,7 +97,7 @@
     {
         xilinx_recv_bank_number = -1;
         /* disable xilinx interrupts */
-        UFE_receive_test_cleanup();
+        UFE_test_cleanup();
     }
     if ((dma_recv_bank_number == xilinx_recv_bank_number) &&
             (dma_recv_bank_number != -1))
@@ -205,33 +203,6 @@
         xilinx_xmit_intr_handler();
     }
 #endif /* NOT_YET */
-    if (xilinx_status & XIL_STAT_INT_RECV_OVF)
-    {
-        *xilinx_control_reg &= ~(XIL_CNTRL_ENA_ROVF_INTR);
-        // *xilinx_control_reg |= XIL_CNTRL_ENA_ROVF_INTR;
-#ifdef SIMULATE_GREEN_BOX
-        *xilinx_status_reg &= ~(XIL_STAT_INT_RECV_OVF);
-#endif /* SIMULATE_GREEN_BOX */
-        overflow_counter++;
-    }
-    if (xilinx_status & XIL_STAT_INT_XMIT_COLSN)
-    {
-        *xilinx_control_reg &= ~(XIL_CNTRL_ENA_COLSN_INTR);
-        // *xilinx_control_reg |= XIL_CNTRL_ENA_COLSN_INTR;
-#ifdef SIMULATE_GREEN_BOX
-        *xilinx_status_reg &= ~(XIL_STAT_INT_XMIT_COLSN);
-#endif /* SIMULATE_GREEN_BOX */
-        collision_counter++;
-    }
-    if (xilinx_status & XIL_STAT_INT_PAR_ERR)
-    {
-        *xilinx_control_reg &= ~(XIL_CNTRL_ENA_PAR_INTR);
-        // *xilinx_control_reg |= XIL_CNTRL_ENA_PAR_INTR;
-#ifdef SIMULATE_GREEN_BOX
-        *xilinx_status_reg &= ~(XIL_STAT_INT_PAR_ERR);
-#endif /* SIMULATE_GREEN_BOX */
-        manchester_error_counter++;
-    }
 #ifdef XILINX_INTR_DEBUG
     printf("Received XILINX interrupt on PC4.\n");
 #endif /* XILINX_INTR_DEBUG */
@@ -306,4 +277,6 @@
     }
 #endif /* DEBUG_DMA_ENGINE */
 }
+
+#endif
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_xilinx/gb_xilinx_test.c ppc_diag/greenbox_xilinx/gb_xilinx_test.c
--- ppc_diag-1.0.2/greenbox_xilinx/gb_xilinx_test.c	Fri Feb  7 14:38:59 2003
+++ ppc_diag/greenbox_xilinx/gb_xilinx_test.c	Fri May  9 18:33:43 2003
@@ -25,6 +25,7 @@
  */
 
 #include "ppcboot.h"
+#include "diags.h"
 #include "printf.h"
 #include "interrupts.h"
 #include "dma_test.h"
@@ -38,29 +39,24 @@
 #include "gb_xilinx_intr.h"
 #include "gb_xilinx_test.h"
 
+#ifdef ENABLE_GREEN_BOX_SUPPORT
+
 extern volatile int dma_intr_counter;
 extern volatile int xilinx_intr_count;
 extern volatile int dma_transfer_counter;
-extern volatile int xilinx_xmit_stalled;
 
 int xilinx_recv_bank_number = -1;
-int xilinx_xmit_bank_number = -1;
 int dma_recv_bank_number = -1;
-int xmit_bank_number = -1;
 recv_xilinx_buf_q_entry *recv_buf_ready_q_head = NULL;
 recv_xilinx_buf_q_entry *recv_buf_ready_q_tail = NULL;
-xmit_xilinx_buf_q_entry *xmit_buf_ready_q_head = NULL;
-xmit_xilinx_buf_q_entry *xmit_buf_ready_q_tail = NULL;
 int xilinx_free_buffer = -1;
 int dma_recv_entry_counter = 0;
-int xmit_entry_counter = 0;
 unsigned long sdram_buffer_base = 0;
 unsigned long recv_buffer_size = 0;
 
 recv_xilinx_buf_q_entry xilinx_recv_buf_q_array[MAX_RECV_QUEUE_LENGTH];
-xmit_xilinx_buf_q_entry xilinx_xmit_buf_q_array[MAX_XMIT_QUEUE_LENGTH];
  
-reg_test_info xilinx_reg_test_settings[16] =
+reg_test_info xilinx_reg_test_settings[12] =
 {
     { "Control Register", ControlReg * 4, XIL_CNTRL_MASK,
         (0x11111111L & XIL_CNTRL_MASK), 3, 1, 0 },
@@ -86,19 +82,13 @@
         0, 0, 0, 0 },
     { "Token ID", TokenID * 4, 0x000000FF,
         (0x77777777 & 0x000000FF), 3, 1, 0 },
-    { "Token Assign Rand #", TokenAssignRand * 4, 0x000000FF,
-        (0x88888888 & 0x000000FF), 3, 1, 0 },
-    { "BTO Count", BTOCnt * 4, 0xFFFFFFFF,
-        (0x99999999 & 0xFFFFFFFF), 3, 1, 0 },
-    { "BTO Time Interval", BTOTimeInt * 4, 0xFFFFFFFF,
-        (0xAAAAAAAA & 0xFFFFFFFF), 3, 1, 0 },
 };
 
 reg_set_info xilinx_reg_set =
 {
     XILINX_BASE_ADDR,
     4,
-    15,
+    12,
     xilinx_reg_test_settings
 };
 
@@ -213,38 +203,7 @@
     xilinx_intr_count = 0;
     immr->im_cpic.cpic_cimr |= CPM_CIPR_PC4;
     /* enable xmit interrupt in the ctrl register */
-    *xilinx_ctrl_reg |= (XIL_CNTRL_ENA_XMIT_INTR | XIL_CNTRL_ENA_MNC_XMIT1);
-}
-
-int sync_on_rgat()
-{
-    int timeout = 110;  /* RGAT should go active every second */
-    unsigned long *xilinx_stat_reg = (unsigned long*)(XILINX_BASE_ADDR +
-            (StatusReg * 4));
-
-    while (timeout > 0)
-    {
-        if ((*xilinx_stat_reg & XIL_STAT_RGAT) != 0)
-        {
-            break;
-        }
-        msdelay( 10 );
-        timeout--;
-    }
-    if (timeout != 0)
-    {
-        timeout = 110;
-        while (timeout > 0)
-        {
-            if ((*xilinx_stat_reg & XIL_STAT_RGAT) == 0)
-            {
-                return 0;
-            }
-            msdelay( 10 );
-            timeout--;
-        }
-    }
-    return 1;
+    *xilinx_ctrl_reg |= (XIL_CNTRL_ENA_XMIT_INTR);
 }
 
 int gb_intr_test( test_option *t_opts, unsigned int *results )
@@ -268,7 +227,7 @@
     allow_cpm_intr();
     enable_interrupts();
     if (simulated_intr)
-        sim_xilinx_intr( XIL_STAT_INT_PEND );
+        sim_xilinx_intr( XIL_STAT_INT_RBUFF1_DONE );
     else
     { /* setup a receive buffer and enable receive to trigger an interrupt */
         *xilinx_recv1_reg = 0;
@@ -334,13 +293,13 @@
     select_lp_bank( 0 );
 }
 
-void UFE_receive_test_cleanup( void )
+void UFE_test_cleanup( void )
 {
     unsigned long *xilinx_ctrl_reg = (unsigned long*)(XILINX_BASE_ADDR +
             ControlReg);
 
     *xilinx_ctrl_reg &= ~(XIL_CNTRL_ENA_RBUFF1_INTR |
-            XIL_CNTRL_ENA_RBUFF2_INTR );
+            XIL_CNTRL_ENA_RBUFF2_INTR | XIL_CNTRL_ENA_XMIT_INTR );
     *xilinx_ctrl_reg &= ~(XIL_CNTRL_ENA_RECV);
     *xilinx_ctrl_reg &= ~(XIL_CNTRL_ENA_XMIT_NOW);
 }
@@ -582,7 +541,7 @@
         timeout--;
         if (timeout == 0)
         {
-            UFE_receive_test_cleanup();
+            UFE_test_cleanup();
             stop_dma();
             disable_interrupts();
             mask_cpm_intr();
@@ -598,7 +557,7 @@
         }
         msdelay( 100 );
     }
-    UFE_receive_test_cleanup();
+    UFE_test_cleanup();
     stop_dma();
     disable_interrupts();
     mask_cpm_intr();
@@ -618,62 +577,6 @@
     return 0;
 }
 
-#define DBFN "append_xilinx_xmit_DMA_entry()"
-void append_xilinx_xmit_DMA_entry( unsigned int buffer_base, int byte_count )
-{
-    unsigned int dpram_address = GB_DPRAM_BASE_ADDR;
-    
-    if (recv_buf_ready_q_head == NULL)
-    { /* need a new queue */
-        xmit_buf_ready_q_head = &(xilinx_xmit_buf_q_array[0]);
-        xmit_buf_ready_q_tail = &(xilinx_xmit_buf_q_array[0]);
-        xmit_buf_ready_q_head->next = &(xilinx_xmit_buf_q_array[0]);
-        xmit_buf_ready_q_head->prev = &(xilinx_xmit_buf_q_array[0]);
-    }
-    else if (xmit_buf_ready_q_tail == xmit_buf_ready_q_head)
-    { /* only one item in the buffer */
-        xmit_buf_ready_q_tail++; /* increment to next array element */
-        /* array bounds checking */
-        if (xmit_buf_ready_q_tail >=
-                &xilinx_xmit_buf_q_array[MAX_RECV_QUEUE_LENGTH])
-            xmit_buf_ready_q_tail = &(xilinx_xmit_buf_q_array[0]);
-        xmit_buf_ready_q_head->next = xmit_buf_ready_q_tail;
-        xmit_buf_ready_q_head->prev = xmit_buf_ready_q_tail;
-        xmit_buf_ready_q_tail->next = xmit_buf_ready_q_head;
-        xmit_buf_ready_q_tail->prev = xmit_buf_ready_q_head;
-    }
-    else if (xmit_entry_counter >= MAX_XMIT_QUEUE_LENGTH)
-    {
-        printf("Out of buffers in %s!  Aborting DMA xmit queue entry..\n",
-                DBFN);
-        return;
-    }
-    else
-    {
-        xmit_buf_ready_q_tail->next =
-            xmit_buf_ready_q_tail + 1; /* pointer arithmetic */
-        /* array bounds checking */
-        if (xmit_buf_ready_q_tail->next >=
-                &xilinx_xmit_buf_q_array[MAX_XMIT_QUEUE_LENGTH])
-            xmit_buf_ready_q_tail->next = &(xilinx_xmit_buf_q_array[0]);
-        xmit_buf_ready_q_tail->next->prev = xmit_buf_ready_q_tail;
-        xmit_buf_ready_q_tail = xmit_buf_ready_q_tail->next;
-        xmit_buf_ready_q_tail->next = xmit_buf_ready_q_head;
-        xmit_buf_ready_q_head->prev = xmit_buf_ready_q_tail;
-    }
-    /* only need to know the byte count and buffer base address.
-     * The transmit interrupt will calculate the DPRAM base address */
-    xmit_buf_ready_q_tail->sdram_base_address = buffer_base;
-    xmit_buf_ready_q_tail->byte_count = byte_count;
-    xmit_entry_counter++;
-
-    /* check to see if the XILINX transmission has stalled */
-    if (xilinx_xmit_stalled)
-    {
-    }
-}
-#undef DBFN
-
 void copy_buffer_to_dpram( int bank_number, unsigned long buffer_base,
         int nbytes )
 {
@@ -688,31 +591,6 @@
     }
 }
 
-/* only 1 DMA channel available; use memory copy for xmit */
-void UFE_transmit_test_setup( void )
-{
-    unsigned long *xilinx_ctrl_reg = (unsigned long*)(XILINX_BASE_ADDR +
-            ControlReg);
-    unsigned long *xilinx_buf_size_reg =
-        (unsigned long*)(XILINX_BASE_ADDR + XmitBuffSize);
-
-    xilinx_xmit_bank_number = 0;
-    xmit_bank_number = -1;
-    xmit_buf_ready_q_head = NULL;
-    xmit_buf_ready_q_tail = NULL;
-    xmit_entry_counter = 0;
-
-    memset( (void*)xilinx_xmit_buf_q_array, 0,
-            sizeof( xmit_xilinx_buf_q_entry ) * 
-            MAX_XMIT_QUEUE_LENGTH );
-    /* @@@@ init the xmit bus # in the XILINX ctrl register ? */
-    *xilinx_ctrl_reg = XIL_CNTRL_ENA_XMIT_NOW;
-    /* init the interrupt generation bits in the XILINX ctrl register */
-    *xilinx_ctrl_reg |= (XIL_CNTRL_ENA_XMIT_INTR);
-    /* init the recv buffer size register in the XILINX */
-    *xilinx_buf_size_reg = BUFFER_SIZE;
-}
-
 int dump_xilinx_regs( test_option *t_opts, unsigned int *results )
 {
     unsigned long *xil_reg = (unsigned long*)(XILINX_BASE_ADDR + ControlReg);
@@ -725,4 +603,6 @@
     }
     return 0;
 }
+
+#endif
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/greenbox_xilinx/gb_xilinx_test.h ppc_diag/greenbox_xilinx/gb_xilinx_test.h
--- ppc_diag-1.0.2/greenbox_xilinx/gb_xilinx_test.h	Thu Jan  9 16:27:47 2003
+++ ppc_diag/greenbox_xilinx/gb_xilinx_test.h	Mon May 12 14:12:45 2003
@@ -74,72 +74,39 @@
 {
     ControlReg, StatusReg, RecvBuff1Base, RecvBuff2Base, XmitBuffBase,
     RecvBuffSize, XmitBuffSize, ActRecvBuffAdr, ActRecvBuffCnt,
-    ActXmitBuffAdr, ActXmitBuffCnt, TokenID, TokenAssignRand,
-    BTOCnt, BTOTimeInt, XILVersions
+    ActXmitBuffAdr, ActXmitBuffCnt, TokenID
 } xilinx_reg_names;
 
 /* Xilinx control register bits */
 #define XIL_CNTRL_LP_ADR_A17      0x80000000L
 #define XIL_CNTRL_ENA_RECV        0x40000000L
-#define XIL_CNTRL_RESERVED1       0x20000000L
-#define XIL_CNTRL_ENA_XMIT_NOW    0x10000000L
-#define XIL_CNTRL_ENA_XMIT_TOK    0x08000000L
-#define XIL_CNTRL_ENA_TOK         0x04000000L
-#define XIL_CNTRL_ENA_TOK_ID_ASN  0x02000000L
-#define XIL_CNTRL_ENA_TOK_ID_ADJ  0x01000000L
-#define XIL_CNTRL_RP_ADR_A17      0x00800000L
-#define XIL_CNTRL_RP_ADR_A16      0x00400000L
-#define XIL_CNTRL_LP_ADR_A16      0x00200000L
-#define XIL_CNTRL_LP_ADR_A15      0x00100000L
-#define XIL_CNTRL_LP_ADR_A14      0x00080000L
-#define XIL_CNTRL_PAR_ERR_LED     0x00002000L
-#define XIL_CNTRL_MNC_ERR_LED     0x00001000L
-#define XIL_CNTRL_COLSN_ERR_LED   0x00000800L
-#define XIL_CNTRL_SEL_XMIT_PAR    0x00000400L
-#define XIL_CNTRL_ENA_BTO_INTR    0x00000200L
-#define XIL_CNTRL_ENA_PAR_INTR    0x00000100L
-#define XIL_CNTRL_ENA_COLSN_INTR  0x00000080L
-#define XIL_CNTRL_ENA_RBUFF1_INTR 0x00000040L
-#define XIL_CNTRL_ENA_RBUFF2_INTR 0x00000020L
-#define XIL_CNTRL_ENA_ROVF_INTR   0x00000010L
-#define XIL_CNTRL_ENA_XMIT_INTR   0x00000008L
-#define XIL_CNTRL_SEL_MNC_RECV    0x00000004L
-#define XIL_CNTRL_ENA_MNC_XMIT1   0x00000002L
-#define XIL_CNTRL_ENA_MNC_XMIT2   0x00000001L
-#define XIL_CNTRL_MASK            0xDFF83FFFL
-#define XIL_CNTRL_QUIET_MASK      0x5F0003FFL
+#define XIL_CNTRL_ENA_XMIT_NOW    0x20000000L
+#define XIL_CNTRL_ENA_XMIT        0x10000000L
+#define XIL_CNTRL_RP_ADR_A17      0x08000000L
+#define XIL_CNTRL_RP_ADR_A16      0x04000000L
+#define XIL_CNTRL_ENA_RBUFF1_INTR 0x00000004L
+#define XIL_CNTRL_ENA_RBUFF2_INTR 0x00000002L
+#define XIL_CNTRL_ENA_XMIT_INTR   0x00000001L
+#define XIL_CNTRL_MASK            0xFC000007L
+#define XIL_CNTRL_QUIET_MASK      0x70000000L
 
 /* Xilinx status register bits */
-#define XIL_STAT_ILL_CNTRL        0x80000000L
-#define XIL_STAT_RBUFF1_ACT       0x40000000L
-#define XIL_STAT_RBUFF2_ACT       0x20000000L
-#define XIL_STAT_XBUFF_ACT        0x10000000L
-#define XIL_STAT_RBUFF1_DONE      0x08000000L
-#define XIL_STAT_RBUFF2_DONE      0x04000000L
-#define XIL_STAT_XBUFF_DONE       0x02000000L
-#define XIL_STAT_RECV_OVF         0x01000000L
-#define XIL_STAT_XMIT_COLSN       0x00800000L
-#define XIL_STAT_MNC_SIG_ERR      0x00400000L
-#define XIL_STAT_PAR_ERR          0x00200000L
-#define XIL_STAT_INT_PEND         0x00100000L
-#define XIL_STAT_RUNNING          0x00010000L
-#define XIL_STAT_RGAT             0x00008000L
-#define XIL_STAT_WATV             0x00004000L
-#define XIL_STAT_INT_PAR_ERR      0x00000100L
-#define XIL_STAT_INT_XMIT_COLSN   0x00000080L
-#define XIL_STAT_INT_RBUFF1_DONE  0x00000040L
-#define XIL_STAT_INT_RBUFF2_DONE  0x00000020L
-#define XIL_STAT_INT_RECV_OVF     0x00000010L
-#define XIL_STAT_INT_XBUFF_DONE   0x00000008L
-#define XIL_STAT_MASK             0xFFF00001L
-#define XIL_STAT_INT_MASK         0x000001F8L
+#define XIL_STAT_ILL_CNTRL        0x00008000L
+#define XIL_STAT_RBUFF1_ACT       0x00004000L
+#define XIL_STAT_RBUFF2_ACT       0x00002000L
+#define XIL_STAT_XBUFF_ACT        0x00001000L
+#define XIL_STAT_INT_RBUFF1_DONE  0x00000004L
+#define XIL_STAT_INT_RBUFF2_DONE  0x00000002L
+#define XIL_STAT_INT_XBUFF_DONE   0x00000001L
+#define XIL_STAT_MASK             0x0000F007L
+#define XIL_STAT_INT_MASK         0x00000007L
+#define XIL_STAT_FPGA_REV         0xFFFF0000L
 
 /* XILINX revision constants */
-#define GREEN_BOX_ID      0x77000000
-#define GREEN_BOX_ID_MASK 0xFF000000
-#define HXCTL_REV_MASK    0x00FFF000
-#define XMAN_REV_MASK     0x00000FFF
-#define HXCTL_REV_SHIFT   12
+#define GREEN_BOX_ID      0x80000000
+#define GREEN_BOX_ID_MASK 0xF0000000
+#define HXCTL_REV_MASK    0x00FF0000
+#define HXCTL_REV_SHIFT   16
 
 #define BUFFER_MASK               0x0003FFFFL
 
@@ -186,5 +153,5 @@
 void append_xilinx_recv_DMA_entry( int bank_number );
 void copy_buffer_to_dpram( int bank_number, unsigned long buffer_base,
         int nbytes );
-void UFE_receive_test_cleanup( void );
+void UFE_test_cleanup( void );
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/led/.cvsignore ppc_diag/led/.cvsignore
--- ppc_diag-1.0.2/led/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/led/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/led/.depend ppc_diag/led/.depend
--- ppc_diag-1.0.2/led/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/led/.depend	Mon May 12 14:51:52 2003
@@ -0,0 +1,16 @@
+led_test.o: led_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   led_menu.h \
+   led_test.h
+led_menu.o: led_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   led_test.h \
+   led_err.h \
+   led_menu.h
+led_err.o: led_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   led_menu.h \
+   led_err.h \
+   led_test.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/memory/.cvsignore ppc_diag/memory/.cvsignore
--- ppc_diag-1.0.2/memory/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/memory/.cvsignore	Thu May  1 11:31:26 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/memory/.depend ppc_diag/memory/.depend
--- ppc_diag-1.0.2/memory/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/memory/.depend	Mon May 12 14:51:53 2003
@@ -0,0 +1,39 @@
+mem_test.o: mem_test.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/cache.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/system_log.h \
+   /home/speedy1/build/ppc_diag/includes/prandm.h \
+   /home/speedy1/build/ppc_diag/includes/led_test.h \
+   mem_menu.h \
+   /home/speedy1/build/ppc_diag/includes/mem_display.h \
+   mem_test.h
+mem_menu.o: mem_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   mem_test.h \
+   dma_test.h \
+   mem_err.h \
+   mem_init.h \
+   mem_menu.h
+mem_err.o: mem_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   mem_menu.h \
+   mem_test.h \
+   dma_test.h \
+   mem_err.h
+mem_init.o: mem_init.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   mem_menu.h
+dma_test.o: dma_test.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/interrupts.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/timer.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/system_log.h \
+   /home/speedy1/build/ppc_diag/includes/prandm.h \
+   mem_menu.h \
+   mem_comp.h \
+   mem_test.h \
+   dma_test.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/memory/dma_test.c ppc_diag/memory/dma_test.c
--- ppc_diag-1.0.2/memory/dma_test.c	Fri Feb  7 14:25:09 2003
+++ ppc_diag/memory/dma_test.c	Thu May  1 11:31:26 2003
@@ -36,6 +36,8 @@
 #include "mem_test.h"
 #include "dma_test.h"
 
+#ifdef ENABLE_PPC_IDMA0_SUPPORT
+
 volatile int dma_intr_counter = 0;
 
 void dma_init( int intr_enable, int debug )
@@ -330,4 +332,6 @@
     stop_dma();
     return failed;
 }
+
+#endif
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/.cvsignore ppc_diag/nflash/.cvsignore
--- ppc_diag-1.0.2/nflash/.cvsignore	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/.cvsignore	Thu May  1 11:31:26 2003
@@ -0,0 +1 @@
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/.depend ppc_diag/nflash/.depend
--- ppc_diag-1.0.2/nflash/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/.depend	Mon May 12 14:51:53 2003
@@ -0,0 +1,33 @@
+nandf_ops.o: nandf_ops.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/mem_display.h \
+   nandf.h \
+   nandf_ops.h
+nflash_err.o: nflash_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   nflash_menu.h \
+   nflash_err.h \
+   nflash_test.h
+nflash_menu.o: nflash_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   nflash_init.h \
+   nflash_test.h \
+   nflash_err.h \
+   nflash_menu.h
+nflash_init.o: nflash_init.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   nandf.h \
+   nandf_ops.h \
+   nflash_menu.h \
+   nflash_init.h
+nflash_test.o: nflash_test.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   nandf.h \
+   nandf_ops.h \
+   nflash_menu.h \
+   nflash_test.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/Makefile ppc_diag/nflash/Makefile
--- ppc_diag-1.0.2/nflash/Makefile	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/Makefile	Fri Jan 31 12:45:34 2003
@@ -0,0 +1,65 @@
+#
+# (C) Copyright 2002
+# Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+#
+# See file CREDITS for the list of contributors to this project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+MODULENAME = $(shell env ruby -e "puts File.basename Dir.getwd" )
+
+ifeq ($(MODULENAME).list,$(wildcard $(MODULENAME).list))
+include $(MODULENAME).list
+endif
+
+ifneq (.depend,$(wildcard .depend))
+DOTHIS = depend
+else
+include .depend
+endif
+
+all: $(DOTHIS) compile
+
+O = $(subst ",,$(OBJECTS))
+compile: $(O)
+
+depend:
+	echo $(HPATH)
+	eval SRCC='$(C_SOURCES)' ; \
+	eval SRCA='$(AS_SOURCES)' ; \
+	$(MKDEP) -- $$SRCC $$SRCA > .depend
+
+hfiles:
+	ruby -e 'Dir.chdir "$(INCLUDES)"; hs = $(HEADERS); \
+	mn = "$(MODULENAME)"; \
+	if hs.length > 0 then hs.split.each { |hf| \
+	system "ln", "-s", "../#{mn.to_s}/#{hf.to_s}" } end'
+
+prep_output:
+	ruby -e 'ss = $(C_SOURCES); if ss.length > 0 then ss.split.each { |sf| \
+	system "/usr/bin/cpp", "-P", "-I$(INCLUDES)", "-I$(PPCBOOT_INCLUDES)", \
+	"#{sf}", "#{sf}pp"; \
+	system %Q{/bin/grep "[^ \n\t]" #{sf}pp > #{sf}pp.out}; \
+	system "rm", "-f", "#{sf}pp"; } end'
+
+clean:
+	rm -f *.o
+
+distclean:
+	rm -f .depend
+
+.PHONY: depend compile hfiles clean distclean prep_output
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nandf.h ppc_diag/nflash/nandf.h
--- ppc_diag-1.0.2/nflash/nandf.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nandf.h	Thu May  1 11:31:26 2003
@@ -0,0 +1,55 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nandf.h
+ * common constants and macros for the NAND flash tests
+ */
+
+#include "diags.h"
+
+/* flash commands */
+
+#define NFLASH_CMD_SER_DAT_IN   0x80
+#define NFLASH_CMD_READ1        0x00
+#define NFLASH_CMD_READ2        0x01
+#define NFLASH_CMD_READ3        0x50
+#define NFLASH_CMD_RESET        0xFF
+#define NFLASH_CMD_AUTO_B_PROG  0x10
+#define NFLASH_CMD_AUTO_B_ERASE 0x60
+#define NFLASH_CMD_STAT_READ    0x70
+#define NFLASH_CMD_ID_READ      0x90
+#define NFLASH_CMD_ERASE_CNFRM  0xD0
+
+#define NFLASH_BUSY_IRQ  0x02000000
+
+#define WRITE_NFLASH_REG(x) (*((volatile unsigned char *)(NFLASH_CTRL_ADDR)) = \
+        (x))
+/* flash status */
+#define NFLASH_STAT_FAIL   0x01
+#define NFLASH_STAT_READY  0x40
+#define NFLASH_STAT_UNPROT 0x80
+
+#define WRITE_NFLASH_DATA(x) \
+        (*((volatile unsigned char *)(NFLASH_IO_ADDR)) = (x))
+#define READ_NFLASH_DATA() \
+        (*((volatile unsigned char *)(NFLASH_IO_ADDR)))
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nandf_ops.c ppc_diag/nflash/nandf_ops.c
--- ppc_diag-1.0.2/nflash/nandf_ops.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nandf_ops.c	Fri May  9 18:36:15 2003
@@ -0,0 +1,389 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nandf_ops.c
+ * functions for manipulating nand flash
+ */
+
+#include "diags.h"
+#include "ppcboot.h"
+#include "printf.h"
+#include "mem_display.h"
+#include "nandf.h"
+#include "nandf_ops.h"
+
+static volatile unsigned char nand_reg_mirror = 0;
+
+void command_nflash( unsigned char command, int debug )
+{
+    if (debug > 2)
+        printf("Command phase..\n");
+    NFLASH_SETCE( nand_reg_mirror );
+    NFLASH_SETCLE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 2)
+        printf("Wrote %02x to ctrl\n", nand_reg_mirror);
+    WRITE_NFLASH_DATA( command );
+    if (debug > 2)
+        printf("Wrote command %02x\n", command);
+    NFLASH_CLRCLE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 2)
+        printf("Wrote %02x to ctrl\n", nand_reg_mirror);
+}
+
+void address_nflash( unsigned char column, int page, int debug )
+{
+    if (debug > 2)
+        printf("Address phase..\n");
+    NFLASH_SETALE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 2)
+        printf("Wrote %02x to ctrl.\n", nand_reg_mirror);
+    WRITE_NFLASH_DATA( column );
+    if (debug > 2)
+        printf("Wrote column address %02x\n", column);
+    if (page != -1)
+    {
+        WRITE_NFLASH_DATA( page & 0xFF );
+        if (debug > 2)
+            printf("Address bytes: %02x", page & 0xFF);
+        WRITE_NFLASH_DATA( (page & 0xFF00) >> 8 );
+        if (debug > 2)
+            printf(" %02x", (page & 0xFF00) >> 8);
+        WRITE_NFLASH_DATA( (page & 0xFF0000) >> 16 );
+        if (debug > 2)
+            printf(" %02x written during address cycle.\n",
+                    (page & 0xFF0000) >> 16);
+    }
+    NFLASH_CLRALE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 2)
+        printf("Wrote %02x to ctrl\n", nand_reg_mirror);
+}
+
+int busy_wait_nflash( unsigned int us_delay, unsigned int us_timeout,
+        int debug )
+{
+    int busy = 1;
+    unsigned int us_elapsed = us_delay;
+    volatile immap_t *immr = (immap_t *)CFG_IMMR;
+
+    udelay( us_delay );
+    while (busy == 1)
+    {
+        if ((immr->im_siu_conf.sc_sipend & NFLASH_BUSY_IRQ) != 0)
+            busy = 0;
+        udelay( us_delay );
+        us_elapsed += us_delay;
+        if (us_elapsed > us_timeout)
+            return 1;
+    }
+    return 0;
+}
+
+int reset_nflash( int debug )
+{
+    command_nflash( NFLASH_CMD_RESET, debug );
+    if (busy_wait_nflash( 10, 600, debug ) != 0)
+    {
+        printf("NAND Flash did not reset!\n");
+        return 1;
+    }
+    return 0;
+}
+
+int get_status_nflash( int debug )
+{
+    command_nflash( NFLASH_CMD_STAT_READ, debug );
+    return (READ_NFLASH_DATA());
+}
+
+int get_id_nflash( int debug )
+{
+    unsigned char id_bytes[2];
+
+    command_nflash( NFLASH_CMD_ID_READ, debug );
+    address_nflash( 0x00, -1, debug );
+    /* Because of device timing set on the chip select (c.f. OR/BR settings)
+     * nothing happens faster than a usec.  Therefore the 100ns delay before
+     * reading the id has already been taken care of
+     */
+    id_bytes[0] = READ_NFLASH_DATA();
+    if (debug)
+        printf("Got %02x\n", id_bytes[0]);
+    id_bytes[1] = READ_NFLASH_DATA();
+    if (debug)
+        printf("Got %02x\n", id_bytes[1]);
+    udelay( 20 );
+    NFLASH_CLRCE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 1)
+        printf("Wrote %02x to ctrl\n", nand_reg_mirror);
+    return ((id_bytes[0] << 8) | id_bytes[1]);
+}
+
+int verify_erase_nflash( int capacity, int page_size, unsigned int *results,
+        int debug )
+{
+    int byte_n = 0;
+    int failed = 0;
+    int still_going_ind = capacity / 128;
+    unsigned char nflash_byte = 0;
+
+    /* make space for still-alive indicator */
+    if (debug == 0)
+        printf(" ");
+    command_nflash( NFLASH_CMD_READ1, debug );
+    address_nflash( 0x00, 0x00, debug );
+    for (byte_n = 0; byte_n < (capacity * page_size); byte_n++)
+    {
+        if ((byte_n % page_size) == 0)
+        {
+            if (debug == 0)
+                if (((byte_n / page_size) % still_going_ind) == 0)
+                    still_alive();
+            busy_wait_nflash( 1, 550, debug );
+        }
+        nflash_byte = READ_NFLASH_DATA();
+        if (nflash_byte != 0xff)
+        {
+            int block_size = (capacity / 1024);
+
+            printf("Bit error in byte %08x - %08x, page %d, block %d:\n",
+                    byte_n, byte_n + 3, byte_n / page_size,
+                    (byte_n / page_size) / block_size );
+            printf("Expected 0xff, read %02x\n", nflash_byte);
+            results[2] = byte_n;
+            results[3] = byte_n / page_size;
+            results[4] = (byte_n / page_size) / block_size;
+            results[5] = nflash_byte;
+            failed = 1;
+        }
+    }
+    udelay( 20 );
+    NFLASH_CLRCE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 1)
+        printf("Wrote %02x to ctrl\n", nand_reg_mirror);
+    if (debug == 0)
+        printf("\b");
+    return failed;
+}
+
+int verify_byte_pattern( int page_no, int page_size, block_test_types patn,
+        unsigned int *results, int debug )
+{
+    int n_byte = 0;
+    unsigned char r_byte;
+    int cb_patn;
+    int failed = 0;
+
+    if (patn == CheckerBoardA)
+        cb_patn = 0x55;
+    else if (patn == CheckerBoardB)
+        cb_patn = 0xAA;
+    else
+        cb_patn = 0xFF;
+    command_nflash( NFLASH_CMD_READ1, debug );
+    address_nflash( 0x00, page_no, debug );
+    busy_wait_nflash( 1, 550, debug );
+    for (n_byte = 0; n_byte < page_size; n_byte++)
+    {
+        r_byte = READ_NFLASH_DATA();
+        if (r_byte != cb_patn)
+        {
+            printf("Data error in page %d, byte (column) %d:\n",
+                    page_no, n_byte);
+            printf("\tExpected %02x, read %02x\n", cb_patn, r_byte);
+            results[2] = page_no;
+            results[3] = n_byte;
+            results[4] = cb_patn;
+            results[5] = r_byte;
+            failed = 1;
+            return !(failed);
+        }
+    }
+    return !(failed);
+}
+
+int test_cb_pattern( int page_no, int page_size, block_test_types patn,
+        unsigned int *results, int debug )
+{
+    int n_byte = 0;
+    int cb_patn;
+    int failed = 0;
+    int dev_status = 0;
+
+    if (patn == CheckerBoardA)
+        cb_patn = 0x55;
+    else if (patn == CheckerBoardB)
+        cb_patn = 0xAA;
+    NFLASH_WPOFF( nand_reg_mirror ); /* disable write protect */
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    command_nflash( NFLASH_CMD_SER_DAT_IN, debug );
+    address_nflash( 0x00, page_no, debug );
+    busy_wait_nflash( 1, 10, debug );
+    for (n_byte = 0; n_byte < page_size; n_byte++)
+    { /* clock in the test data: binary 01010101 */
+        WRITE_NFLASH_DATA( cb_patn );
+    }
+    /* start auto-program */
+    command_nflash( NFLASH_CMD_AUTO_B_PROG, debug );
+    /* wait.. */
+    busy_wait_nflash( 100, 1100, debug );
+    /* check the programming status */
+    dev_status = get_status_nflash( debug );
+    if (debug)
+        printf("\nStatus: %x\n", dev_status);
+    if ((dev_status & NFLASH_STAT_FAIL) != 0)
+    {
+        results[2] = 0xffffffff;
+        results[3] = page_no;
+        printf("NAND device reports programming failure on page %d.\n",
+                page_no);
+        failed = 1;
+    }
+    /* read the page data in and verify it */
+    if (!verify_byte_pattern( page_no, page_size, patn, results, debug ))
+    {
+        if (patn == CheckerBoardA)
+            printf("Checkerboard test A failed.\n");
+        else
+            printf("Checkerboard test B failed.\n");
+        failed = 1;
+    }
+    udelay( 20 );
+    NFLASH_WPON( nand_reg_mirror ); /* enable write protect */
+    NFLASH_CLRCE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    return failed;
+}
+
+int verify_block_erase( int block, int page_size, int pgs_per_block,
+        int capacity, int *results, int debug )
+{
+    int n_block, n_page;
+    int start_block, end_block;
+    int failed = 0;
+
+    if (block == 0xffffffff)
+    {
+        start_block = 0;
+        end_block = (capacity / pgs_per_block);
+    }
+    for (n_block = start_block; n_block <= end_block; n_block++)
+    {
+        for (n_page = (block * pgs_per_block);
+                n_page < ((block+1) * pgs_per_block); n_page++)
+        {
+            if (!verify_byte_pattern( n_page, page_size, BlockErasePatn,
+                        results, debug ))
+            {
+                printf("Failed erase test of block %d.\n", n_block);
+                failed = 1;
+                break;
+            }
+        }
+    }
+    return !(failed);
+}
+
+int erase_block_nflash( int block_no, int pgs_per_block, int capacity,
+        int page_size, int *results, int debug )
+{
+    unsigned int block_page_base;
+    int dev_status = 0;
+    int failed = 0;
+
+    block_page_base = (block_no * pgs_per_block);
+
+    results[1] = 0;
+    if (block_page_base > capacity)
+    {
+        printf("Specified block # %d out of range.\n", block_no);
+        results[1] = 1;
+        return 1;
+    }
+    NFLASH_WPOFF( nand_reg_mirror ); /* disable write protect */
+    command_nflash( NFLASH_CMD_AUTO_B_ERASE, debug );
+    NFLASH_SETALE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    if (debug > 2)
+        printf("Wrote %02x to ctrl.\n", nand_reg_mirror);
+    WRITE_NFLASH_DATA( (block_page_base & 0x00F0) );
+    if (debug > 2)
+        printf(" %02x", (block_page_base & 0x00F0) );
+    WRITE_NFLASH_DATA( (block_page_base & 0xFF00) >> 8 );
+    if (debug > 2)
+        printf(" %02x", (block_page_base & 0xFF00) >> 8);
+    if (block_page_base > 0xffff)
+    {
+        WRITE_NFLASH_DATA( (block_page_base & 0xFF0000) >> 16 );
+        if (debug > 2)
+            printf(" %02x", (block_page_base & 0xFF0000) >> 16);
+    }
+    if (debug > 2)
+        printf(" written during block address cycle.\n");
+    NFLASH_CLRALE( nand_reg_mirror );
+    command_nflash( NFLASH_CMD_ERASE_CNFRM, debug );
+    busy_wait_nflash( 2000, 11000, debug );
+    dev_status = get_status_nflash( debug );
+    if (debug)
+        printf("\nStatus: %x\n", dev_status);
+    if ((dev_status & NFLASH_STAT_FAIL) != 0)
+    {
+        printf("NAND device reports erase failure in block %d.\n", block_no);
+        results[2] = 0xffffffff;
+        results[3] = block_no;
+        failed = 1;
+    }
+    else if (!verify_block_erase( block_no, page_size, pgs_per_block, capacity,
+                results, debug ))
+    {
+        failed = 1;
+    }
+    udelay(20);
+    NFLASH_WPON( nand_reg_mirror ); /* enable write protect */
+    NFLASH_CLRCE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    return failed;
+}
+
+void dump_page_nflash( unsigned int mem_copy_base, int page_no, int page_size,
+        int debug )
+{
+    int n_byte = 0;
+
+    command_nflash( NFLASH_CMD_READ1, debug );
+    address_nflash( 0x00, page_no, debug );
+    busy_wait_nflash( 1, 550, debug );
+    for (n_byte = 0; n_byte < page_size; n_byte++)
+    {
+        *(unsigned char*)(mem_copy_base + n_byte) = READ_NFLASH_DATA();
+    }
+    udelay( 20 );
+    NFLASH_CLRCE( nand_reg_mirror );
+    WRITE_NFLASH_REG( nand_reg_mirror );
+    mem_display( mem_copy_base, (mem_copy_base + page_size), 1 );
+}
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nandf_ops.h ppc_diag/nflash/nandf_ops.h
--- ppc_diag-1.0.2/nflash/nandf_ops.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nandf_ops.h	Fri May  2 11:16:50 2003
@@ -0,0 +1,42 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nandf_ops.h
+ * constants, macros, and declarations for nand flash operations
+ */
+
+typedef enum { CheckerBoardA, CheckerBoardB, BlockErasePatn } block_test_types;
+
+void command_nflash( unsigned char command, int debug );
+int busy_wait_nflash( unsigned int us_delay, unsigned int us_timeout,
+        int debug );
+int reset_nflash( int debug );
+int get_id_nflash( int debug );
+int verify_erase_nflash( int capacity, int page_size, unsigned int *results,
+        int debug );
+int test_cb_pattern( int page_no, int page_size, block_test_types patn,
+        unsigned int *results, int debug );
+void dump_page_nflash( unsigned int mem_copy_base, int page_no, int page_size,
+        int debug );
+int erase_block_nflash( int block_no, int pgs_per_block, int capacity,
+        int page_size, int *results, int debug );
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash.list ppc_diag/nflash/nflash.list
--- ppc_diag-1.0.2/nflash/nflash.list	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash.list	Thu May  1 11:31:26 2003
@@ -0,0 +1,12 @@
+# list of nand flash test files
+
+HEADERS="nandf.h nandf_ops.h nflash_err.h nflash_menu.h nflash_init.h \
+nflash_test.h"
+
+AS_SOURCES=
+
+C_SOURCES="nandf_ops.c nflash_err.c nflash_menu.c nflash_init.c nflash_test.c"
+
+OBJECTS="nandf_ops.o nflash_err.o nflash_menu.o nflash_init.o nflash_test.o"
+
+export HEADERS AS_SOURCES C_SOURCES OBJECTS
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_err.c ppc_diag/nflash/nflash_err.c
--- ppc_diag-1.0.2/nflash/nflash_err.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_err.c	Fri May  9 18:36:15 2003
@@ -0,0 +1,118 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nflash_err.c
+ * pretty-printer for nflash error messages
+ */
+
+#include "diags.h"
+#include "printf.h"
+#include "nflash_menu.h"
+#include "nflash_err.h"
+#include "nflash_test.h"
+
+unsigned int nflash_err( unsigned int *results, unsigned int loopnum )
+{
+    char str_temp[255];
+    int line_num = 0;
+
+    sprintf(str_temp, "ERROR: In NAND Flash Menu -> ");
+    switch (results[0])
+    {
+        case ResetTest:
+            printf("%sReset NAND Flash: ", str_temp);
+            break;
+        case BBlockTest:
+            printf("%sCheck for bad blocks: ", str_temp);
+            break;
+        case EraseBlock:
+            printf("%sErase blocks: ", str_temp);
+            break;
+        case WritePatnA:
+            printf("%sWrite test ptn 1: ", str_temp);
+            break;
+        case WritePatnB:
+            printf("%sWrite test ptn 2: ", str_temp);
+            break;
+        default:
+            printf("%sUnknown: ", str_temp);
+    }
+    if (loopnum > 0)
+        printf("(Loop %d)", loopnum);
+    printf("\n");
+    ++line_num;
+    switch (results[0])
+    {
+        case ResetTest:
+            printf("\tNAND part failed to acknowledge reset.\n");
+            ++line_num;
+            break;
+        case EraseBlock:
+            if (results[1] != 0)
+            {
+                printf("Specified erase block out of range.\n");
+                ++line_num;
+            }
+            if (results[2] == 0xffffffff)
+            {
+                printf("NAND device reports erase failure in block %s%d%s.\n",
+                        VT100_FAULT_SEQ, results[3], VT100_END_SEQ);
+                ++line_num;
+            }
+            else
+            {
+                printf("Erase error in page %s%d%s, byte (column) %s%d%s:\n",
+                        VT100_FAULT_SEQ, results[2], VT100_END_SEQ,
+                        VT100_FAULT_SEQ, results[3], VT100_END_SEQ);
+                ++line_num;
+                printf("\tExpected %s%02x%s, read %s%02x%s\n",
+                        VT100_FAULT_SEQ, results[4], VT100_END_SEQ,
+                        VT100_FAULT_SEQ, results[5], VT100_END_SEQ);
+                ++line_num;
+            }
+            break;
+        case WritePatnA:
+        case WritePatnB:
+            printf("After programming NAND flash page with test pattern %d:\n",
+                    results[0] == WritePatnA ? 1 : 2);
+            ++line_num;
+            if (results[2] == 0xffffffff)
+            {
+                printf("NAND device reports program failure in page %s%d%s.\n",
+                        VT100_FAULT_SEQ, results[3], VT100_END_SEQ);
+                ++line_num;
+            }
+            else
+            {
+                printf("Program error in page %s%d%s, byte (column) %s%d%s:\n",
+                        VT100_FAULT_SEQ, results[2], VT100_END_SEQ,
+                        VT100_FAULT_SEQ, results[3], VT100_END_SEQ);
+                ++line_num;
+                printf("\tExpected %s%02x%s, read %s%02x%s\n",
+                        VT100_FAULT_SEQ, results[4], VT100_END_SEQ,
+                        VT100_FAULT_SEQ, results[5], VT100_END_SEQ);
+                ++line_num;
+            }
+    }
+    return line_num;
+}
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_err.h ppc_diag/nflash/nflash_err.h
--- ppc_diag-1.0.2/nflash/nflash_err.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_err.h	Thu May  1 11:31:26 2003
@@ -0,0 +1,28 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nflash_err.h
+ * declaration for nflash error printing routine nflash_err()
+ */
+
+unsigned int nflash_err( unsigned int *results, unsigned int loopnum );
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_init.c ppc_diag/nflash/nflash_init.c
--- ppc_diag-1.0.2/nflash/nflash_init.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_init.c	Thu May  1 11:31:26 2003
@@ -0,0 +1,78 @@
+/* nflash_init.c
+ * configure port bit for IRQ 3 as an input (NAND flash ready/busy signal)
+ */
+
+#include "diags.h"
+#include <stddef.h>
+#include "ppcboot.h"
+#include "nandf.h"
+#include "nandf_ops.h"
+#include "nflash_menu.h"
+#include "nflash_init.h"
+
+extern test_option nflash_options[LastOption];
+
+nflash_id_stats tc58v64aft =
+{
+    0x98e6,
+    528,
+    16384,
+    16
+};
+
+nflash_id_stats tc58v128aft =
+{
+    0x9873,
+    528,
+    32768,
+    32
+};
+
+nflash_id_stats *nflash_id_stat_list[] =
+{
+    &tc58v64aft, 
+    &tc58v128aft,
+    NULL
+};
+
+void nflash_init()
+{
+    int dev_id = 0;
+    int dev_found = 0;
+    nflash_id_stats *nflash_dev_ptr = NULL;
+
+    volatile immap_t *immr = (immap_t *)CFG_IMMR;
+    /* Set SIEL to enable edge-triggered interrupt on IRQ3 */
+    immr->im_siu_conf.sc_siel &= ~(0x02000000);
+
+    /* reset the device in case it was in the middle of something */
+    reset_nflash( 0 );
+    /* get the device ID, and use it to determine device statistics */
+    dev_id = get_id_nflash( 0 );
+    for( nflash_dev_ptr = nflash_id_stat_list[0];
+            nflash_dev_ptr != NULL;
+            nflash_dev_ptr++ )
+    {
+        if (dev_id == nflash_dev_ptr->dev_id)
+        {
+            printf("Found device id %x in table.\n", dev_id);
+            dev_found = 1;
+            nflash_options[ID].init_value = nflash_dev_ptr->dev_id;
+            nflash_options[PageSize].init_value = nflash_dev_ptr->page_size;
+            nflash_options[Capacity].init_value =
+                nflash_dev_ptr->capacity_in_pages;
+            nflash_options[PagesPerBlock].init_value =
+                nflash_dev_ptr->pages_per_block;
+            break;
+        }
+    }
+    if (dev_found == 0)
+    {
+        printf("Device ID %x not found, using default values..\n", dev_id);
+        nflash_options[ID].init_value = dev_id;
+        nflash_options[PageSize].init_value = tc58v64aft.page_size;
+        nflash_options[Capacity].init_value = tc58v64aft.capacity_in_pages;
+        nflash_options[PagesPerBlock].init_value = tc58v64aft.pages_per_block;
+    }
+}
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_init.h ppc_diag/nflash/nflash_init.h
--- ppc_diag-1.0.2/nflash/nflash_init.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_init.h	Thu May  1 11:31:26 2003
@@ -0,0 +1,20 @@
+/* nflash_init.h
+ * declaration for NAND flash init routine nflash_init()
+ */
+
+#ifndef __NFLASH_INIT_H__
+#define __NFLASH_INIT_H__
+
+#include "diags.h"
+
+typedef struct nand_id_stat_list {
+    unsigned int dev_id;
+    unsigned int page_size;
+    unsigned int capacity_in_pages;
+    int pages_per_block;
+} nflash_id_stats;
+
+void nflash_init( void );
+
+#endif /* __NFLASH_INIT_H__ */
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_menu.c ppc_diag/nflash/nflash_menu.c
--- ppc_diag-1.0.2/nflash/nflash_menu.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_menu.c	Fri May  9 18:36:15 2003
@@ -0,0 +1,82 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nflash_menu.c
+ * submenu package definition
+ */
+
+#include "diags.h"
+#include "nflash_init.h"
+#include "nflash_test.h"
+#include "nflash_err.h"
+#include "nflash_menu.h"
+
+extern void empty_function();
+
+test_submenu nflash_submenus[LastTest] =
+{
+    { "Reset NAND Flash", "(Test reset command)",
+        nand_reset, MINOR, BASIC_TEST },
+        /* ^^^^^ basic tests above this line ^^^^^ */
+        /* vvvvv custom tests below this line vvvvv */
+    { "Check For Bad Blocks", "(Write/Read/Erase -- destructive!)",
+        nand_bad_blocks, MINOR, CUSTOM_TEST },
+    { "Erase Blocks", "(destructive!)",
+        nand_erase_blocks, MINOR, CUSTOM_TEST },
+    { "Write Test Ptn 1", "(Write 0x55 to all bytes in block)",
+        nand_block_write_cb_patna, MINOR, CUSTOM_TEST },
+    { "Write Test Ptn 2", "(Write 0xAA to all bytes in block)",
+        nand_block_write_cb_patnb, MINOR, CUSTOM_TEST },
+    { "Get NAND Flash ID", "(Get NAND maker & device codes)",
+        nand_id, MINOR, CUSTOM_TEST },
+    { "Dump NAND Flash Page", "(View a particular NAND flash page)",
+        nand_dump_page, MINOR, CUSTOM_TEST },
+    { "Verify Erase/New Device", "(Make sure all bits are 1)",
+        nand_verify_erase, MINOR, CUSTOM_TEST }
+};
+    
+test_option nflash_options[LastOption] =
+{
+    { "Debug level", 0, "(0=none, !0=print debug statements)" },
+    { "Page size", 0, "(NAND flash's page size in bytes)" },
+    { "Pages per block", 0, "(Number of pages in a flash block)" },
+    { "Capacity", 0, "(NAND storage size, in # pages)" },
+    { "NAND device ID", 0, "(2-byte device identifier)" },
+    { "Page number", 0, "(Page to dump [0 - Capacity])" },
+    { "Block number", 0x0, "(flash block [0xffffffff: all])" },
+    { "Mem copy start", 0x00300000, "(Temp storage for verify erase)" },
+};
+
+test_submenu_package nflash_package =
+{
+    "NAND Flash",
+    "(Test NAND Flash)",
+    EnableSubmenu,
+    LastTest,         /* total number of tests */
+    LastOption,       /* total number of options */
+    nflash_init,   /* no init function */
+    nflash_submenus,  /* pointer to array of test_submenus */
+    nflash_options,   /* pointer to array of test_options */
+    nflash_err,       /* pretty-print errors function */
+    empty_function    /* no clean-up routine necessary */
+};
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_menu.h ppc_diag/nflash/nflash_menu.h
--- ppc_diag-1.0.2/nflash/nflash_menu.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_menu.h	Thu May  1 11:31:26 2003
@@ -0,0 +1,43 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nflash_menu.h
+ * types and constants meant for the reg test menu
+ */
+
+#ifndef __NFLASH_MENU_H__
+#define __NFLASH_MENU_H__
+
+typedef enum
+{
+    ResetTest, BBlockTest, EraseBlock, WritePatnA, WritePatnB, IDTest,
+    DumpPage, DumpAll, LastTest
+} nflash_test_names;
+
+typedef enum
+{
+    Debug, PageSize, PagesPerBlock, Capacity, ID, PageNo, BlockNo, MemCopyBase,
+    LastOption
+} nflash_option_names;
+
+#endif /* __NFLASH_MENU_H__ */
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_test.c ppc_diag/nflash/nflash_test.c
--- ppc_diag-1.0.2/nflash/nflash_test.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_test.c	Fri May  2 11:16:50 2003
@@ -0,0 +1,309 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nflash_test.c
+ * NAND flash test suite
+ */
+
+#include "diags.h"
+#include "printf.h"
+#include "nandf.h"
+#include "nandf_ops.h"
+#include "nflash_menu.h"
+#include "nflash_test.h"
+
+int nand_reset( test_option *t_opts, unsigned int *results )
+{
+    int debug = t_opts[Debug].init_value;
+
+    results[0] = ResetTest;
+    if (reset_nflash( debug ) != 0)
+        return 1;
+    return 0;
+}
+
+int nand_id( test_option *t_opts, unsigned int *results )
+{
+    int debug = t_opts[Debug].init_value;
+
+    printf(" %x", get_id_nflash( debug ));
+    return 0;
+}
+
+int nand_verify_erase( test_option *t_opts, unsigned int *results )
+{
+    unsigned int page_size = t_opts[PageSize].init_value;
+    unsigned int capacity = t_opts[Capacity].init_value;
+    int debug = t_opts[Debug].init_value;
+
+    verify_erase_nflash( capacity, page_size, results, debug );
+    return 0;
+}
+
+int nand_bad_blocks( test_option *t_opts, unsigned int *results )
+{
+    int block_no = t_opts[BlockNo].init_value;
+    int capacity = t_opts[Capacity].init_value;
+    unsigned int page_size = t_opts[PageSize].init_value;
+    int pgs_per_block = t_opts[PagesPerBlock].init_value;
+    int debug = t_opts[Debug].init_value;
+    int n_block, start_block, end_block;
+    int n_page;
+    int failed = 0;
+
+    if (block_no == 0xffffffff)
+    {
+        start_block = 0;
+        end_block = (capacity / pgs_per_block) - 1;
+    }
+    else
+    {
+        start_block = block_no;
+        end_block = block_no;
+    }
+    if (debug)
+    {
+        printf("Testing blocks %d to %d.", start_block, end_block);
+        printf(" Page size: %d bytes, pages/block: %d\n", page_size,
+                pgs_per_block);
+    }
+    /* make space for still-alive indicator */
+    if ((debug == 0) && (end_block > start_block))
+        printf(" ");
+    for (n_block = start_block; n_block <= end_block; n_block++)
+    {
+        if (debug)
+            printf("Checkerboard, part 1, testing block %d..\n", n_block);
+        if ((debug == 0) && ((n_block % 8) == 0))
+            still_alive();
+        failed = 0;
+        for (n_page = (n_block * pgs_per_block);
+                n_page < ((n_block + 1) * pgs_per_block);
+                n_page++)
+        {
+            if (debug > 1)
+                printf("Testing page %d, in block %d..\n", n_page, n_block);
+            if (test_cb_pattern( n_page, page_size, CheckerBoardA, results,
+                        debug ))
+            {
+                printf("Failed cb test part 1, page %d, in block %d.\n",
+                        n_page, n_block);
+                failed = 1;
+                break;
+            }
+        }
+        if (failed != 0)
+            continue; /* skip to the next block */
+        if (debug)
+            printf("Erase testing block %d..\n", n_block);
+        if (erase_block_nflash( n_block, pgs_per_block, capacity, page_size,
+                    results, debug ))
+        {
+            printf("Failed to erase cb pattern 1 in block %d.\n",
+                    n_block);
+            failed = 1;
+        }
+        if (failed != 0)
+            continue; /* skip to the next block */
+        for (n_page = (n_block * pgs_per_block);
+                n_page < ((n_block + 1) * pgs_per_block);
+                n_page++)
+        {
+            if (debug > 1)
+                printf("Testing page %d, in block %d..\n", n_page, n_block);
+            if (test_cb_pattern( n_page, page_size, CheckerBoardB, results,
+                        debug ))
+            {
+                printf("Failed cb test part 2, page %d, in block %d.\n",
+                        n_page, n_block);
+                failed = 1;
+                break;
+            }
+        }
+        if (failed != 0)
+            continue; /* skip to the next block */
+        if (erase_block_nflash( n_block, pgs_per_block, capacity, page_size,
+                    results, debug ))
+        {
+            printf("Failed to erase cb pattern 2 in block %d.\n",
+                    n_block);
+        }
+    }
+    if (debug == 0) /* write over still-alive indication */
+        printf("\b");
+    return 0;
+}
+
+int nand_erase_blocks( test_option *t_opts, unsigned int *results )
+{
+    int block_no = t_opts[BlockNo].init_value;
+    int capacity = t_opts[Capacity].init_value;
+    int page_size = t_opts[PageSize].init_value;
+    int pgs_per_block = t_opts[PagesPerBlock].init_value;
+    int debug = t_opts[Debug].init_value;
+    int n_block, start_block, end_block;
+    int failed = 0;
+
+    results[0] = EraseBlock;
+    if (block_no == 0xffffffff)
+    {
+        start_block = 0;
+        end_block = (capacity / pgs_per_block) - 1;
+    }
+    else
+    {
+        start_block = block_no;
+        end_block = block_no;
+    }
+    /* make space for still-alive indicator */
+    if ((debug == 0) && (end_block > start_block))
+        printf(" ");
+    for (n_block = start_block; n_block <= end_block; n_block++)
+    {
+        if (debug > 1)
+            printf("Erasing block %d..\n", n_block);
+        if (debug == 0)
+            if ((end_block > start_block) && ((n_block % 16) == 0))
+                still_alive();
+        if (erase_block_nflash( n_block, pgs_per_block, capacity, page_size,
+                    results, debug ))
+        {
+            failed = 1;
+            break;
+        }
+    }
+    if ((debug == 0) && (end_block > start_block))
+        printf("\b");
+    return failed;
+}
+
+int nand_block_write_cb_patna( test_option *t_opts, unsigned int *results )
+{
+    int page_size = t_opts[PageSize].init_value;
+    int capacity = t_opts[Capacity].init_value;
+    int pgs_per_block = t_opts[PagesPerBlock].init_value;
+    int block_no = t_opts[BlockNo].init_value;
+    int debug = t_opts[Debug].init_value;
+    int n_page;
+    int n_block, start_block, end_block;
+    int failed = 0;
+
+    results[0] = WritePatnA;
+    if (block_no == 0xffffffff)
+    {
+        start_block = 0;
+        end_block = (capacity / pgs_per_block);
+    }
+    else
+    {
+        start_block = block_no;
+        end_block = block_no;
+    }
+    /* make space for still-alive indicator */
+    if ((debug == 0) && (end_block > start_block))
+        printf(" ");
+    for (n_block = start_block; n_block <= end_block; n_block++)
+    {
+        if (debug == 0)
+            if ((end_block > start_block) && ((n_block % 16) == 0))
+                still_alive();
+        for (n_page = (n_block * pgs_per_block);
+                n_page < ((n_block+1) * pgs_per_block); n_page++)
+        {
+            if (test_cb_pattern( n_page, page_size, CheckerBoardA, results,
+                        debug ))
+            {
+                if (results[2] == 0xffffffff)
+                    results[3] = n_block;
+                failed = 1;
+                goto cb_patna_done;
+            }
+        }
+    }
+cb_patna_done:
+    if ((debug == 0) && (end_block > start_block))
+        printf("\b");
+    return failed;
+}
+
+int nand_block_write_cb_patnb( test_option *t_opts, unsigned int *results )
+{
+    int page_size = t_opts[PageSize].init_value;
+    int capacity = t_opts[Capacity].init_value;
+    int pgs_per_block = t_opts[PagesPerBlock].init_value;
+    int block_no = t_opts[BlockNo].init_value;
+    int debug = t_opts[Debug].init_value;
+    int n_page;
+    int n_block, start_block, end_block;
+    int failed = 0;
+
+    results[0] = WritePatnB;
+    if (block_no == 0xffffffff)
+    {
+        start_block = 0;
+        end_block = (capacity / pgs_per_block);
+    }
+    else
+    {
+        start_block = block_no;
+        end_block = block_no;
+    }
+    /* make space for still-alive indicator */
+    if ((debug == 0) && (end_block > start_block))
+        printf(" ");
+    for (n_block = start_block; n_block <= end_block; n_block++)
+    {
+        if (debug == 0)
+            if ((end_block > start_block) && ((n_block % 16) == 0))
+                still_alive();
+        for (n_page = (n_block * pgs_per_block);
+                n_page < ((n_block+1) * pgs_per_block); n_page++)
+        {
+            if (test_cb_pattern( n_page, page_size, CheckerBoardB, results,
+                        debug ))
+            {
+                if (results[2] == 0xffffffff)
+                    results[3] = n_block;
+                failed = 1;
+                goto cb_patnb_done;
+            }
+        }
+    }
+cb_patnb_done:
+    if ((debug == 0) && (end_block > start_block))
+        printf("\b");
+    return failed;
+}
+
+int nand_dump_page( test_option *t_opts, unsigned int *results )
+{
+    unsigned int mem_base = t_opts[MemCopyBase].init_value;
+    int page_no = t_opts[PageNo].init_value;
+    unsigned int page_size = t_opts[PageSize].init_value;
+    int debug = t_opts[Debug].init_value;
+
+    printf("Dump of NAND flash page %d..\n", page_no);
+    dump_page_nflash( mem_base, page_no, page_size, debug );
+    printf("Completed dump of NAND flash page %d.\n", page_no);
+    return 0;
+}
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nflash/nflash_test.h ppc_diag/nflash/nflash_test.h
--- ppc_diag-1.0.2/nflash/nflash_test.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nflash/nflash_test.h	Thu May  1 11:31:27 2003
@@ -0,0 +1,37 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* nflash_test.h
+ * declarations for the NAND flash test functions
+ */
+
+#include "diags.h"
+
+int nand_reset( test_option *t_opts, unsigned int *results );
+int nand_id( test_option *t_opts, unsigned int *results );
+int nand_verify_erase( test_option *t_opts, unsigned int *results );
+int nand_bad_blocks( test_option *t_opts, unsigned int *results );
+int nand_erase_blocks( test_option *t_opts, unsigned int *results );
+int nand_block_write_cb_patna( test_option *t_opts, unsigned int *results );
+int nand_block_write_cb_patnb( test_option *t_opts, unsigned int *results );
+int nand_dump_page( test_option *t_opts, unsigned int *results );
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nvram/.cvsignore ppc_diag/nvram/.cvsignore
--- ppc_diag-1.0.2/nvram/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/nvram/.cvsignore	Thu May  1 11:31:27 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/nvram/.depend ppc_diag/nvram/.depend
--- ppc_diag-1.0.2/nvram/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/nvram/.depend	Mon May 12 14:51:53 2003
@@ -0,0 +1,19 @@
+nvram.o: nvram.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   nvram_menu.h \
+   nvram.h
+nvram_err.o: nvram_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   nvram_menu.h \
+   nvram.h \
+   nvram_err.h
+nvram_menu.o: nvram_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   nvram.h \
+   nvram_err.h \
+   nvram_menu.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/.cvsignore ppc_diag/redbox/.cvsignore
--- ppc_diag-1.0.2/redbox/.cvsignore	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/.cvsignore	Thu May  1 11:31:27 2003
@@ -0,0 +1 @@
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/.depend ppc_diag/redbox/.depend
--- ppc_diag-1.0.2/redbox/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/.depend	Mon May 12 14:51:54 2003
@@ -0,0 +1,22 @@
+redbox_test.o: redbox_test.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/prandm.h \
+   /home/speedy1/build/ppc_diag/includes/gb_dpram_test.h \
+   /home/speedy1/build/ppc_diag/includes/gb_xilinx_test.h \
+   redbox_menu.h \
+   redbox_test.h
+redbox_menu.o: redbox_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/mem_test.h \
+   redbox_test.h \
+   redbox_err.h \
+   redbox_menu.h
+redbox_err.o: redbox_err.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   redbox_menu.h \
+   redbox_err.h \
+   redbox_test.h
+xmit_buf.o: xmit_buf.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/Makefile ppc_diag/redbox/Makefile
--- ppc_diag-1.0.2/redbox/Makefile	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/Makefile	Fri Jan 31 12:45:34 2003
@@ -0,0 +1,65 @@
+#
+# (C) Copyright 2002
+# Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+#
+# See file CREDITS for the list of contributors to this project.
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+MODULENAME = $(shell env ruby -e "puts File.basename Dir.getwd" )
+
+ifeq ($(MODULENAME).list,$(wildcard $(MODULENAME).list))
+include $(MODULENAME).list
+endif
+
+ifneq (.depend,$(wildcard .depend))
+DOTHIS = depend
+else
+include .depend
+endif
+
+all: $(DOTHIS) compile
+
+O = $(subst ",,$(OBJECTS))
+compile: $(O)
+
+depend:
+	echo $(HPATH)
+	eval SRCC='$(C_SOURCES)' ; \
+	eval SRCA='$(AS_SOURCES)' ; \
+	$(MKDEP) -- $$SRCC $$SRCA > .depend
+
+hfiles:
+	ruby -e 'Dir.chdir "$(INCLUDES)"; hs = $(HEADERS); \
+	mn = "$(MODULENAME)"; \
+	if hs.length > 0 then hs.split.each { |hf| \
+	system "ln", "-s", "../#{mn.to_s}/#{hf.to_s}" } end'
+
+prep_output:
+	ruby -e 'ss = $(C_SOURCES); if ss.length > 0 then ss.split.each { |sf| \
+	system "/usr/bin/cpp", "-P", "-I$(INCLUDES)", "-I$(PPCBOOT_INCLUDES)", \
+	"#{sf}", "#{sf}pp"; \
+	system %Q{/bin/grep "[^ \n\t]" #{sf}pp > #{sf}pp.out}; \
+	system "rm", "-f", "#{sf}pp"; } end'
+
+clean:
+	rm -f *.o
+
+distclean:
+	rm -f .depend
+
+.PHONY: depend compile hfiles clean distclean prep_output
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox.list ppc_diag/redbox/redbox.list
--- ppc_diag-1.0.2/redbox/redbox.list	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox.list	Fri May  9 18:44:40 2003
@@ -0,0 +1,11 @@
+# list of redbox test files
+
+HEADERS="redbox_test.h redbox_menu.h redbox_err.h"
+
+AS_SOURCES=
+
+C_SOURCES="redbox_test.c redbox_menu.c redbox_err.c xmit_buf.c"
+
+OBJECTS="redbox_test.o redbox_menu.o redbox_err.o xmit_buf.o"
+
+export HEADERS AS_SOURCES C_SOURCES OBJECTS
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox_err.c ppc_diag/redbox/redbox_err.c
--- ppc_diag-1.0.2/redbox/redbox_err.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox_err.c	Fri May  9 18:40:02 2003
@@ -0,0 +1,80 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* redbox_err.c
+ * pretty-printer for red box error messages
+ */
+
+#include "diags.h"
+#include "printf.h"
+#include "redbox_menu.h"
+#include "redbox_err.h"
+#include "redbox_test.h"
+
+unsigned int redbox_err( unsigned int *results, unsigned int loopnum )
+{
+    int line_num = 0;
+
+    printf("ERROR: In Red Box Menu -> ");
+    switch (results[0])
+    {
+        case RedBoxXmit:
+            printf("Transmit Test ");
+            break;
+        default:
+            printf("Unknown Red Box test %d ", results[0]);
+    }
+    if (loopnum > 0)
+        printf("(Loop %d)", loopnum);
+    printf("\n");
+    ++line_num;
+    if (results[0] == RedBoxXmit)
+    {
+        switch (results[1])
+        {
+            case 0:
+                printf("Failed to transmit test buffer.\n");
+                ++line_num;
+                break;
+            case 1:
+                printf("Failed to receive test buffer.\n");
+                ++line_num;
+                break;
+            case 2:
+                printf("Comparison failure in xmit word %s%08x%s,",
+                        VT100_FAULT_SEQ, results[2], VT100_END_SEQ);
+                printf(" recv word %s%08x%s:\n",
+                        VT100_FAULT_SEQ, results[3], VT100_END_SEQ);
+                ++line_num;
+                printf("\tExpected %s%08x%s, read %s%08x%s\n",
+                        VT100_FAULT_SEQ, results[4], VT100_END_SEQ,
+                        VT100_FAULT_SEQ, results[5], VT100_END_SEQ);
+                ++line_num;
+                break;
+            default:
+                printf("Unknown error %d\n", results[1]);
+                ++line_num;
+        }
+    }
+    return line_num;
+}
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox_err.h ppc_diag/redbox/redbox_err.h
--- ppc_diag-1.0.2/redbox/redbox_err.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox_err.h	Fri May  9 18:40:02 2003
@@ -0,0 +1,28 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* redbox_err.h
+ * declaration for the redbox_err() routine
+ */
+
+unsigned int redbox_err( unsigned int *results, unsigned int loopnum );
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox_menu.c ppc_diag/redbox/redbox_menu.c
--- ppc_diag-1.0.2/redbox/redbox_menu.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox_menu.c	Fri May  9 18:41:41 2003
@@ -0,0 +1,74 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* redbox_menu.c
+ * submenu package definition
+ */
+
+#include "diags.h"
+#include "mem_test.h"
+#include "redbox_test.h"
+#include "redbox_err.h"
+#include "redbox_menu.h"
+
+#ifdef ENABLE_RED_BOX_SUPPORT
+
+extern void empty_function();
+
+test_submenu redbox_submenus[LastTest] =
+{
+    { "Transmit Test", "(Test UFE data reception)", redbox_xmit_test,
+        SEVERE, (BASIC_TEST | BURN_IN_TEST) },
+        /* ^^^^^ basic tests above this line ^^^^^ */
+        /* vvvvv custom tests below this line vvvvv */
+    { "Bank Address Conflicts", "(Check for bank addressing errors)",
+        multibank_read,
+        MINOR, CUSTOM_TEST },
+};
+    
+test_option redbox_options[LastOption] =
+{
+    { "Debug level", 0, "(0=none, !0=print debug statements)" },
+    { "1st buffer base address", DMA_BUFFER_ADDR, "(xmit buf 0 goes here)" },
+    { "Buffer size", 0x2000, "(number of bytes in xmit buffer)" },
+    { "Xmit pattern", PRandom, "(0=0s,1=Fs,2=As,3=5s,4=prand,5=user)" },
+    { "User pattern", 0x1234,  "(instead of simple patterns)" },
+    { "Test time", 10, "(number of secs to xmit data)" },
+};
+
+test_submenu_package redbox_package =
+{
+    "Red Box",
+    "(Test HDB-10 transmission)",
+    EnableSubmenu,
+    LastTest,          /* total number of tests */
+    LastOption,        /* total number of options */
+    empty_function,    /* no init function */
+    redbox_submenus,/* pointer to array of test_submenus */
+    redbox_options, /* pointer to array of test_options */
+//    redbox_err,     /* pretty-print errors function */
+    empty_function,     /* pretty-print errors function */
+    empty_function     /* no clean-up routine necessary */
+};
+
+#endif
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox_menu.h ppc_diag/redbox/redbox_menu.h
--- ppc_diag-1.0.2/redbox/redbox_menu.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox_menu.h	Fri May  9 18:41:41 2003
@@ -0,0 +1,37 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* redbox_menu.h
+ * types and constants meant for the red box test menu
+ */
+
+typedef enum
+{
+    RedBoxXmit, BankAddrConflict, LastTest
+} redbox_test_names;
+
+typedef enum
+{
+    Debug, FirstBufferBase, BufferSize, XmitPattern, UserPattern, TestTime,
+    LastOption
+} redbox_option_names;
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox_test.c ppc_diag/redbox/redbox_test.c
--- ppc_diag-1.0.2/redbox/redbox_test.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox_test.c	Fri May  9 18:44:40 2003
@@ -0,0 +1,411 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/* redbox_test.c
+ * Various HDB-10 transmission tests for diagnosing the redbox
+ */
+
+#include "diags.h"
+#include "ppcboot.h"
+#include "prandm.h"
+#include "gb_dpram_test.h"
+#include "gb_xilinx_test.h"
+#include "redbox_menu.h"
+#include "redbox_test.h"
+
+#ifdef ENABLE_RED_BOX_SUPPORT
+extern volatile int xilinx_xmit_stalled;
+
+int xilinx_xmit_bank_number = -1;
+int xmit_bank_number = -1;
+int xmit_entry_counter = 0;
+xmit_xilinx_buf_q_entry *xmit_buf_ready_q_head = NULL;
+xmit_xilinx_buf_q_entry *xmit_buf_ready_q_tail = NULL;
+
+xmit_xilinx_buf_q_entry xilinx_xmit_buf_q_array[MAX_XMIT_QUEUE_LENGTH];
+
+extern unsigned long *typical_xmit_buf;
+extern unsigned long typical_xmit_buf_len;
+
+#define DBFN "append_xilinx_xmit_DMA_entry()"
+void append_xilinx_xmit_DMA_entry( unsigned int buffer_base, int byte_count )
+{
+    unsigned int dpram_address = GB_DPRAM_BASE_ADDR;
+
+    if (xmit_buf_ready_q_head == NULL)
+    { /* need a new queue */
+        xmit_buf_ready_q_head = &(xilinx_xmit_buf_q_array[0]);
+        xmit_buf_ready_q_tail = &(xilinx_xmit_buf_q_array[0]);
+        xmit_buf_ready_q_head->next = &(xilinx_xmit_buf_q_array[0]);
+        xmit_buf_ready_q_head->prev = &(xilinx_xmit_buf_q_array[0]);
+    }
+    else if (xmit_buf_ready_q_tail == xmit_buf_ready_q_head)
+    { /* only one item in the buffer */
+        xmit_buf_ready_q_tail++; /* increment to next array element */
+        /* array bounds checking */
+        if (xmit_buf_ready_q_tail >=
+                &xilinx_xmit_buf_q_array[MAX_RECV_QUEUE_LENGTH])
+            xmit_buf_ready_q_tail = &(xilinx_xmit_buf_q_array[0]);
+        xmit_buf_ready_q_head->next = xmit_buf_ready_q_tail;
+        xmit_buf_ready_q_head->prev = xmit_buf_ready_q_tail;
+        xmit_buf_ready_q_tail->next = xmit_buf_ready_q_head;
+        xmit_buf_ready_q_tail->prev = xmit_buf_ready_q_head;
+    }
+    else if (xmit_entry_counter >= MAX_XMIT_QUEUE_LENGTH)
+    {
+        printf("Out of buffers in %s!  Aborting DMA xmit queue entry..\n",
+                DBFN);
+        return;
+    }
+    else
+    {
+        xmit_buf_ready_q_tail->next =
+            xmit_buf_ready_q_tail + 1; /* pointer arithmetic */
+        /* array bounds checking */
+        if (xmit_buf_ready_q_tail->next >=
+                &xilinx_xmit_buf_q_array[MAX_XMIT_QUEUE_LENGTH])
+            xmit_buf_ready_q_tail->next = &(xilinx_xmit_buf_q_array[0]);
+        xmit_buf_ready_q_tail->next->prev = xmit_buf_ready_q_tail;
+        xmit_buf_ready_q_tail = xmit_buf_ready_q_tail->next;
+        xmit_buf_ready_q_tail->next = xmit_buf_ready_q_head;
+        xmit_buf_ready_q_head->prev = xmit_buf_ready_q_tail;
+    }
+    /* only need to know the byte count and buffer base address.
+     * The transmit interrupt will calculate the DPRAM base address */
+    xmit_buf_ready_q_tail->sdram_base_address = buffer_base;
+    xmit_buf_ready_q_tail->byte_count = byte_count;
+    xmit_entry_counter++;
+
+    /* check to see if the XILINX transmission has stalled */
+    if (xilinx_xmit_stalled)
+    {
+    }
+}
+#undef DBFN
+
+void init_xmit_pattern( int bank, xmitpatn pattern, int word_count,
+        unsigned int userpatn )
+{
+    unsigned long data = 0;
+    unsigned long *data_p = 0;
+    int i;
+    int count1s = 0, num1s = 0;
+
+    switch (pattern)
+    {
+        case Zeroes:
+            num1s = 0;
+            break;
+        case Ones:
+            data = 0xffff;
+            num1s = 16;
+            break;
+        case OneZero:
+        case ZeroOne:
+            data = (pattern == OneZero) ? 0xaaaa : 0x5555;
+            num1s = 8;
+            break;
+        case PRandom:
+            num1s = 0;
+            sprand( 0 ); /* re-seed pseudo-random number generator */
+            break;
+        case UserDef:
+            num1s = 0;
+            data = (userpatn & 0xffff);
+            for (count1s = 0; count1s < 16; count1s++)
+            {
+                if ((userpatn & (1 << count1s)) != 0)
+                    num1s++;
+            }
+            if (num1s & 0x1)
+                data |= UFE_PARITY;
+            break;
+        case Typical:
+                data_p = (unsigned long*)&typical_xmit_buf;
+            break;
+        case OwnAddr:
+            data = 0xFFFFFFFC;
+            break;
+        default:
+            num1s = 0;
+    }
+
+    select_lp_bank( bank );
+    for (i = 0; i < word_count; i+=4)
+    {
+        if (pattern == PRandom)
+        {
+            num1s = 0;
+            data = (unsigned long)(prand() >> 16);
+            for (count1s = 0; count1s < 16; count1s++)
+            {
+                if ((data & (1 << count1s)) != 0)
+                    num1s++;
+            }
+            if (num1s & 0x1)
+                data |= UFE_PARITY;
+            if ((data & 0x8000) == (data & 0x1))
+                data |= UFE_SYNC;
+        }
+        else if (pattern == Typical)
+        {
+            data = *data_p;
+            data_p++;
+            num1s = 0;
+            for (count1s = 0; count1s < 16; count1s++)
+            {
+                if ((data & (1 << count1s)) != 0)
+                    num1s++;
+            }
+            if (num1s & 0x1)
+                data |= UFE_PARITY;
+        }
+        else if (pattern == OwnAddr)
+        {
+            data += 4;
+            num1s = 0;
+            for (count1s = 0; count1s < 16; count1s++)
+            {
+                if ((data & (1 << count1s)) != 0)
+                    num1s++;
+            }
+            if (num1s & 0x1)
+                data |= UFE_PARITY;
+            else
+                data &= ~(UFE_PARITY);
+        }
+        *(unsigned long*)(GB_DPRAM_BASE_ADDR + (bank * DPRAM_BANK_SIZE) + i) =
+            data;
+    }
+}
+
+void UFE_transmit_test_setup( void )
+{
+    unsigned long *xilinx_ctrl_reg = (unsigned long*)(XILINX_BASE_ADDR +
+        ControlReg);
+
+    xilinx_xmit_bank_number = 0;
+    xmit_bank_number = -1;
+    xmit_buf_ready_q_head = NULL;
+    xmit_buf_ready_q_tail = NULL;
+    xmit_entry_counter = 0;
+    memset( (void*)xilinx_xmit_buf_q_array, 0,
+        sizeof( xmit_xilinx_buf_q_entry ) *
+        MAX_XMIT_QUEUE_LENGTH );
+    /* init the interrupt generation bits in the XILINX ctrl register */
+    *xilinx_ctrl_reg = (XIL_CNTRL_ENA_XMIT_INTR);
+}
+
+int compare_rcv_to_xmit( int xmit_bank, int xmit_size, int recv_bank,
+        unsigned int *results )
+{
+    unsigned int xmit_base_addr = GB_DPRAM_BASE_ADDR +
+        (DPRAM_BANK_SIZE * xmit_bank);
+    unsigned int recv1_base_addr = GB_DPRAM_BASE_ADDR +
+        (DPRAM_BANK_SIZE * recv_bank);
+    int i;
+    volatile unsigned long *recv_effective_addr_p = 0;
+    volatile unsigned long *xmit_effective_addr_p = 0;
+    int failed = 0;
+
+    for (i = 0; i < xmit_size; i += 4)
+    {
+        recv_effective_addr_p = (unsigned long*)(recv1_base_addr + i);
+        xmit_effective_addr_p = (unsigned long*)(xmit_base_addr + i);
+        if ((*xmit_effective_addr_p & 0x1FFFF) !=
+                (*recv_effective_addr_p & 0x1FFFF))
+        {
+            printf("Comparison failure in xmit word %p, recv word %p:\n",
+                    xmit_effective_addr_p, recv_effective_addr_p);
+            printf("\tExpected %08lx, read %08lx\n",
+                    *xmit_effective_addr_p,
+                    *recv_effective_addr_p);
+            results[2] = (unsigned long)xmit_effective_addr_p;
+            results[3] = (unsigned long)recv_effective_addr_p;
+            results[4] = *xmit_effective_addr_p;
+            results[5] = *recv_effective_addr_p;
+            failed = 1;
+            break;
+        }
+    }
+    return failed;
+}
+
+int redbox_xmit_test( test_option *t_opts, unsigned int *results )
+{
+    unsigned long *xilinx_ctrl_reg = (unsigned long*)(XILINX_BASE_ADDR +
+        ControlReg);
+    unsigned long *xilinx_xmit_size_reg =
+        (unsigned long*)(XILINX_BASE_ADDR + (XmitBuffSize*4));
+    unsigned long *xilinx_xmit_base_reg = (unsigned long*)(XILINX_BASE_ADDR +
+        (XmitBuffBase*4));
+    unsigned long *xilinx_status_reg = (unsigned long*)(XILINX_BASE_ADDR +
+        (StatusReg*4));
+    unsigned long *xilinx_recv1_reg = (unsigned long*)(XILINX_BASE_ADDR +                   (RecvBuff1Base*4));
+    unsigned long *xilinx_recv2_reg = (unsigned long*)(XILINX_BASE_ADDR +                   (RecvBuff2Base*4));
+    unsigned long *xilinx_recv_size_reg = (unsigned long*)(XILINX_BASE_ADDR +               (RecvBuffSize*4));
+    int debug = t_opts[Debug].init_value;
+    int xmit_size = t_opts[BufferSize].init_value;
+    xmitpatn pattern = t_opts[XmitPattern].init_value;
+    unsigned int user_pattern = t_opts[UserPattern].init_value;
+    int delay_in_ms = 100;
+    int test_result = 0;
+
+    results[0] = RedBoxXmit;
+    /* initialize xilinx transmit registers, flags, queues, and buffers */
+    UFE_transmit_test_setup();
+    /* use given buffer size for pre-defined data */
+    if (pattern == Typical)
+    {
+        xmit_size = typical_xmit_buf_len * 4;
+        printf("\nLoading Summa data set, size = %d longwords.\n",
+                (xmit_size / 4));
+    }
+    /* initialize DPRAM bank with transmit data */
+    init_xmit_pattern( 2, pattern, xmit_size, user_pattern );
+    /* set up RBUFF 1 and RBUFF 2 base addresses */
+    *xilinx_recv1_reg = 0;
+    *xilinx_recv2_reg = (DPRAM_BANK_SIZE >> 2);
+    *xilinx_recv_size_reg = xmit_size >> 2;
+    if (debug)
+    {
+        printf("\nr1 %08lx size %08lx\n",*xilinx_recv1_reg,
+                *xilinx_recv_size_reg);
+    }
+    if (debug)
+    {
+        printf("ctrl reg: %08lx\n", *xilinx_ctrl_reg);
+    }
+    /* init the interrupt generation bits in the XILINX ctrl register */
+    *xilinx_ctrl_reg |= XIL_CNTRL_ENA_RBUFF1_INTR;
+    *xilinx_ctrl_reg |= XIL_CNTRL_ENA_RECV;
+    /* init the xmit buffer size register in the XILINX */
+    *xilinx_xmit_size_reg = (xmit_size) >> 2;
+    *xilinx_xmit_base_reg = ((DPRAM_BANK_SIZE * 2) >> 2); /* xmit from bank 2 */
+    if (debug)
+    {
+        printf("x %08lx size %08lx\n",*xilinx_xmit_base_reg,
+                *xilinx_xmit_size_reg);
+    }
+    __asm__ ("eieio");
+    /* kick off buffer xmit */
+    *xilinx_ctrl_reg |= XIL_CNTRL_ENA_XMIT_NOW;
+    if (debug)
+    {
+        printf("recv & xmit enabled in ctrl reg: %08lx\n", *xilinx_ctrl_reg);
+    }
+    /* wait for xmit interrupt */
+    for (delay_in_ms = 100; delay_in_ms > 0; delay_in_ms--)
+    {
+        msdelay( 100 );
+        if (*xilinx_status_reg & (XIL_STAT_INT_XBUFF_DONE))
+            break;
+    }
+    if (delay_in_ms <= 0)
+    {
+        printf("Failed to transmit test buffer.\n");
+        results[1] = 0;
+        test_result = 1;
+    }
+    else
+    {
+        if (debug)
+            printf("Status register: %08lx\n", *xilinx_status_reg);
+        for (delay_in_ms = 100; delay_in_ms > 0; delay_in_ms--)
+        {
+            msdelay( 100 );
+            if (*xilinx_status_reg & XIL_STAT_INT_RBUFF1_DONE)
+                break;
+        }
+        /* clean up */
+        UFE_test_cleanup();
+        if (delay_in_ms <= 0)
+        {
+            printf("Failed to receive test buffer.\n");
+            printf("Status register: %08lx\n", *xilinx_status_reg);
+            results[1] = 1;
+            test_result = 1;
+        }
+        else
+        {
+            if (compare_rcv_to_xmit( 2, xmit_size, 0, results ) != 0)
+            {
+                results[1] = 2;
+                test_result = 1;
+            }
+        }
+    }
+    return test_result;
+}
+
+int multibank_read( test_option *t_opts, unsigned int *results )
+{
+    int bank_pattern = t_opts[XmitPattern].init_value;
+    int repeats = t_opts[UserPattern].init_value;
+    int i, j, banks = 0;
+    unsigned int bank_addrs[16], bank_data[16];
+
+    memset( (void*)bank_addrs, 0, sizeof( bank_addrs ) );
+    for (i = 0; i < 16; i++)
+    {
+        if (bank_pattern & (1 << i))
+        {
+            bank_addrs[banks] = GB_DPRAM_BASE_ADDR + (i * DPRAM_BANK_SIZE);
+            banks++;
+        }
+    }
+    printf("\n");
+    for (i = 0; i < repeats; i++)
+    {
+        bank_data[0] = *(unsigned long*)bank_addrs[0];
+        bank_data[1] = *(unsigned long*)bank_addrs[1];
+        bank_data[2] = *(unsigned long*)bank_addrs[2];
+        bank_data[3] = *(unsigned long*)bank_addrs[3];
+        bank_data[4] = *(unsigned long*)bank_addrs[4];
+        bank_data[5] = *(unsigned long*)bank_addrs[5];
+        bank_data[6] = *(unsigned long*)bank_addrs[6];
+        bank_data[7] = *(unsigned long*)bank_addrs[7];
+        bank_data[8] = *(unsigned long*)bank_addrs[8];
+        bank_data[9] = *(unsigned long*)bank_addrs[9];
+        bank_data[10] = *(unsigned long*)bank_addrs[10];
+        bank_data[11] = *(unsigned long*)bank_addrs[11];
+        bank_data[12] = *(unsigned long*)bank_addrs[12];
+        bank_data[13] = *(unsigned long*)bank_addrs[13];
+        bank_data[14] = *(unsigned long*)bank_addrs[14];
+        bank_data[15] = *(unsigned long*)bank_addrs[15];
+        printf("%02d) ", i);
+        for (j = 0; j < banks; j+=2)
+        {
+            if (j > 0)
+                printf("    ");
+            printf("%08x: %08x\t%08x: %08x\n",
+                    bank_addrs[j], bank_data[j],
+                    bank_addrs[j+1], bank_data[j+1]);
+        }
+        for (j = 0; j < 16; j++)
+            bank_addrs[j] += 4;
+    }
+    return 0;
+}
+
+#endif
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/redbox_test.h ppc_diag/redbox/redbox_test.h
--- ppc_diag-1.0.2/redbox/redbox_test.h	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/redbox_test.h	Fri May  9 18:44:40 2003
@@ -0,0 +1,31 @@
+/*
+ * (C) Copyright 2003
+ * Ron Lockwood-Childs, VCT Labs, rchilds@vctlabs.com.
+ *
+ * See file CREDITS for the list of contributors to this project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+typedef enum
+{
+    Zeroes, Ones, OneZero, ZeroOne, PRandom, UserDef, Typical, OwnAddr,
+    LastPattern
+} xmitpatn;
+
+int redbox_xmit_test( test_option *t_opts, unsigned int *results );
+int multibank_read( test_option *t_opts, unsigned int *results );
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/redbox/xmit_buf.c ppc_diag/redbox/xmit_buf.c
--- ppc_diag-1.0.2/redbox/xmit_buf.c	Wed Dec 31 16:00:00 1969
+++ ppc_diag/redbox/xmit_buf.c	Mon May 12 14:12:45 2003
@@ -0,0 +1,1011 @@
+/* xmit_buf.c
+ * Summa-developed message buffer for transmission
+ */
+
+#include "diags.h"
+
+#ifdef ENABLE_RED_BOX_SUPPORT
+
+#define SUMMA_HEADER_WORDS 3970
+
+unsigned long typical_xmit_buf[SUMMA_HEADER_WORDS] =
+{
+    0x00085f78, 0x0000444f, 0x00003045, 0x00003332,
+    0x0000aa25, 0x00001498, 0x00000001, 0x0000004f,
+    0x00004140, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x000010a2, 0x0000e200, 0x00003000,
+    0x00002f37, 0x00003530, 0x0000392f, 0x00003132,
+    0x00003a33, 0x00003432, 0x0000343a, 0x00001c35,
+    0x00004169, 0x00005850, 0x00003832, 0x00002036,
+    0x00005953, 0x00005453, 0x00004d45, 0x00004220,
+    0x00004955, 0x0000444c, 0x00005245, 0x0000202c,
+    0x00003356, 0x0000322e, 0x00002020, 0x00002020,
+    0x00002020, 0x00002020, 0x00002020, 0x00002020,
+    0x00001e37, 0x00002df0, 0x00000020, 0x000007f7,
+    0x000025f0, 0x00000020, 0x00000b20, 0x00000060,
+    0x00000000, 0x000050fe, 0x0000000a, 0x000095b2,
+    0x00000014, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00005740, 0x00002c20, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00009800, 0x0000000d,
+    0x00000020, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000db00, 0x00006006, 0x00007001, 0x0000db01,
+    0x00003006, 0x0000100b, 0x00002057, 0x0000002c,
+    0x00000000, 0x00000000, 0x00000034, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000544,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x000006cb, 0x00000032, 0x00000042,
+    0x000006cb, 0x00000b50, 0x000056e0, 0x00002c20,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00009800,
+    0x0000000d, 0x00000002, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000db00, 0x00006006, 0x00007001,
+    0x0000db01, 0x00000006, 0x0000b000, 0x00002056,
+    0x0000002c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x000005b0, 0x000005a8,
+    0x000005b8, 0x000005b0, 0x00000b70, 0x00005680,
+    0x00002c20, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00009800, 0x00009005,
+    0x0000a005, 0x00009805, 0x00009005, 0x0000500b,
+    0x00002056, 0x0000002c, 0x00000000, 0x00000000,
+    0x0000004c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000003f,
+    0x00000046, 0x00000036, 0x0000003f, 0x00000bb0,
+    0x00005620, 0x00002c20, 0x00000000, 0x00000000,
+    0x00004c00, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00003f00,
+    0x00004600, 0x00003600, 0x00003f00, 0x0000d000,
+    0x0000f00b, 0x00002055, 0x0000002c, 0x00000000,
+    0x00000000, 0x0000004c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000046, 0x00000036, 0x0000003f,
+    0x00000bf0, 0x000055c0, 0x00002c20, 0x00000000,
+    0x00000000, 0x00004c00, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00003f00, 0x00004600, 0x00003600, 0x00003f00,
+    0x00001000, 0x0000900c, 0x00002055, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000003f, 0x00000036, 0x00000046,
+    0x0000003f, 0x00000c30, 0x00005560, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00003f00, 0x00004600, 0x00003600,
+    0x00003f00, 0x00005000, 0x0000300c, 0x00002055,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000003f, 0x00000046,
+    0x00000036, 0x0000003f, 0x00000c70, 0x00005500,
+    0x00002c20, 0x00000000, 0x00000000, 0x00004c00,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00003f00, 0x00003600,
+    0x00004600, 0x00003f00, 0x00009000, 0x0000d00c,
+    0x00002054, 0x0000002c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000003f,
+    0x00000044, 0x00000034, 0x0000003f, 0x00000cb0,
+    0x000054a0, 0x00002c20, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00003f00,
+    0x00004400, 0x00003400, 0x00003f00, 0x0000d000,
+    0x0000700c, 0x00002054, 0x0000002c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000044, 0x00000034, 0x0000003f,
+    0x00000cf0, 0x00005440, 0x00002c20, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00003f00, 0x00004400, 0x00003400, 0x00003f00,
+    0x00001000, 0x0000100d, 0x00002054, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000003f, 0x00000046, 0x00000036,
+    0x0000003f, 0x00000d30, 0x000053e0, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00001000,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00008200, 0x00007a07, 0x00008a07,
+    0x00008207, 0x00005007, 0x0000b00d, 0x00002053,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000094a, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000076a, 0x00000762,
+    0x00000772, 0x0000076a, 0x00000d70, 0x00005380,
+    0x00002c20, 0x00000000, 0x00000000, 0x00004c00,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000b00, 0x00000208,
+    0x00004608, 0x00000b00, 0x00009008, 0x0000500d,
+    0x00002053, 0x0000002c, 0x00000000, 0x00000000,
+    0x0000004c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000003f,
+    0x00000036, 0x00000046, 0x0000003f, 0x00000db0,
+    0x00005320, 0x00002c20, 0x00000000, 0x00000000,
+    0x00004c00, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00003f00,
+    0x00004600, 0x00003600, 0x00003f00, 0x0000d000,
+    0x0000f00d, 0x00002052, 0x0000002c, 0x00000000,
+    0x00000000, 0x0000004c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000036, 0x00000046, 0x0000003f,
+    0x00000df0, 0x000052c0, 0x00002c20, 0x00000000,
+    0x00000000, 0x00004c00, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00003f00, 0x00003600, 0x00004600, 0x00003f00,
+    0x00001000, 0x0000900e, 0x00002052, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000003f, 0x00000046, 0x00000036,
+    0x0000003f, 0x00000e30, 0x00005260, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00003f00, 0x00004600, 0x00003600,
+    0x00003f00, 0x00005000, 0x0000300e, 0x00002052,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000081b, 0x00000812,
+    0x00000046, 0x0000081b, 0x00000e70, 0x00005200,
+    0x00002c20, 0x00000000, 0x00000000, 0x00004c00,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00002800, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00003f00, 0x00003600,
+    0x00004600, 0x00003f00, 0x00009000, 0x0000d00e,
+    0x00002051, 0x0000002c, 0x00000000, 0x00000000,
+    0x0000004c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000082b,
+    0x00000822, 0x00000046, 0x0000082b, 0x00000eb0,
+    0x000051a0, 0x00002c20, 0x00000000, 0x00000000,
+    0x00004c00, 0x00000000, 0x00000000, 0x00000000,
+    0x00005600, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00004300,
+    0x00003b08, 0x00004708, 0x00004300, 0x0000d008,
+    0x0000700e, 0x00002051, 0x0000002c, 0x00000000,
+    0x00000000, 0x0000004c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000056, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000037, 0x00000047, 0x0000003f,
+    0x00000ef0, 0x00005140, 0x00002c20, 0x00000000,
+    0x00000000, 0x00004c00, 0x00000000, 0x00000000,
+    0x00000000, 0x00005600, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00003f00, 0x00003700, 0x00004700, 0x00003f00,
+    0x00001000, 0x0000100f, 0x00002051, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000056, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000003f, 0x00000037, 0x00000047,
+    0x0000003f, 0x00000f30, 0x000050e0, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00005600, 0x00000000,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00003f00, 0x00003700, 0x00004700,
+    0x00003f00, 0x00005000, 0x0000b00f, 0x00002050,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000003f, 0x00000036,
+    0x00000046, 0x0000003f, 0x00000f70, 0x00005080,
+    0x00002c20, 0x00000000, 0x00000000, 0x00004c00,
+    0x00000000, 0x00000000, 0x00000000, 0x00005600,
+    0x00000000, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00003f00, 0x00003700,
+    0x00004700, 0x00003f00, 0x00009000, 0x0000500f,
+    0x00002050, 0x0000002c, 0x00000000, 0x00000000,
+    0x0000004c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000003f,
+    0x00000046, 0x00000036, 0x0000003f, 0x00000fb0,
+    0x00005020, 0x00002c20, 0x00000000, 0x00000000,
+    0x00004c00, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000f300,
+    0x0000ea08, 0x00004608, 0x0000f300, 0x0000d008,
+    0x0000f00f, 0x0000204f, 0x0000002c, 0x00000000,
+    0x00000000, 0x0000004c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000046, 0x00000036, 0x0000003f,
+    0x00000ff0, 0x00004fc0, 0x00002c20, 0x00000000,
+    0x00000000, 0x00004c00, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00003f00, 0x00004600, 0x00003600, 0x00003f00,
+    0x00001000, 0x00009010, 0x0000204f, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000903, 0x000008fa, 0x00000046,
+    0x00000903, 0x00001030, 0x00004f60, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00008300, 0x00007a08, 0x00004608,
+    0x00008300, 0x00005008, 0x00003010, 0x0000204f,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000056,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000003f, 0x00000037,
+    0x00000047, 0x0000003f, 0x00001070, 0x00004f00,
+    0x00002c20, 0x00000000, 0x00000000, 0x00004c00,
+    0x00000000, 0x00000000, 0x00000000, 0x00005600,
+    0x00000000, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000ab00, 0x00003708,
+    0x00004700, 0x0000ab00, 0x00009008, 0x0000d010,
+    0x0000204e, 0x0000002c, 0x00000000, 0x00000000,
+    0x0000004c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000056, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x000008bb,
+    0x00000037, 0x00000047, 0x000008bb, 0x000010b0,
+    0x00004ea0, 0x00002c20, 0x00000000, 0x00000000,
+    0x00004c00, 0x00000000, 0x00000000, 0x00000000,
+    0x00005600, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000b300,
+    0x00003708, 0x00004700, 0x0000b300, 0x0000d008,
+    0x00007010, 0x0000204e, 0x0000002c, 0x00000000,
+    0x00000000, 0x0000004c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000056, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000037, 0x00000047, 0x0000003f,
+    0x000010f0, 0x00004e40, 0x00002c20, 0x00000000,
+    0x00000000, 0x00004c00, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000cb00, 0x0000c208, 0x00004608, 0x0000cb00,
+    0x00001008, 0x00001011, 0x0000204e, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000056, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000003f, 0x00000037, 0x00000047,
+    0x0000003f, 0x00001130, 0x00004de0, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00005600, 0x00000000,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00003f00, 0x00003700, 0x00004700,
+    0x00003f00, 0x00005000, 0x0000b011, 0x0000204d,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000056,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000003f, 0x00000037,
+    0x00000047, 0x0000003f, 0x00001170, 0x00004d80,
+    0x00002c20, 0x00000000, 0x00000000, 0x00004c00,
+    0x00000000, 0x00000000, 0x00000000, 0x00005600,
+    0x00000000, 0x00000000, 0x00000022, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00003f00, 0x00003700,
+    0x00004700, 0x00003f00, 0x00009000, 0x00005011,
+    0x0000204d, 0x0000002c, 0x00000000, 0x00000000,
+    0x0000004c, 0x00000000, 0x00000000, 0x00000000,
+    0x00000056, 0x00000000, 0x00002200, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x0000003f,
+    0x00000037, 0x00000047, 0x0000003f, 0x000011b0,
+    0x00004d20, 0x00002c20, 0x00000000, 0x00000000,
+    0x00004c00, 0x00000000, 0x00000000, 0x00000000,
+    0x00005600, 0x00000000, 0x00000000, 0x00000022,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00003f00,
+    0x00004700, 0x00003700, 0x00003f00, 0x0000d000,
+    0x0000f011, 0x0000204c, 0x0000002c, 0x00000000,
+    0x00000000, 0x0000004c, 0x00000000, 0x00000000,
+    0x00000000, 0x00000056, 0x00000000, 0x00002200,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x0000003f, 0x00000047, 0x00000037, 0x0000003f,
+    0x000011f0, 0x00004cc0, 0x00002c20, 0x00000000,
+    0x00000000, 0x00004c00, 0x00000000, 0x00000000,
+    0x00000000, 0x00005600, 0x00000000, 0x00000000,
+    0x00000022, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00003f00, 0x00004700, 0x00003700, 0x00003f00,
+    0x00001000, 0x00009012, 0x0000204c, 0x0000002c,
+    0x00000000, 0x00000000, 0x0000004c, 0x00000000,
+    0x00000000, 0x00000000, 0x00000056, 0x00000000,
+    0x00002200, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x0000003f, 0x00000037, 0x00000047,
+    0x0000003f, 0x00001230, 0x00004c60, 0x00002c20,
+    0x00000000, 0x00000000, 0x00004c00, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000800,
+    0x00000000, 0x00000022, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00003f00, 0x00003600, 0x00004600,
+    0x00003f00, 0x00005000, 0x00003012, 0x0000204c,
+    0x0000002c, 0x00000000, 0x00000000, 0x0000004c,
+    0x00000000, 0x00000000, 0x00000000, 0x00000056,
+    0x00000000, 0x00002200, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x0000003f, 0x00000037,
+    0x00000047, 0x0000003f, 0x00001270, 0x00002df0,
+    0x00003820, 0x0000001e, 0x00000000, 0x00000000,
+    0x00000000, 0x00003700, 0x0000f01e, 0x0000202d,
+    0x00000092, 0x0000f700, 0x0000f007, 0x00002025,
+    0x00000092, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00002b00, 0x0000e000, 0x00002056,
+    0x00000081, 0x00009800, 0x0000107e, 0x00002d34,
+    0x000000da, 0x00003200, 0x0000d08c, 0x00002ca7,
+    0x000000f2, 0x00009100, 0x0000d0f8, 0x00002ba7,
+    0x000000d6, 0x00000200, 0x0000e000, 0x00002bf9,
+    0x000000fa, 0x00001500, 0x00000000, 0x00000780,
+    0x000000f2, 0x0000c900, 0x00001001, 0x00002bf8,
+    0x000000f0, 0x00000200, 0x00000000, 0x00002bf8,
+    0x000000fa, 0x00008200, 0x00007000, 0x00002bf7,
+    0x000000f2, 0x00000200, 0x00006000, 0x00002bf7,
+    0x000000fa, 0x00008200, 0x0000d000, 0x00002bf6,
+    0x000000f2, 0x00000200, 0x0000c000, 0x00002bf6,
+    0x000000fa, 0x00008200, 0x00003000, 0x00002bf6,
+    0x000000f2, 0x00000200, 0x00002000, 0x00002bf6,
+    0x000000fa, 0x00008200, 0x00009000, 0x00002bf5,
+    0x000000f2, 0x00000200, 0x00008000, 0x00002bf5,
+    0x000000fa, 0x00008200, 0x0000f000, 0x00002bf4,
+    0x000000f2, 0x00000200, 0x0000e000, 0x00002bf4,
+    0x000000fa, 0x00008200, 0x00005000, 0x00002bf4,
+    0x000000f2, 0x00000200, 0x00004000, 0x00002bf4,
+    0x000000fa, 0x00001c00, 0x0000404a, 0x00002c56,
+    0x000000f2, 0x00000200, 0x00003000, 0x00002bf4,
+    0x000000fa, 0x00008000, 0x00008000, 0x00000700,
+    0x000000f2, 0x00000200, 0x00002000, 0x00002bf4,
+    0x000000fa, 0x00008000, 0x00000000, 0x0000e004,
+    0x000000f2, 0x00000200, 0x00001000, 0x00002bf4,
+    0x000000fa, 0x00001a00, 0x00000000, 0x0000e015,
+    0x000000f2, 0x00000200, 0x00000000, 0x00002bf4,
+    0x000000fa, 0x00004000, 0x00000000, 0x0000e014,
+    0x000000f2, 0x00000200, 0x0000f000, 0x00002bf3,
+    0x000000fa, 0x00000000, 0x00000004, 0x0000e010,
+    0x000000f2, 0x00000200, 0x0000e000, 0x00002bf3,
+    0x000000fa, 0x00000000, 0x00000002, 0x0000e00c,
+    0x000000f2, 0x00000200, 0x0000d000, 0x00002bf3,
+    0x000000fa, 0x00000200, 0x0000fe00, 0x0000e1ff,
+    0x000000f2, 0x00000200, 0x0000c000, 0x00002bf3,
+    0x000000fa, 0x00000000, 0x00000004, 0x0000e008,
+    0x000000f2, 0x00002c00, 0x0000ca00, 0x0000bfff,
+    0x000000f2, 0x00002400, 0x00000000, 0x00004182,
+    0x000000f2, 0x00007200, 0x0000401f, 0x00002dc6,
+    0x0000009a, 0x00008000, 0x0000b013, 0x00002db2,
+    0x000000f2, 0x00001b00, 0x0000f0fb, 0x00002aff,
+    0x00000096, 0x00004b00, 0x0000b000, 0x00002bfa,
+    0x0000009a, 0x00008b00, 0x00002000, 0x00002bfa,
+    0x0000009a, 0x0000d400, 0x000020ff, 0x00002afa,
+    0x000000f6, 0x00009600, 0x0000d807, 0x00000205,
+    0x000000e4, 0x0000e000, 0x0000d807, 0x00000005,
+    0x000000e4, 0x00008e00, 0x0000d800, 0x00000405,
+    0x000000e4, 0x00007e00, 0x0000d804, 0x00000105,
+    0x000000e4, 0x00008c00, 0x0000d805, 0x00000105,
+    0x000000e4, 0x00000c00, 0x0000d803, 0x00000305,
+    0x000000e4, 0x00001a00, 0x00003203, 0x00000100,
+    0x000000e4, 0x0000b400, 0x00003202, 0x00000000,
+    0x000000e4, 0x00009e00, 0x00003201, 0x00000100,
+    0x000000e4, 0x0000ee00, 0x0000600b, 0x00000501,
+    0x000000e4, 0x00003600, 0x00006012, 0x00000101,
+    0x000000e4, 0x00006600, 0x00006010, 0x00000101,
+    0x000000e4, 0x00008600, 0x0000600e, 0x00000101,
+    0x000000e4, 0x0000e200, 0x0000601c, 0x00000101,
+    0x000000e4, 0x00003400, 0x00006002, 0x00000501,
+    0x000000e4, 0x00000000, 0x0000e000, 0x00000206,
+    0x000000e4, 0x00000000, 0x0000e800, 0x00000206,
+    0x000000e4, 0x00006a00, 0x0000600f, 0x00000101,
+    0x000000e4, 0x00005600, 0x00006003, 0x00000101,
+    0x000000e4, 0x00000400, 0x00006011, 0x00000001,
+    0x000000e4, 0x0000c800, 0x0000601b, 0x00000201,
+    0x000000e4, 0x0000a200, 0x00006003, 0x00000201,
+    0x000000e4, 0x0000d200, 0x00006003, 0x00000501,
+    0x000000e4, 0x0000fc00, 0x0000600f, 0x00000001,
+    0x000000e4, 0x00006a00, 0x00006000, 0x00000901,
+    0x000000e4, 0x00001800, 0x00006011, 0x00000001,
+    0x000000e4, 0x00000e00, 0x00006014, 0x00000601,
+    0x000000e4, 0x0000aa00, 0x00006006, 0x00000301,
+    0x000000e4, 0x00003a00, 0x00006013, 0x00000001,
+    0x000000e4, 0x00002800, 0x00006011, 0x00000101,
+    0x000000e4, 0x0000b000, 0x00006015, 0x00000501,
+    0x000000e4, 0x00002e00, 0x00006007, 0x00000201,
+    0x000000e4, 0x0000f200, 0x00006007, 0x00000201,
+    0x000000e4, 0x00001200, 0x0000601c, 0x00000201,
+    0x000000e4, 0x0000a600, 0x00006011, 0x00000101,
+    0x000000e4, 0x00001600, 0x0000601e, 0x00000101,
+    0x000000e4, 0x0000d600, 0x00006002, 0x00000601,
+    0x000000e4, 0x00000a00, 0x0000600f, 0x00000201,
+    0x000000e4, 0x00004200, 0x00006006, 0x00000101,
+    0x000000e4, 0x0000d400, 0x00006019, 0x00000001,
+    0x000000e4, 0x0000f200, 0x00006019, 0x00000501,
+    0x000000e4, 0x00004000, 0x0000601d, 0x00000201,
+    0x000000e4, 0x0000f000, 0x0000601a, 0x00000001,
+    0x000000e4, 0x00003600, 0x00006004, 0x00000501,
+    0x000000c4, 0x0000b400, 0x00006004, 0x00000501,
+    0x000000c4, 0x00000e00, 0x00006013, 0x00000101,
+    0x000000c4, 0x00007e00, 0x0000600a, 0x00000401,
+    0x000000c4, 0x00005200, 0x0000600a, 0x00000001,
+    0x000000c4, 0x00001800, 0x0000600a, 0x00000001,
+    0x000000c4, 0x0000c400, 0x00006008, 0x00000001,
+    0x000000c4, 0x00000000, 0x00003200, 0x00000000,
+    0x000000c4, 0x0000b200, 0x0000f201, 0x00000106,
+    0x000000c4, 0x0000be00, 0x00005003, 0x00000207,
+    0x000000e4, 0x00003a00, 0x00005003, 0x00000407,
+    0x000000e4, 0x00000000, 0x00005000, 0x00000407,
+    0x000000e4, 0x00003000, 0x00005006, 0x00000407,
+    0x000000e4, 0x00009000, 0x00005002, 0x00000407,
+    0x000000e4, 0x00009200, 0x00005000, 0x00000407,
+    0x000000e4, 0x0000a800, 0x00005001, 0x00000407,
+    0x000000e4, 0x00007200, 0x00005000, 0x00000507,
+    0x000000e4, 0x0000ea00, 0x00005002, 0x00000107,
+    0x000000e4, 0x0000a800, 0x00005005, 0x00000207,
+    0x000000e4, 0x00002200, 0x00005005, 0x00000407,
+    0x000000e4, 0x0000a000, 0x00005004, 0x00000407,
+    0x000000e4, 0x00004800, 0x00005800, 0x00000007,
+    0x000000e4, 0x00000000, 0x00005800, 0x00000007,
+    0x000000e4, 0x00000000, 0x0000f200, 0x00000306,
+    0x000000e4, 0x0000ca00, 0x00005006, 0x00000c07,
+    0x000000e4, 0x00008a00, 0x0000500f, 0x00000707,
+    0x000000e4, 0x00008c00, 0x00005006, 0x00000307,
+    0x000000e4, 0x00000000, 0x00004200, 0x00000407,
+    0x000000e4, 0x00008600, 0x00004200, 0x00000607,
+    0x000000e4, 0x00001a00, 0x00007a58, 0x00000407,
+    0x000000e4, 0x00007200, 0x00007a74, 0x00000907,
+    0x000000e4, 0x00009200, 0x00007a1b, 0x00000307,
+    0x000000e4, 0x0000fa00, 0x00007a2c, 0x00000507,
+    0x000000e4, 0x00007e00, 0x00007a52, 0x00000707,
+    0x000000e4, 0x0000ae00, 0x00007a31, 0x00000207,
+    0x000000e4, 0x0000ee00, 0x00007a48, 0x00000007,
+    0x000000e4, 0x0000ea00, 0x00007a6e, 0x00000207,
+    0x000000e4, 0x0000e600, 0x00007a26, 0x00000307,
+    0x000000e4, 0x00007000, 0x00007a6a, 0x00000307,
+    0x000000e4, 0x00001a00, 0x00007a26, 0x00000307,
+    0x000000e4, 0x00005400, 0x00007a4f, 0x00000107,
+    0x000000e4, 0x0000fe00, 0x00007a18, 0x00000107,
+    0x000000e4, 0x00009600, 0x00007a44, 0x00000307,
+    0x000000e4, 0x00001600, 0x00007a45, 0x00000207,
+    0x000000e4, 0x00004e00, 0x00007a2e, 0x00000207,
+    0x000000e4, 0x00001e00, 0x00007a30, 0x00000407,
+    0x000000e4, 0x00004400, 0x00007a2f, 0x00000507,
+    0x000000e4, 0x0000ae00, 0x00006204, 0x00000307,
+    0x000000e4, 0x00001c00, 0x00006201, 0x00000507,
+    0x000000e4, 0x00005e00, 0x00006207, 0x00000307,
+    0x000000e4, 0x0000c800, 0x00006205, 0x00000307,
+    0x000000e4, 0x00007200, 0x00006200, 0x00000107,
+    0x000000e4, 0x0000f000, 0x00007a50, 0x00000507,
+    0x000000e4, 0x0000fe00, 0x00007a51, 0x00000007,
+    0x000000e4, 0x0000fc00, 0x00007a15, 0x00000307,
+    0x000000e4, 0x00009600, 0x00007a05, 0x00000707,
+    0x000000e4, 0x00000000, 0x00009200, 0x00000208,
+    0x000000e4, 0x00009a00, 0x00002202, 0x00000108,
+    0x000000e4, 0x00001e00, 0x00002206, 0x00000008,
+    0x000000e4, 0x00009600, 0x00009200, 0x00000508,
+    0x000000e4, 0x00000000, 0x0000d200, 0x00000208,
+    0x000000e4, 0x0000a000, 0x0000221c, 0x00000208,
+    0x000000e4, 0x00003600, 0x00002228, 0x00000108,
+    0x000000e4, 0x0000b400, 0x0000222a, 0x00000008,
+    0x000000e4, 0x00003e00, 0x0000d20d, 0x00000408,
+    0x000000e4, 0x0000ae00, 0x00000208, 0x00000108,
+    0x000000e4, 0x00007400, 0x00009201, 0x00000008,
+    0x000000e4, 0x00007200, 0x0000020e, 0x00000008,
+    0x000000e4, 0x00005800, 0x00000216, 0x00000108,
+    0x000000e4, 0x00004a00, 0x0000d221, 0x00000508,
+    0x000000e4, 0x0000d800, 0x0000d221, 0x00000208,
+    0x000000e4, 0x0000e200, 0x0000d222, 0x00000508,
+    0x000000e4, 0x00009000, 0x0000d223, 0x00000208,
+    0x000000e4, 0x0000e000, 0x0000d202, 0x00000208,
+    0x000000e4, 0x00005e00, 0x0000d207, 0x00000408,
+    0x000000e4, 0x00000600, 0x0000d20b, 0x00000708,
+    0x000000e4, 0x0000bc00, 0x00009201, 0x00000008,
+    0x000000e4, 0x00002a00, 0x0000d21f, 0x00000308,
+    0x000000e4, 0x0000da00, 0x0000d20d, 0x00000308,
+    0x000000e4, 0x00009000, 0x0000d225, 0x00000208,
+    0x000000e4, 0x00006c00, 0x0000d226, 0x00000208,
+    0x000000e4, 0x0000d000, 0x0000c200, 0x00000008,
+    0x000000e4, 0x00009200, 0x0000c207, 0x00000208,
+    0x000000e4, 0x00000c00, 0x0000d224, 0x00000308,
+    0x000000e4, 0x00008c00, 0x0000d224, 0x00000208,
+    0x000000e4, 0x0000e000, 0x00007002, 0x00002bc5,
+    0x0000009a, 0x00006600, 0x00000000, 0x00002bc5,
+    0x00000092, 0x0000c100, 0x000000fe, 0x00002ac5,
+    0x00000096, 0x00003400, 0x0000d001, 0x00002bc9,
+    0x0000009a, 0x00002000, 0x0000a000, 0x00002bc9,
+    0x00000092, 0x0000c100, 0x0000a0fe, 0x00002ac9,
+    0x00000096, 0x00003400, 0x00000056, 0x00002c00,
+    0x0000009a, 0x0000b200, 0x00007014, 0x00002ba2,
+    0x00000092, 0x0000fd00, 0x000040fc, 0x000026fe,
+    0x00000096, 0x00001000, 0x00005008, 0x00002b9a,
+    0x0000009a, 0x00006600, 0x0000c000, 0x000027fa,
+    0x000000f2, 0x00008100, 0x0000c0ff, 0x000026fa,
+    0x00000096, 0x0000c900, 0x00001001, 0x00002bf8,
+    0x000000f0, 0x00009b00, 0x000040ff, 0x00002abe,
+    0x000000d6, 0x00000100, 0x0000c000, 0x00002bbd,
+    0x000000d2, 0x00000700, 0x0000b000, 0x00002bbd,
+    0x000000da, 0x00001500, 0x00000000, 0x00000780,
+    0x000000f2, 0x00009b00, 0x0000c0ff, 0x00002abc,
+    0x000000d6, 0x00000100, 0x00004000, 0x00002bbc,
+    0x000000d2, 0x00000700, 0x00003000, 0x00002bbc,
+    0x000000da, 0x00001c00, 0x0000404a, 0x00002c56,
+    0x000000f2, 0x00008200, 0x00005000, 0x00002bf4,
+    0x000000f2, 0x00008200, 0x0000f000, 0x00002bf4,
+    0x000000f2, 0x00008200, 0x00009000, 0x00002bf5,
+    0x000000f2, 0x00008200, 0x00003000, 0x00002bf6,
+    0x000000f2, 0x00008200, 0x0000d000, 0x00002bf6,
+    0x000000f2, 0x00008200, 0x00007000, 0x00002bf7,
+    0x000000f2, 0x00002400, 0x00000000, 0x00004182,
+    0x000000f2, 0x00000000, 0x00000004, 0x0000e008,
+    0x000000f2, 0x00008000, 0x00000000, 0x0000e004,
+    0x000000f2, 0x00000200, 0x0000fe00, 0x0000e1ff,
+    0x000000f2, 0x00000000, 0x00000002, 0x0000e00c,
+    0x000000f2, 0x00000000, 0x00000004, 0x0000e010,
+    0x000000f2, 0x00004000, 0x00000000, 0x0000e014,
+    0x000000f2, 0x00001a00, 0x00000000, 0x0000e015,
+    0x000000f2, 0x00009b00, 0x0000d0ff, 0x000026fe,
+    0x000000d6, 0x00000100, 0x00005000, 0x000027fe,
+    0x000000d2, 0x00000700, 0x00004000, 0x000027fe,
+    0x000000da, 0x00002c00, 0x0000ca00, 0x0000bfff,
+    0x000000f2, 0x00003200, 0x0000d08c, 0x00002ca7,
+    0x000000f2, 0x00008000, 0x00008000, 0x00000700,
+    0x000000f2, 0x00008000, 0x0000b013, 0x00002db2,
+    0x000000f2, 0x00008b00, 0x00002000, 0x00002bfa,
+    0x0000009a, 0x00004b00, 0x0000b000, 0x00002bfa,
+    0x0000009a, 0x0000fc00, 0x00001003, 0x00002bd7,
+    0x000000da, 0x0000c000, 0x00004001, 0x00002bd5,
+    0x000000f2, 0x0000c500, 0x000040ff, 0x00002ad5,
+    0x000000d6, 0x0000de00, 0x0000f002, 0x00000329,
+    0x0000009a, 0x00002e00, 0x0000c001, 0x00000328,
+    0x000000f2, 0x0000c300, 0x0000c0ff, 0x00000228,
+    0x00000096, 0x00002400, 0x00009011, 0x00002be2,
+    0x0000009a, 0x00006400, 0x00002001, 0x00002be1,
+    0x000000d2, 0x0000f300, 0x000020fd, 0x00002ae1,
+    0x000000d6, 0x00005d00, 0x0000b000, 0x00002bde,
+    0x0000009a, 0x0000ba00, 0x0000f002, 0x00002bdb,
+    0x000000da, 0x0000dc00, 0x00001000, 0x00002bdb,
+    0x000000d2, 0x00002400, 0x00009011, 0x00002be2,
+    0x0000009a, 0x00005d00, 0x0000b000, 0x00002bde,
+    0x0000009a, 0x00002c00, 0x0000700a, 0x000027ea,
+    0x000000da, 0x00009e00, 0x0000d000, 0x000027e9,
+    0x000000d2, 0x00005500, 0x0000d0fe, 0x000026e9,
+    0x000000d6, 0x00003400, 0x0000108f, 0x00002b0b,
+    0x000000da, 0x00009f00, 0x00007016, 0x00002af4,
+    0x000000d2, 0x00007d00, 0x000030fa, 0x000026fa,
+    0x000000d6, 0x00000b00, 0x00006021, 0x00002ad3,
+    0x000000da, 0x00007200, 0x0000e049, 0x00002a89,
+    0x000000d2, 0x0000f500, 0x000020fe, 0x000026e8,
+    0x000000d6, 0x00000000, 0x0000d0f0, 0x00002999,
+    0x000000d2, 0x00001600, 0x0000d092, 0x0000b66d,
+    0x000000d2, 0x00000000, 0x0000c0f0, 0x0000b57d,
+    0x000000d2, 0x00009200, 0x0000100f, 0x0000a17e,
+    0x000000d2, 0x00004c00, 0x0000c000, 0x0000a17d,
+    0x000000d2, 0x00000e00, 0x0000b002, 0x0000a17b,
+    0x000000d2, 0x00008000, 0x00008000, 0x00000700,
+    0x000000d2, 0x00000000, 0x00000080, 0x00004100,
+    0x000000d2, 0x00000400, 0x00003000, 0x000027fa,
+    0x000000d2, 0x00002000, 0x00002400, 0x00004182,
+    0x000000f2, 0x0000ea00, 0x0000009c, 0x0000a000,
+    0x000000f2, 0x0000a800, 0x00009019, 0x00002789,
+    0x000000da, 0x0000c800, 0x00000086, 0x00002800,
+    0x000000f2, 0x0000a500, 0x00009011, 0x00002776,
+    0x000000da, 0x0000d600, 0x0000b034, 0x00002741,
+    0x000000f2, 0x00002600, 0x00001038, 0x000028e7,
+    0x000000da, 0x00003e00, 0x0000d060, 0x00002886,
+    0x000000f2, 0x00008c00, 0x000070d2, 0x000024ed,
+    0x000000f2, 0x0000d300, 0x0000801d, 0x00002722,
+    0x000000fa, 0x00008200, 0x0000f086, 0x0000269b,
+    0x000000f2, 0x00004200, 0x000000da, 0x000025c0,
+    0x000000f2, 0x00000000, 0x000000c0, 0x00002400,
+    0x000000f2, 0x00000000, 0x000070c0, 0x000022a7,
+    0x000000f2, 0x00000000, 0x000060c0, 0x000021e7,
+    0x000000f2, 0x00000000, 0x000050c0, 0x00002127,
+    0x000000f2, 0x00000000, 0x000040c0, 0x00002067,
+    0x000000f2, 0x00003900, 0x00002010, 0x0000a16a,
+    0x000000da, 0x0000ed00, 0x00003022, 0x0000a147,
+    0x000000f2, 0x00002200, 0x0000f000, 0x000027a9,
+    0x000000f2, 0x00009e00, 0x0000a003, 0x00002063,
+    0x000000da, 0x00009200, 0x0000000b, 0x00002058,
+    0x000000f2, 0x00007b00, 0x000000ff, 0x00001f58,
+    0x000000d6, 0x00000c00, 0x0000f002, 0x000027de,
+    0x000000f2, 0x0000c000, 0x0000901a, 0x000027ba,
+    0x000000f2, 0x00001c00, 0x00009001, 0x000027b6,
+    0x000000f2, 0x0000f400, 0x0000d026, 0x00002972,
+    0x000000da, 0x00008200, 0x00004053, 0x0000291f,
+    0x000000f2, 0x00009300, 0x0000a02d, 0x0000237a,
+    0x000000da, 0x00004e00, 0x00005010, 0x0000236a,
+    0x000000f2, 0x00003d00, 0x000050fd, 0x0000226a,
+    0x000000d6, 0x0000a400, 0x0000e014, 0x0000a12e,
+    0x000000da, 0x00002300, 0x0000b08f, 0x0000a09f,
+    0x000000f2, 0x00007600, 0x0000401b, 0x0000b562,
+    0x000000da, 0x00003700, 0x00000062, 0x0000b500,
+    0x000000f2, 0x0000f200, 0x00001015, 0x000024c0,
+    0x000000fa, 0x00008000, 0x00007043, 0x000023ab,
+    0x000000f2, 0x0000a700, 0x000070ff, 0x000022ab,
+    0x000000f6, 0x00008a00, 0x00003001, 0x000023f0,
+    0x000000da, 0x00007100, 0x0000b000, 0x000023ef,
+    0x000000f2, 0x0000eb00, 0x0000b0ff, 0x000022ef,
+    0x000000d6, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00000000, 0x00000000, 0x00000000,
+    0x00000000, 0x00002f00, 0x00004000, 0x00002057,
+    0x00000081, 0x00002f00, 0x00004000, 0x00002057,
+    0x00000092, 0x00003f00, 0x0000b000, 0x00002025,
+    0x00000082, 0x00005f00, 0x0000b000, 0x00002025,
+    0x00000092, 0x00002f00, 0x00001000, 0x00002057,
+    0x00000081, 0x00002f00, 0x00001000, 0x00002057,
+    0x00000092, 0x00004700, 0x00006000, 0x00002025,
+    0x00000082, 0x00004700, 0x00006000, 0x00002025,
+    0x00000092, 0x00002f00, 0x0000b000, 0x00002056,
+    0x00000081, 0x00002f00, 0x0000b000, 0x00002056,
+    0x00000092, 0x00005f00, 0x00000000, 0x00002025,
+    0x00000082, 0x00005f00, 0x00000000, 0x00002025,
+    0x00000092, 0x00002f00, 0x00008000, 0x00002056,
+    0x00000081, 0x00002f00, 0x00008000, 0x00002056,
+    0x00000092, 0x00005f00, 0x0000a000, 0x00002024,
+    0x00000082, 0x00005f00, 0x0000a000, 0x00002024,
+    0x00000092, 0x00002f00, 0x00005000, 0x00002056,
+    0x00000081, 0x00002f00, 0x00005000, 0x00002056,
+    0x00000092, 0x00005f00, 0x00004000, 0x00002024,
+    0x00000082, 0x00005f00, 0x00004000, 0x00002024,
+    0x00000092, 0x00002f00, 0x00002000, 0x00002056,
+    0x00000081, 0x00002f00, 0x00002000, 0x00002056,
+    0x00000092, 0x00005f00, 0x0000e000, 0x00002023,
+    0x00000082, 0x00005f00, 0x0000e000, 0x00002023,
+    0x00000092, 0x00002f00, 0x0000f000, 0x00002055,
+    0x00000081, 0x00002f00, 0x0000f000, 0x00002055,
+    0x00000092, 0x00005f00, 0x00008000, 0x00002023,
+    0x00000082, 0x00005f00, 0x00008000, 0x00002023,
+    0x00000092, 0x00002f00, 0x0000c000, 0x00002055,
+    0x00000081, 0x00002f00, 0x0000c000, 0x00002055,
+    0x00000092, 0x00005f00, 0x00002000, 0x00002023,
+    0x00000082, 0x00005f00, 0x00002000, 0x00002023,
+    0x00000092, 0x00002f00, 0x00009000, 0x00002055,
+    0x00000081, 0x00002f00, 0x00009000, 0x00002055,
+    0x00000092, 0x00005f00, 0x0000c000, 0x00002022,
+    0x00000082, 0x00005f00, 0x0000c000, 0x00002022,
+    0x00000092, 0x00002f00, 0x00006000, 0x00002055,
+    0x00000081, 0x00002f00, 0x00006000, 0x00002055,
+    0x00000092, 0x00005f00, 0x00006000, 0x00002022,
+    0x00000082, 0x00005f00, 0x00006000, 0x00002022,
+    0x00000092, 0x00002f00, 0x00003000, 0x00002055,
+    0x00000081, 0x00002f00, 0x00003000, 0x00002055,
+    0x00000092, 0x00005f00, 0x00000000, 0x00002022,
+    0x00000082, 0x00005f00, 0x00000000, 0x00002022,
+    0x00000092, 0x00002f00, 0x00000000, 0x00002055,
+    0x00000081, 0x00002f00, 0x00000000, 0x00002055,
+    0x00000092, 0x00005f00, 0x0000a000, 0x00002021,
+    0x00000082, 0x00005f00, 0x0000a000, 0x00002021,
+    0x00000092, 0x00002f00, 0x0000d000, 0x00002054,
+    0x00000081, 0x00002f00, 0x0000d000, 0x00002054,
+    0x00000092, 0x00005f00, 0x00004000, 0x00002021,
+    0x00000082, 0x00005f00, 0x00004000, 0x00002021,
+    0x00000092, 0x00002f00, 0x0000a000, 0x00002054,
+    0x00000081, 0x00002f00, 0x0000a000, 0x00002054,
+    0x00000092, 0x00005f00, 0x0000e000, 0x00002020,
+    0x00000082, 0x00005f00, 0x0000e000, 0x00002020,
+    0x00000092, 0x00002f00, 0x00007000, 0x00002054,
+    0x00000081, 0x00002f00, 0x00007000, 0x00002054,
+    0x00000092, 0x00005f00, 0x00008000, 0x00002020,
+    0x00000082, 0x00005f00, 0x00008000, 0x00002020,
+    0x00000092, 0x00002f00, 0x00004000, 0x00002054,
+    0x00000081, 0x00002f00, 0x00004000, 0x00002054,
+    0x00000092, 0x00005f00, 0x00002000, 0x00002020,
+    0x00000082, 0x00005f00, 0x00002000, 0x00002020,
+    0x00000092, 0x00002f00, 0x00001000, 0x00002054,
+    0x00000081, 0x00002f00, 0x00001000, 0x00002054,
+    0x00000092, 0x00005f00, 0x0000c000, 0x0000201f,
+    0x00000082, 0x00005f00, 0x0000c000, 0x0000201f,
+    0x00000092, 0x00002f00, 0x0000e000, 0x00002053,
+    0x00000081, 0x00002f00, 0x0000e000, 0x00002053,
+    0x00000092, 0x00005f00, 0x00006000, 0x0000201f,
+    0x00000082, 0x00005f00, 0x00006000, 0x0000201f,
+    0x00000092, 0x00002f00, 0x0000b000, 0x00002053,
+    0x00000081, 0x00002f00, 0x0000b000, 0x00002053,
+    0x00000092, 0x00005f00, 0x00000000, 0x0000201f,
+    0x00000082, 0x00005f00, 0x00000000, 0x0000201f,
+    0x00000092, 0x00002f00, 0x00008000, 0x00002053,
+    0x00000081, 0x00002f00, 0x00008000, 0x00002053,
+    0x00000092, 0x00005f00, 0x0000a000, 0x0000201e,
+    0x00000082, 0x00005f00, 0x0000a000, 0x0000201e,
+    0x00000092, 0x00002f00, 0x00005000, 0x00002053,
+    0x00000081, 0x00002f00, 0x00005000, 0x00002053,
+    0x00000092, 0x00005f00, 0x00004000, 0x0000201e,
+    0x00000082, 0x00005f00, 0x00004000, 0x0000201e,
+    0x00000092, 0x00002f00, 0x00002000, 0x00002053,
+    0x00000081, 0x00002f00, 0x00002000, 0x00002053,
+    0x00000092, 0x00005f00, 0x0000e000, 0x0000201d,
+    0x00000082, 0x00005f00, 0x0000e000, 0x0000201d,
+    0x00000092, 0x00002f00, 0x0000f000, 0x00002052,
+    0x00000081, 0x00002f00, 0x0000f000, 0x00002052,
+    0x00000092, 0x00005f00, 0x00008000, 0x0000201d,
+    0x00000082, 0x00005f00, 0x00008000, 0x0000201d,
+    0x00000092, 0x00002f00, 0x0000c000, 0x00002052,
+    0x00000081, 0x00002f00, 0x0000c000, 0x00002052,
+    0x00000092, 0x00005f00, 0x00002000, 0x0000201d,
+    0x00000082, 0x00005f00, 0x00002000, 0x0000201d,
+    0x00000092, 0x00002f00, 0x00009000, 0x00002052,
+    0x00000081, 0x00002f00, 0x00009000, 0x00002052,
+    0x00000092, 0x00005f00, 0x0000c000, 0x0000201c,
+    0x00000082, 0x00005f00, 0x0000c000, 0x0000201c,
+    0x00000092, 0x00002f00, 0x00006000, 0x00002052,
+    0x00000081, 0x00002f00, 0x00006000, 0x00002052,
+    0x00000092, 0x00005f00, 0x00006000, 0x0000201c,
+    0x00000082, 0x00005f00, 0x00006000, 0x0000201c,
+    0x00000092, 0x00002f00, 0x00003000, 0x00002052,
+    0x00000081, 0x00002f00, 0x00003000, 0x00002052,
+    0x00000092, 0x00005f00, 0x00000000, 0x0000201c,
+    0x00000082, 0x00005f00, 0x00000000, 0x0000201c,
+    0x00000092, 0x00002f00, 0x00000000, 0x00002052,
+    0x00000081, 0x00002f00, 0x00000000, 0x00002052,
+    0x00000092, 0x00005f00, 0x0000a000, 0x0000201b,
+    0x00000082, 0x00005f00, 0x0000a000, 0x0000201b,
+    0x00000092, 0x00002f00, 0x0000d000, 0x00002051,
+    0x00000081, 0x00002f00, 0x0000d000, 0x00002051,
+    0x00000092, 0x00005f00, 0x00004000, 0x0000201b,
+    0x00000082, 0x00005f00, 0x00004000, 0x0000201b,
+    0x00000092, 0x00002f00, 0x0000a000, 0x00002051,
+    0x00000081, 0x00002f00, 0x0000a000, 0x00002051,
+    0x00000092, 0x00005f00, 0x0000e000, 0x0000201a,
+    0x00000082, 0x00005f00, 0x0000e000, 0x0000201a,
+    0x00000092, 0x00002f00, 0x00007000, 0x00002051,
+    0x00000081, 0x00002f00, 0x00007000, 0x00002051,
+    0x00000092, 0x00005f00, 0x00008000, 0x0000201a,
+    0x00000082, 0x00005f00, 0x00008000, 0x0000201a,
+    0x00000092, 0x00002f00, 0x00004000, 0x00002051,
+    0x00000081, 0x00002f00, 0x00004000, 0x00002051,
+    0x00000092, 0x00005f00, 0x00002000, 0x0000201a,
+    0x00000082, 0x00005f00, 0x00002000, 0x0000201a,
+    0x00000092, 0x00002f00, 0x00001000, 0x00002051,
+    0x00000081, 0x00002f00, 0x00001000, 0x00002051,
+    0x00000092, 0x00005f00, 0x0000c000, 0x00002019,
+    0x00000082, 0x00005f00, 0x0000c000, 0x00002019,
+    0x00000092, 0x00002f00, 0x0000e000, 0x00002050,
+    0x00000081, 0x00002f00, 0x0000e000, 0x00002050,
+    0x00000092, 0x00005f00, 0x00006000, 0x00002019,
+    0x00000082, 0x00005f00, 0x00006000, 0x00002019,
+    0x00000092, 0x00002f00, 0x0000b000, 0x00002050,
+    0x00000081, 0x00002f00, 0x0000b000, 0x00002050,
+    0x00000092, 0x00005f00, 0x00000000, 0x00002019,
+    0x00000082, 0x00005f00, 0x00000000, 0x00002019,
+    0x00000092, 0x00002f00, 0x00008000, 0x00002050,
+    0x00000081, 0x00002f00, 0x00008000, 0x00002050,
+    0x00000092, 0x00005f00, 0x0000a000, 0x00002018,
+    0x00000082, 0x00005f00, 0x0000a000, 0x00002018,
+    0x00000092, 0x00002f00, 0x00005000, 0x00002050,
+    0x00000081, 0x00002f00, 0x00005000, 0x00002050,
+    0x00000092, 0x00005f00, 0x00004000, 0x00002018,
+    0x00000082, 0x00005f00, 0x00004000, 0x00002018,
+    0x00000092, 0x00002f00, 0x00002000, 0x00002050,
+    0x00000081, 0x00002f00, 0x00002000, 0x00002050,
+    0x00000092, 0x00005f00, 0x0000e000, 0x00002017,
+    0x00000082, 0x00005f00, 0x0000e000, 0x00002017,
+    0x00000092, 0x00002f00, 0x0000f000, 0x0000204f,
+    0x00000081, 0x00002f00, 0x0000f000, 0x0000204f,
+    0x00000092, 0x00005f00, 0x00008000, 0x00002017,
+    0x00000082, 0x00005f00, 0x00008000, 0x00002017,
+    0x00000092, 0x00002f00, 0x0000c000, 0x0000204f,
+    0x00000081, 0x00002f00, 0x0000c000, 0x0000204f,
+    0x00000092, 0x00005f00, 0x00002000, 0x00002017,
+    0x00000082, 0x00005f00, 0x00002000, 0x00002017,
+    0x00000092, 0x00002f00, 0x00009000, 0x0000204f,
+    0x00000081, 0x00002f00, 0x00009000, 0x0000204f,
+    0x00000092, 0x00005f00, 0x0000c000, 0x00002016,
+    0x00000082, 0x00005f00, 0x0000c000, 0x00002016,
+    0x00000092, 0x00002f00, 0x00006000, 0x0000204f,
+    0x00000081, 0x00002f00, 0x00006000, 0x0000204f,
+    0x00000092, 0x00005f00, 0x00006000, 0x00002016,
+    0x00000082, 0x00005f00, 0x00006000, 0x00002016,
+    0x00000092, 0x00002f00, 0x00003000, 0x0000204f,
+    0x00000081, 0x00002f00, 0x00003000, 0x0000204f,
+    0x00000092, 0x00005f00, 0x00000000, 0x00002016,
+    0x00000082, 0x00005f00, 0x00000000, 0x00002016,
+    0x00000092, 0x00002f00, 0x00000000, 0x0000204f,
+    0x00000081, 0x00002f00, 0x00000000, 0x0000204f,
+    0x00000092, 0x00005f00, 0x0000a000, 0x00002015,
+    0x00000082, 0x00005f00, 0x0000a000, 0x00002015,
+    0x00000092, 0x00002f00, 0x0000d000, 0x0000204e,
+    0x00000081, 0x00002f00, 0x0000d000, 0x0000204e,
+    0x00000092, 0x00005f00, 0x00004000, 0x00002015,
+    0x00000082, 0x00005f00, 0x00004000, 0x00002015,
+    0x00000092, 0x00002f00, 0x0000a000, 0x0000204e,
+    0x00000081, 0x00002f00, 0x0000a000, 0x0000204e,
+    0x00000092, 0x00005f00, 0x0000e000, 0x00002014,
+    0x00000082, 0x00005f00, 0x0000e000, 0x00002014,
+    0x00000092, 0x00002f00, 0x00007000, 0x0000204e,
+    0x00000081, 0x00002f00, 0x00007000, 0x0000204e,
+    0x00000092, 0x00005f00, 0x00008000, 0x00002014,
+    0x00000082, 0x00005f00, 0x00008000, 0x00002014,
+    0x00000092, 0x00002f00, 0x00004000, 0x0000204e,
+    0x00000081, 0x00002f00, 0x00004000, 0x0000204e,
+    0x00000092, 0x00005f00, 0x00002000, 0x00002014,
+    0x00000082, 0x00005f00, 0x00002000, 0x00002014,
+    0x00000092, 0x00002f00, 0x00001000, 0x0000204e,
+    0x00000081, 0x00002f00, 0x00001000, 0x0000204e,
+    0x00000092, 0x00005f00, 0x0000c000, 0x00002013,
+    0x00000082, 0x00005f00, 0x0000c000, 0x00002013,
+    0x00000092, 0x00002f00, 0x0000e000, 0x0000204d,
+    0x00000081, 0x00002f00, 0x0000e000, 0x0000204d,
+    0x00000092, 0x00005f00, 0x00006000, 0x00002013,
+    0x00000082, 0x00005f00, 0x00006000, 0x00002013,
+    0x00000092, 0x00002f00, 0x0000b000, 0x0000204d,
+    0x00000081, 0x00002f00, 0x0000b000, 0x0000204d,
+    0x00000092, 0x00005f00, 0x00000000, 0x00002013,
+    0x00000082, 0x00005f00, 0x00000000, 0x00002013,
+    0x00000092, 0x00002f00, 0x00008000, 0x0000204d,
+    0x00000081, 0x00002f00, 0x00008000, 0x0000204d,
+    0x00000092, 0x00005f00, 0x0000a000, 0x00002012,
+    0x00000082, 0x00005f00, 0x0000a000, 0x00002012,
+    0x00000092, 0x00002f00, 0x00005000, 0x0000204d,
+    0x00000081, 0x00002f00, 0x00005000, 0x0000204d,
+    0x00000092, 0x00005f00, 0x00004000, 0x00002012,
+    0x00000082, 0x00005f00, 0x00004000, 0x00002012,
+    0x00000092, 0x00002f00, 0x00002000, 0x0000204d,
+    0x00000081, 0x00002f00, 0x00002000, 0x0000204d,
+    0x00000092, 0x00005f00, 0x0000e000, 0x00002011,
+    0x00000082, 0x00005f00, 0x0000e000, 0x00002011,
+    0x00000092, 0x00002f00, 0x0000f000, 0x0000204c,
+    0x00000081, 0x00002f00, 0x0000f000, 0x0000204c,
+    0x00000092, 0x00005f00, 0x00008000, 0x00002011,
+    0x00000082, 0x00005f00, 0x00008000, 0x00002011,
+    0x00000092, 0x00002f00, 0x0000c000, 0x0000204c,
+    0x00000081, 0x00002f00, 0x0000c000, 0x0000204c,
+    0x00000092, 0x00005f00, 0x00002000, 0x00002011,
+    0x00000082, 0x00005f00, 0x00002000, 0x00002011,
+    0x00000092, 0x00088001
+};
+
+unsigned long typical_xmit_buf_len = SUMMA_HEADER_WORDS;
+
+#endif
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/reg/.cvsignore ppc_diag/reg/.cvsignore
--- ppc_diag-1.0.2/reg/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/reg/.cvsignore	Thu May  1 11:31:27 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/reg/.depend ppc_diag/reg/.depend
--- ppc_diag-1.0.2/reg/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/reg/.depend	Mon May 12 14:51:54 2003
@@ -0,0 +1,8 @@
+reg_test.o: reg_test.c \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   reg_err.h \
+   reg_test.h
+reg_menu.o: reg_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   reg_menu.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/reg/reg_test.c ppc_diag/reg/reg_test.c
--- ppc_diag-1.0.2/reg/reg_test.c	Thu Jan  9 16:27:47 2003
+++ ppc_diag/reg/reg_test.c	Thu May  1 11:31:27 2003
@@ -385,3 +385,26 @@
     return rc;
 }
 
+void dump_regs( reg_set_info *rsi )
+{
+    unsigned long reg_address = 0;
+    int i;
+
+    for (i = 0; i < rsi->num_regs; i++)
+    {
+        reg_address = rsi->addr_base + rsi->rti_array[i].addr_offset;
+        printf("[%08lx] %-40s:  ", reg_address, rsi->rti_array[i].reg_name);
+        switch (rsi->addr_size)
+        {
+            case 1:
+                printf("%02x\n", *(volatile unsigned char*)reg_address);
+                break;
+            case 2:
+                printf("%04x\n", *(volatile unsigned short*)reg_address);
+                break;
+            default:
+                printf("%08lx\n", *(volatile unsigned long*)reg_address);
+        }
+    }
+}
+
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/reg/reg_test.h ppc_diag/reg/reg_test.h
--- ppc_diag-1.0.2/reg/reg_test.h	Thu Jan  9 16:27:47 2003
+++ ppc_diag/reg/reg_test.h	Thu May  1 11:31:27 2003
@@ -47,4 +47,5 @@
 } reg_set_info;
 
 int reg_test( unsigned int *results, reg_set_info *rsi, int debug );
+void dump_regs( reg_set_info *rsi );
 
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/rtc/.cvsignore ppc_diag/rtc/.cvsignore
--- ppc_diag-1.0.2/rtc/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/rtc/.cvsignore	Thu May  1 11:31:27 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/rtc/.depend ppc_diag/rtc/.depend
--- ppc_diag-1.0.2/rtc/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/rtc/.depend	Mon May 12 14:51:54 2003
@@ -0,0 +1,16 @@
+rtc.o: rtc.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   date.h \
+   rtc_menu.h \
+   rtc.h
+date.o: date.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   rtc.h \
+   date.h
+rtc_menu.o: rtc_menu.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   rtc.h \
+   rtc_menu.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/scc_eth/.cvsignore ppc_diag/scc_eth/.cvsignore
--- ppc_diag-1.0.2/scc_eth/.cvsignore	Fri Jan  3 11:07:23 2003
+++ ppc_diag/scc_eth/.cvsignore	Thu May  1 11:31:27 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/scc_eth/.depend ppc_diag/scc_eth/.depend
--- ppc_diag-1.0.2/scc_eth/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/scc_eth/.depend	Mon May 12 14:51:54 2003
@@ -0,0 +1,7 @@
+scc.o: scc.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/commproc.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/net.h \
+   scc.h \
+   $(wildcard /home/speedy1/build/ppc_diag/includes/config/scc/enet/no/broadcast.h)
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/system/.cvsignore ppc_diag/system/.cvsignore
--- ppc_diag-1.0.2/system/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/system/.cvsignore	Thu May  1 11:31:27 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/system/.depend ppc_diag/system/.depend
--- ppc_diag-1.0.2/system/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/system/.depend	Mon May 12 14:51:55 2003
@@ -0,0 +1,36 @@
+string.o: string.c \
+   string.h
+vsprintf.o: vsprintf.c \
+   stdarg.h \
+   string.h \
+   /home/speedy1/build/ppc_diag/includes/limits.h \
+   kernel.h \
+   div64.h
+printf.o: printf.c \
+   stdarg.h \
+   string.h \
+   ppcboot.h \
+   printf.h
+time.o: time.c \
+   ppcboot.h
+cpu.o: cpu.c \
+   ppcboot.h \
+   mpc8xx.h
+dboard_cfg.o: dboard_cfg.c \
+   ppcboot.h \
+   dboard_cfg.h
+timer.o: timer.c \
+   ppcboot.h \
+   timer.h
+interrupts.o: interrupts.c \
+   ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/commproc.h \
+   printf.h \
+   opcodes.h \
+   interrupts.h
+ticks.o: ticks.S \
+   /home/speedy1/build/ppc_diag/includes/ppc_asm.tmpl
+cache.o: cache.S \
+   /home/speedy1/build/ppc_diag/includes/ppc_asm.tmpl \
+   mmu.h \
+   cache.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/system/config.h ppc_diag/system/config.h
--- ppc_diag-1.0.2/system/config.h	Fri Feb  7 14:42:05 2003
+++ ppc_diag/system/config.h	Fri May  9 18:46:31 2003
@@ -42,6 +42,9 @@
 /* enable testing and use of an external NVRAM */
 #define ENABLE_NVRAM_SUPPORT
 
+/* enable testing of a NAND flash device */
+#define ENABLE_NAND_FLASH_SUPPORT
+
 /* keep a system journal in NVRAM */
 #ifdef ENABLE_NVRAM_SUPPORT
 #  define ENABLE_NVRAM_JOURNAL
@@ -63,6 +66,21 @@
 /* COMMON BOARD CONSTANTS */
 /* ========================================================================== */
 
+/* Uncomment the following #define for systems w/o PIT/RTC 32.768 KHz input */
+/*
+#define CPU_CLOCK_RATE 50000000L
+*/
+
+/* Ratio of bus speed to CPU speed (used for ethernet initialization) */
+#define BUS_CLOCK_RATIO 1
+
+/* Serial port is on SMC1 */
+#define SERIAL_SMC 1
+/* For a board with SCC serial, uncomment the following #define, set the SCC #,
+ * and comment out the #define SERIAL_SMC line above
+#define SERIAL_SCC 1
+*/
+
 /* LED base address */
 #define LED_BASE_ADDR   0xd1380000
 
@@ -121,11 +139,35 @@
 /* daughterboard containing FPGAs and DPRAM */
 #define ENABLE_GREEN_BOX_SUPPORT
 
+/* Green Box with transmit capability */
+#define ENABLE_RED_BOX_SUPPORT
+
 /* RTC base address (in our case, same as NVRAM) */
 #define RTC_BASE_ADDR       0xD1000000
 
 /* Location in the Dallas RTC to find the clock */
 #define RTC_TIME_BASE_ADDR  0xD1007ff8
+
+/* Control signal register for the NAND flash (shared with LED register) */
+#define NFLASH_CTRL_ADDR 0xd1380000
+
+/* I/O address for the NAND flash */
+#define NFLASH_IO_ADDR 0xd1100000
+
+/* NAND flash control signals */
+#define NFLASH_CE        (1 << 7)
+#define NFLASH_WP        (1 << 6)
+#define NFLASH_CLE       (1 << 5)
+#define NFLASH_ALE       (1 << 4)
+
+#define NFLASH_SETCE(mirror)  mirror |= NFLASH_CE
+#define NFLASH_CLRCE(mirror)  mirror &= ~(NFLASH_CE)
+#define NFLASH_SETCLE(mirror) mirror |= NFLASH_CLE
+#define NFLASH_CLRCLE(mirror) mirror &= ~(NFLASH_CLE)
+#define NFLASH_SETALE(mirror) mirror |= NFLASH_ALE
+#define NFLASH_CLRALE(mirror) mirror &= ~(NFLASH_ALE)
+#define NFLASH_WPON(mirror)   mirror &= ~(NFLASH_WP)
+#define NFLASH_WPOFF(mirror)  mirror |= NFLASH_WP
 
 /* Base address to the daughterboard dual-port RAM */
 #define GB_DPRAM_BASE_ADDR  0xA0000000
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/system/cpu.c ppc_diag/system/cpu.c
--- ppc_diag-1.0.2/system/cpu.c	Mon Sep  9 12:34:30 2002
+++ ppc_diag/system/cpu.c	Thu May  1 11:31:27 2003
@@ -37,6 +37,8 @@
 #include "mpc8xx.h"
 
 #define CFG_RESET_ADDRESS 0xFFFFFFFF
+
+extern ulong cpu_speed; /* from entry/diag_init.c */
 /* ------------------------------------------------------------------------- */
 
 int do_reset ()
@@ -77,12 +79,12 @@
 	ulong oscclk, factor;
 
 	if (immr->im_clkrst.car_sccr & SCCR_TBS) {
-		return (idata->cpu_clk / 16);
+		return (cpu_speed / 16);
 	}
 
 	factor = (((CFG_PLPRCR) & PLPRCR_MF_MSK) >> PLPRCR_MF_SHIFT) + 1;
 
-	oscclk = idata->cpu_clk / factor;
+	oscclk = cpu_speed / factor;
 
 	if ((immr->im_clkrst.car_sccr & SCCR_RTSEL) == 0 || factor > 2) {
 		return (oscclk / 4);
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/system/diags.h ppc_diag/system/diags.h
--- ppc_diag-1.0.2/system/diags.h	Fri Feb  7 14:25:09 2003
+++ ppc_diag/system/diags.h	Fri May  9 18:48:05 2003
@@ -46,9 +46,6 @@
 
 #define ONE_MEG 0x0100000L
 
-#define CPU_CLOCK_RATE 50000000L
-#define BUS_CLOCK_RATE CPU_CLOCK_RATE
-
 #define ALL_TESTS     0
 #define POWER_UP_TEST 0x1
 #define BASIC_TEST    0x2
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/util/.cvsignore ppc_diag/util/.cvsignore
--- ppc_diag-1.0.2/util/.cvsignore	Fri Jan  3 10:40:06 2003
+++ ppc_diag/util/.cvsignore	Thu May  1 11:31:27 2003
@@ -1 +1 @@
-Makefile .depend .*.swp *.out
+Makefile .depend .*.swp *.out *.dmp
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/util/.depend ppc_diag/util/.depend
--- ppc_diag-1.0.2/util/.depend	Wed Dec 31 16:00:00 1969
+++ ppc_diag/util/.depend	Mon May 12 14:51:55 2003
@@ -0,0 +1,23 @@
+speed.o: speed.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/mpc8xx.h \
+   speed.h
+mem_calc.o: mem_calc.c \
+   /home/speedy1/build/ppc_diag/includes/ppcboot.h \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   mem_calc.h
+mem_display.o: mem_display.c \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/string.h
+prandm.o: prandm.c \
+   prandm.h
+pkt_stat.o: pkt_stat.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h
+detect_db.o: detect_db.c \
+   /home/speedy1/build/ppc_diag/includes/diags.h \
+   /home/speedy1/build/ppc_diag/includes/printf.h \
+   /home/speedy1/build/ppc_diag/includes/center.h \
+   /home/speedy1/build/ppc_diag/includes/gb_xilinx_test.h \
+   detect_db.h
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/util/detect_db.c ppc_diag/util/detect_db.c
--- ppc_diag-1.0.2/util/detect_db.c	Thu Jan  9 16:27:48 2003
+++ ppc_diag/util/detect_db.c	Mon May 12 14:12:45 2003
@@ -36,22 +36,21 @@
 void display_green_box_info()
 {
     unsigned long *xil_version_reg = (unsigned long*)(XILINX_BASE_ADDR +
-            (XILVersions*4));
+            (StatusReg*4));
     char one_line[81];
-    int hxctl_ver = 0, xman_ver = 0;
+    int hxctl_ver = 0;
 
     hxctl_ver = ((*xil_version_reg & HXCTL_REV_MASK) >> HXCTL_REV_SHIFT);
-    xman_ver  = (*xil_version_reg & XMAN_REV_MASK);
     snprintf( one_line, 81,
-            "HDB-10 interface attached.  hxctl rev.: %03x, xman rev.: %03x\n",
-            hxctl_ver, xman_ver );
+            "HDB-10 interface attached.  hxctl rev.: %02x\n",
+            hxctl_ver );
     center_string( one_line );
 }
 
 void detect_green_box()
 {
     unsigned long *xil_version_reg = (unsigned long*)(XILINX_BASE_ADDR +
-            (XILVersions*4));
+            (StatusReg*4));
 
     if ((*xil_version_reg & GREEN_BOX_ID_MASK) == GREEN_BOX_ID)
         green_box_present = 1;
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/util/mem_calc.c ppc_diag/util/mem_calc.c
--- ppc_diag-1.0.2/util/mem_calc.c	Thu Jan  9 16:27:48 2003
+++ ppc_diag/util/mem_calc.c	Thu May  1 11:31:27 2003
@@ -33,7 +33,7 @@
 
 /* simple-minded memory sizing routine: keep writing up one megabyte at a
  * time until it wraps back around to the base address */
-ulong calculate_memory_size( int display )
+ulong calculate_memory_size( int max_in_mb, int display )
 {
     ulong memory_location = 0;
     ulong temp0 = 0, temp = 0;
@@ -51,7 +51,7 @@
     temp0 = *(ulong *)SDRAM_BASE_ADDR; /* keep what's living at address 0 */
     *(ulong *)SDRAM_BASE_ADDR = 0xdeadbeef; /* unlikely to match */
     for (memory_location = SDRAM_BASE_ADDR + ONE_MEG;
-            memory_location < (SDRAM_BASE_ADDR + (512 * ONE_MEG));
+            memory_location < (SDRAM_BASE_ADDR + (max_in_mb * ONE_MEG));
             memory_location += ONE_MEG )
     {
         /* save the previous contents at this location */
diff --exclude=includes --exclude=CVS -urN ppc_diag-1.0.2/util/mem_calc.h ppc_diag/util/mem_calc.h
--- ppc_diag-1.0.2/util/mem_calc.h	Thu Jan  9 16:27:48 2003
+++ ppc_diag/util/mem_calc.h	Thu May  1 11:31:27 2003
@@ -24,5 +24,5 @@
  * declaration for calculate_memory_size()
  */
 
-ulong calculate_memory_size( int display );
+ulong calculate_memory_size( int max_in_mb, int display );
 
